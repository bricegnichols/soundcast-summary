<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0315.0125                                -->
<workbook source-build='9.3.0 (9300.16.0315.0125)' source-platform='win' version='9.3' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='Soundcast-Daysim-Only' path='/workbooks' revision='1.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.3'>
      <aliases enabled='yes' />
      <column caption='survey' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;survey&quot;'>
        <calculation class='tableau' formula='&quot;survey&quot;' />
        <members>
          <member value='&quot;soundcast&quot;' />
          <member value='&quot;survey&quot;' />
          <member value='&quot;TransportationFutures2010&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='time_of_day' inline='true' name='textscan.0gez7c91i1v0ur16inimo1jblygy' version='9.3'>
      <connection class='textscan' directory='J:/Projects/Soundcast/soundcast_dashboard/model_output' filename='time_of_day.csv' password='' server=''>
        <relation name='time_of_day.csv' table='[time_of_day#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='deptm_hr' ordinal='1' />
            <column datatype='real' name='trip_deptm' ordinal='2' />
            <column datatype='integer' name='tod' ordinal='3' />
            <column datatype='integer' name='arrtm_hr' ordinal='4' />
            <column datatype='real' name='trip_arrtm' ordinal='5' />
            <column datatype='string' name='source' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[time_of_day.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deptm_hr</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deptm_hr]</local-name>
            <parent-name>[time_of_day.csv]</parent-name>
            <remote-alias>deptm_hr</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_deptm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_deptm]</local-name>
            <parent-name>[time_of_day.csv]</parent-name>
            <remote-alias>trip_deptm</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tod</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tod]</local-name>
            <parent-name>[time_of_day.csv]</parent-name>
            <remote-alias>tod</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arrtm_hr</remote-name>
            <remote-type>20</remote-type>
            <local-name>[arrtm_hr]</local-name>
            <parent-name>[time_of_day.csv]</parent-name>
            <remote-alias>arrtm_hr</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_arrtm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_arrtm]</local-name>
            <parent-name>[time_of_day.csv]</parent-name>
            <remote-alias>trip_arrtm</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[time_of_day.csv]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[time_of_day.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Deptm Hr (group)]' role='dimension' type='ordinal'>
        <calculation class='categorical-bin' column='[deptm_hr]'>
          <bin value='0'>
            <value>0</value>
            <value>1</value>
            <value>2</value>
            <value>3</value>
            <value>4</value>
            <value>5</value>
            <value>20</value>
            <value>21</value>
            <value>22</value>
            <value>23</value>
          </bin>
          <bin value='6'>
            <value>6</value>
            <value>7</value>
            <value>8</value>
          </bin>
          <bin value='9'>
            <value>9</value>
            <value>10</value>
            <value>11</value>
            <value>12</value>
            <value>13</value>
            <value>14</value>
          </bin>
          <bin value='15'>
            <value>15</value>
            <value>16</value>
            <value>17</value>
          </bin>
          <bin value='18'>
            <value>18</value>
            <value>19</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='0' value='NI' />
          <alias key='6' value='AM' />
          <alias key='9' value='MD' />
          <alias key='15' value='PM' />
          <alias key='18' value='EV' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Arrtm Hr' datatype='integer' name='[arrtm_hr]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Deptm Hr' datatype='integer' name='[deptm_hr]' role='dimension' type='ordinal' />
      <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      <column caption='Tod' datatype='integer' name='[tod]' role='measure' type='quantitative' />
      <column caption='Trip Arrtm' datatype='real' name='[trip_arrtm]' role='measure' type='quantitative' />
      <column caption='Trip Deptm' datatype='real' name='[trip_deptm]' role='measure' type='quantitative' />
      <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='J:\Projects\Soundcast\soundcast_dashboard\model_output\time_of_day.tde' schema='Extract' tablename='Extract' update-time='10/28/2016 07:55:19 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Deptm Hr (group)]' formula='CASE [deptm_hr]&#10;  WHEN 0 THEN 0&#10;  WHEN 1 THEN 0&#10;  WHEN 2 THEN 0&#10;  WHEN 3 THEN 0&#10;  WHEN 4 THEN 0&#10;  WHEN 5 THEN 0&#10;  WHEN 20 THEN 0&#10;  WHEN 21 THEN 0&#10;  WHEN 22 THEN 0&#10;  WHEN 23 THEN 0&#10;  WHEN 6 THEN 6&#10;  WHEN 7 THEN 6&#10;  WHEN 8 THEN 6&#10;  WHEN 9 THEN 9&#10;  WHEN 10 THEN 9&#10;  WHEN 11 THEN 9&#10;  WHEN 12 THEN 9&#10;  WHEN 13 THEN 9&#10;  WHEN 14 THEN 9&#10;  WHEN 15 THEN 15&#10;  WHEN 16 THEN 15&#10;  WHEN 17 THEN 15&#10;  WHEN 18 THEN 18&#10;  WHEN 19 THEN 18&#10;  ELSE [deptm_hr]&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='96' timestamp-start='2016-10-28 19:55:19.150' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>time_of_day.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1104.0</statistic>
                <statistic aggregation='Avg' datatype='real'>11.5</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>23</statistic>
                <statistic aggregation='Stdev' datatype='real'>6.9585237393845931</statistic>
                <statistic aggregation='StdevP' datatype='real'>6.9221865524317288</statistic>
                <statistic aggregation='Var' datatype='real'>48.421052631578945</statistic>
                <statistic aggregation='VarP' datatype='real'>47.916666666666664</statistic>
                <statistic aggregation='Count' datatype='integer'>96</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>17296.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>96.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>96</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>96.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>arrtm_hr</remote-name>
              <remote-type>16</remote-type>
              <local-name>[arrtm_hr]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>arrtm_hr</remote-alias>
              <ordinal>2</ordinal>
              <family>time_of_day.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1104.0</statistic>
                <statistic aggregation='Avg' datatype='real'>11.5</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>23</statistic>
                <statistic aggregation='Stdev' datatype='real'>6.9585237393845931</statistic>
                <statistic aggregation='StdevP' datatype='real'>6.9221865524317288</statistic>
                <statistic aggregation='Var' datatype='real'>48.421052631578945</statistic>
                <statistic aggregation='VarP' datatype='real'>47.916666666666664</statistic>
                <statistic aggregation='Count' datatype='integer'>96</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>17296.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Deptm Hr (group)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Deptm Hr (group)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Deptm Hr (group)</remote-alias>
              <ordinal>3</ordinal>
              <family>time_of_day.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>612.0</statistic>
                <statistic aggregation='Avg' datatype='real'>6.375</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>18</statistic>
                <statistic aggregation='Stdev' datatype='real'>6.2966156323101563</statistic>
                <statistic aggregation='StdevP' datatype='real'>6.2637349081837748</statistic>
                <statistic aggregation='Var' datatype='real'>39.647368421052633</statistic>
                <statistic aggregation='VarP' datatype='real'>39.234375</statistic>
                <statistic aggregation='Count' datatype='integer'>96</statistic>
                <statistic aggregation='Median' datatype='integer'>6</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>7668.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deptm_hr</remote-name>
              <remote-type>16</remote-type>
              <local-name>[deptm_hr]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deptm_hr</remote-alias>
              <ordinal>3</ordinal>
              <family>time_of_day.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1104.0</statistic>
                <statistic aggregation='Avg' datatype='real'>11.5</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>23</statistic>
                <statistic aggregation='Stdev' datatype='real'>6.9585237393845931</statistic>
                <statistic aggregation='StdevP' datatype='real'>6.9221865524317288</statistic>
                <statistic aggregation='Var' datatype='real'>48.421052631578945</statistic>
                <statistic aggregation='VarP' datatype='real'>47.916666666666664</statistic>
                <statistic aggregation='Count' datatype='integer'>96</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>17296.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>source</remote-name>
              <remote-type>129</remote-type>
              <local-name>[source]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>source</remote-alias>
              <ordinal>4</ordinal>
              <family>time_of_day.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;soundcast_2014&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;tFutures_2010&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>96</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;survey_2014&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tod</remote-name>
              <remote-type>16</remote-type>
              <local-name>[tod]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tod</remote-alias>
              <ordinal>5</ordinal>
              <family>time_of_day.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1104.0</statistic>
                <statistic aggregation='Avg' datatype='real'>11.5</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>23</statistic>
                <statistic aggregation='Stdev' datatype='real'>6.9585237393845931</statistic>
                <statistic aggregation='StdevP' datatype='real'>6.9221865524317288</statistic>
                <statistic aggregation='Var' datatype='real'>48.421052631578945</statistic>
                <statistic aggregation='VarP' datatype='real'>47.916666666666664</statistic>
                <statistic aggregation='Count' datatype='integer'>96</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>17296.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_arrtm</remote-name>
              <remote-type>5</remote-type>
              <local-name>[trip_arrtm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trip_arrtm</remote-alias>
              <ordinal>6</ordinal>
              <family>time_of_day.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>96</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>50562942.575500034</statistic>
                <statistic aggregation='Avg' datatype='real'>526697.31849479198</statistic>
                <statistic aggregation='Min' datatype='real'>4580.5199999999995</statistic>
                <statistic aggregation='Max' datatype='real'>1328394.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>395700.07179102057</statistic>
                <statistic aggregation='StdevP' datatype='real'>393633.73875481199</statistic>
                <statistic aggregation='Var' datatype='real'>156578546815.41885</statistic>
                <statistic aggregation='VarP' datatype='real'>154947520286.09158</statistic>
                <statistic aggregation='Count' datatype='integer'>96</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>41506328217186.812</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_deptm</remote-name>
              <remote-type>5</remote-type>
              <local-name>[trip_deptm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trip_deptm</remote-alias>
              <ordinal>7</ordinal>
              <family>time_of_day.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>96</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>57564481.390500024</statistic>
                <statistic aggregation='Avg' datatype='real'>599630.01448437525</statistic>
                <statistic aggregation='Min' datatype='real'>6867.0199999999986</statistic>
                <statistic aggregation='Max' datatype='real'>1378956.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>402184.86815436225</statistic>
                <statistic aggregation='StdevP' datatype='real'>400084.67172030784</statistic>
                <statistic aggregation='Var' datatype='real'>161752668172.34174</statistic>
                <statistic aggregation='VarP' datatype='real'>160067744545.54651</statistic>
                <statistic aggregation='Count' datatype='integer'>96</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>49883894286343.547</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.333984' measure-ordering='alphabetic' measure-percentage='0.431641' parameter-percentage='0.234375' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:source:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;soundcast_2014&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;survey_2014&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;tFutures_2010&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;survey_2006&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='trips' inline='true' name='textscan.0pjzefb1h3d84717pbfcj0z5x87c' version='9.3'>
      <connection class='textscan' directory='J:/Projects/Soundcast/soundcast_dashboard/model_output' filename='trips.csv' password='' server=''>
        <relation name='trips.csv' table='[trips#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='pptyp' ordinal='0' />
            <column datatype='string' name='dpurp' ordinal='1' />
            <column datatype='string' name='mode' ordinal='2' />
            <column datatype='integer' name='deptm_hr' ordinal='3' />
            <column datatype='real' name='trexpfac' ordinal='4' />
            <column datatype='real' name='travdist' ordinal='5' />
            <column datatype='real' name='travtime' ordinal='6' />
            <column datatype='string' name='source' ordinal='7' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>pptyp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pptyp]</local-name>
            <parent-name>[trips.csv]</parent-name>
            <remote-alias>pptyp</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dpurp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dpurp]</local-name>
            <parent-name>[trips.csv]</parent-name>
            <remote-alias>dpurp</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[mode]</local-name>
            <parent-name>[trips.csv]</parent-name>
            <remote-alias>mode</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deptm_hr</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deptm_hr]</local-name>
            <parent-name>[trips.csv]</parent-name>
            <remote-alias>deptm_hr</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trexpfac</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trexpfac]</local-name>
            <parent-name>[trips.csv]</parent-name>
            <remote-alias>trexpfac</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>travdist</remote-name>
            <remote-type>5</remote-type>
            <local-name>[travdist]</local-name>
            <parent-name>[trips.csv]</parent-name>
            <remote-alias>travdist</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>travtime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[travtime]</local-name>
            <parent-name>[trips.csv]</parent-name>
            <remote-alias>travtime</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[trips.csv]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[trips.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Dpurp' datatype='string' name='[dpurp]' role='dimension' type='nominal' />
      <column caption='Mode' datatype='string' name='[mode]' role='dimension' type='nominal' />
      <column caption='Pptyp' datatype='string' name='[pptyp]' role='dimension' type='nominal' />
      <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      <column caption='Travdist' datatype='real' name='[travdist]' role='measure' type='quantitative' />
      <column caption='Travtime' datatype='real' name='[travtime]' role='measure' type='quantitative' />
      <column caption='Trexpfac' datatype='real' name='[trexpfac]' role='measure' type='quantitative' />
      <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='J:\Projects\Soundcast\soundcast_dashboard\model_output\trips.tde' schema='Extract' tablename='Extract' update-time='10/28/2016 07:55:47 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='24983' timestamp-start='2016-10-28 19:55:47.777' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>24983.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>24983</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>24983.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deptm_hr</remote-name>
              <remote-type>16</remote-type>
              <local-name>[deptm_hr]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deptm_hr</remote-alias>
              <ordinal>1</ordinal>
              <family>trips.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>306084.0</statistic>
                <statistic aggregation='Avg' datatype='real'>12.251691149981987</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>23</statistic>
                <statistic aggregation='Stdev' datatype='real'>6.1746567224111377</statistic>
                <statistic aggregation='StdevP' datatype='real'>6.1745331440075786</statistic>
                <statistic aggregation='Var' datatype='real'>38.126385639617055</statistic>
                <statistic aggregation='VarP' datatype='real'>38.124859546448114</statistic>
                <statistic aggregation='Count' datatype='integer'>24983</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4702520.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dpurp</remote-name>
              <remote-type>129</remote-type>
              <local-name>[dpurp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dpurp</remote-alias>
              <ordinal>2</ordinal>
              <family>trips.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Change Mode Inserted Purpose&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Work&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>24983</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mode</remote-alias>
              <ordinal>3</ordinal>
              <family>trips.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Bike&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Walk&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>24983</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pptyp</remote-name>
              <remote-type>129</remote-type>
              <local-name>[pptyp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pptyp</remote-alias>
              <ordinal>4</ordinal>
              <family>trips.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Child Age 0-4&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;University Student&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>24983</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>source</remote-name>
              <remote-type>129</remote-type>
              <local-name>[source]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>source</remote-alias>
              <ordinal>5</ordinal>
              <family>trips.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;soundcast_2014&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;tFutures_2010&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>24983</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;survey_2014&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>travdist</remote-name>
              <remote-type>5</remote-type>
              <local-name>[travdist]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>travdist</remote-alias>
              <ordinal>6</ordinal>
              <family>trips.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21987</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>120074.1689257384</statistic>
                <statistic aggregation='Avg' datatype='real'>4.8062349968273788</statistic>
                <statistic aggregation='Min' datatype='real'>-1.0</statistic>
                <statistic aggregation='Max' datatype='real'>71.560000000000002</statistic>
                <statistic aggregation='Stdev' datatype='real'>4.4143550349005158</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.414266686839647</statistic>
                <statistic aggregation='Var' datatype='real'>19.486530374151538</statistic>
                <statistic aggregation='VarP' datatype='real'>19.485750382542275</statistic>
                <statistic aggregation='Count' datatype='integer'>24983</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1063917.1747129001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>travtime</remote-name>
              <remote-type>5</remote-type>
              <local-name>[travtime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>travtime</remote-alias>
              <ordinal>7</ordinal>
              <family>trips.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23051</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>476584.87963964418</statistic>
                <statistic aggregation='Avg' datatype='real'>19.076367115224119</statistic>
                <statistic aggregation='Min' datatype='real'>-1.0</statistic>
                <statistic aggregation='Max' datatype='real'>337.85500000000002</statistic>
                <statistic aggregation='Stdev' datatype='real'>14.644941405948858</statistic>
                <statistic aggregation='StdevP' datatype='real'>14.644648304880972</statistic>
                <statistic aggregation='Var' datatype='real'>214.47430878367533</statistic>
                <statistic aggregation='VarP' datatype='real'>214.46572397365316</statistic>
                <statistic aggregation='Count' datatype='integer'>24983</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>14449505.307604529</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trexpfac</remote-name>
              <remote-type>5</remote-type>
              <local-name>[trexpfac]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trexpfac</remote-alias>
              <ordinal>8</ordinal>
              <family>trips.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12628</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-1.0</statistic>
                <statistic aggregation='Max' datatype='real'>306542.96709999949</statistic>
                <statistic aggregation='Count' datatype='integer'>24983</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.366541' measure-ordering='alphabetic' measure-percentage='0.394737' parameter-percentage='0.238722' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:source:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;soundcast_2014&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;survey_2014&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;survey_2006&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='person' inline='true' name='textscan.0uj88h305cvmc715pwmi70t6g17m' version='9.3'>
      <connection class='textscan' directory='J:/Projects/Soundcast/soundcast_dashboard/model_output' filename='person.csv' password='' server=''>
        <relation name='person.csv' table='[person#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='real' name='psexpfac' ordinal='1' />
            <column datatype='string' name='pptyp' ordinal='2' />
            <column datatype='string' name='district_name' ordinal='3' />
            <column datatype='real' name='lat_district' ordinal='4' />
            <column datatype='real' name='lon_district' ordinal='5' />
            <column datatype='string' name='source' ordinal='6' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[person.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>psexpfac</remote-name>
            <remote-type>5</remote-type>
            <local-name>[psexpfac]</local-name>
            <parent-name>[person.csv]</parent-name>
            <remote-alias>psexpfac</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pptyp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pptyp]</local-name>
            <parent-name>[person.csv]</parent-name>
            <remote-alias>pptyp</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>district_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[district_name]</local-name>
            <parent-name>[person.csv]</parent-name>
            <remote-alias>district_name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat_district</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat_district]</local-name>
            <parent-name>[person.csv]</parent-name>
            <remote-alias>lat_district</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lon_district</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lon_district]</local-name>
            <parent-name>[person.csv]</parent-name>
            <remote-alias>lon_district</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[person.csv]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[person.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='District Name' datatype='string' name='[district_name]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Lat District' datatype='real' name='[lat_district]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Lon District' datatype='real' name='[lon_district]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Pptyp' datatype='string' name='[pptyp]' role='dimension' type='nominal' />
      <column caption='Psexpfac' datatype='real' name='[psexpfac]' role='measure' type='quantitative' />
      <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='J:\Projects\Soundcast\soundcast_dashboard\model_output\person.tde' schema='Extract' tablename='Extract' update-time='10/28/2016 10:20:07 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='352' timestamp-start='2016-10-28 22:20:07.065' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>person.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>88</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>15312.0</statistic>
                <statistic aggregation='Avg' datatype='real'>43.5</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>87</statistic>
                <statistic aggregation='Stdev' datatype='real'>25.437930715534215</statistic>
                <statistic aggregation='StdevP' datatype='real'>25.401771591761076</statistic>
                <statistic aggregation='Var' datatype='real'>647.08831908831905</statistic>
                <statistic aggregation='VarP' datatype='real'>645.25</statistic>
                <statistic aggregation='Count' datatype='integer'>352</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>893200.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>352.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>352</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>352.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>district_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[district_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>district_name</remote-alias>
              <ordinal>2</ordinal>
              <family>person.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;East Side&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;West-South Seattle&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>352</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lat_district</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lat_district]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lat_district</remote-alias>
              <ordinal>3</ordinal>
              <family>person.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>15208.250720000013</statistic>
                <statistic aggregation='Avg' datatype='real'>47.525783500000038</statistic>
                <statistic aggregation='Min' datatype='real'>47.128059999999998</statistic>
                <statistic aggregation='Max' datatype='real'>47.884636</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.21508794004357965</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.21475160216769029</statistic>
                <statistic aggregation='Var' datatype='real'>0.046262821952190517</statistic>
                <statistic aggregation='VarP' datatype='real'>0.046118250633589923</statistic>
                <statistic aggregation='Count' datatype='integer'>320</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>722798.78897264309</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lon_district</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lon_district]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lon_district</remote-alias>
              <ordinal>4</ordinal>
              <family>person.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-39152.431903999997</statistic>
                <statistic aggregation='Avg' datatype='real'>-122.35134969999999</statistic>
                <statistic aggregation='Min' datatype='real'>-122.67538799999998</statistic>
                <statistic aggregation='Max' datatype='real'>-122.108131</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.18115330756696671</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.18087003404328583</statistic>
                <statistic aggregation='Var' datatype='real'>0.032816520842452034</statistic>
                <statistic aggregation='VarP' datatype='real'>0.032713969214819373</statistic>
                <statistic aggregation='Count' datatype='integer'>320</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4790363.355961889</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pptyp</remote-name>
              <remote-type>129</remote-type>
              <local-name>[pptyp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pptyp</remote-alias>
              <ordinal>5</ordinal>
              <family>person.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Child Age 0-4&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;University Student&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>352</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>psexpfac</remote-name>
              <remote-type>5</remote-type>
              <local-name>[psexpfac]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>psexpfac</remote-alias>
              <ordinal>6</ordinal>
              <family>person.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>352</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>14631906.980000004</statistic>
                <statistic aggregation='Avg' datatype='real'>41567.917556818196</statistic>
                <statistic aggregation='Min' datatype='real'>461.66000000000003</statistic>
                <statistic aggregation='Max' datatype='real'>297744.37119999947</statistic>
                <statistic aggregation='Stdev' datatype='real'>44916.258454151233</statistic>
                <statistic aggregation='StdevP' datatype='real'>44852.411572617028</statistic>
                <statistic aggregation='Var' datatype='real'>2017470273.5201123</statistic>
                <statistic aggregation='VarP' datatype='real'>2011738823.8794301</statistic>
                <statistic aggregation='Count' datatype='integer'>352</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1316349969049.2322</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>source</remote-name>
              <remote-type>129</remote-type>
              <local-name>[source]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>source</remote-alias>
              <ordinal>7</ordinal>
              <family>person.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;soundcast_2014&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;tFutures_2010&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>352</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;survey_2014&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.34375' measure-ordering='alphabetic' measure-percentage='0.410156' parameter-percentage='0.246094' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:source:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;soundcast_2014&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;survey_2014&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;tFutures_2010&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;survey_2006&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='taz_tours' inline='true' name='textscan.1d4t0nd0p6lq15195h2if0f74s2c' version='9.3'>
      <connection class='textscan' directory='J:/Projects/Soundcast/soundcast_dashboard/model_output' filename='taz_tours.csv' password='' server=''>
        <relation name='taz_tours.csv' table='[taz_tours#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='real' name='toexpfac_dest' ordinal='1' />
            <column datatype='integer' name='taz' ordinal='2' />
            <column datatype='real' name='toexpfac_origin' ordinal='3' />
            <column datatype='real' name='tad' ordinal='4' />
            <column datatype='string' name='county' ordinal='5' />
            <column datatype='integer' name='district' ordinal='6' />
            <column datatype='string' name='district_name' ordinal='7' />
            <column datatype='real' name='lat_taz' ordinal='8' />
            <column datatype='real' name='lon_taz' ordinal='9' />
            <column datatype='integer' name='TAZ' ordinal='10' />
            <column datatype='real' name='lat_district' ordinal='11' />
            <column datatype='real' name='lon_district' ordinal='12' />
            <column datatype='string' name='source' ordinal='13' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[taz_tours.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toexpfac_dest</remote-name>
            <remote-type>5</remote-type>
            <local-name>[toexpfac_dest]</local-name>
            <parent-name>[taz_tours.csv]</parent-name>
            <remote-alias>toexpfac_dest</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taz</remote-name>
            <remote-type>20</remote-type>
            <local-name>[taz]</local-name>
            <parent-name>[taz_tours.csv]</parent-name>
            <remote-alias>taz</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toexpfac_origin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[toexpfac_origin]</local-name>
            <parent-name>[taz_tours.csv]</parent-name>
            <remote-alias>toexpfac_origin</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tad</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tad]</local-name>
            <parent-name>[taz_tours.csv]</parent-name>
            <remote-alias>tad</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[taz_tours.csv]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>district</remote-name>
            <remote-type>20</remote-type>
            <local-name>[district]</local-name>
            <parent-name>[taz_tours.csv]</parent-name>
            <remote-alias>district</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>district_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[district_name]</local-name>
            <parent-name>[taz_tours.csv]</parent-name>
            <remote-alias>district_name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat_taz</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat_taz]</local-name>
            <parent-name>[taz_tours.csv]</parent-name>
            <remote-alias>lat_taz</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lon_taz</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lon_taz]</local-name>
            <parent-name>[taz_tours.csv]</parent-name>
            <remote-alias>lon_taz</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TAZ</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TAZ]</local-name>
            <parent-name>[taz_tours.csv]</parent-name>
            <remote-alias>TAZ</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat_district</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat_district]</local-name>
            <parent-name>[taz_tours.csv]</parent-name>
            <remote-alias>lat_district</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lon_district</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lon_district]</local-name>
            <parent-name>[taz_tours.csv]</parent-name>
            <remote-alias>lon_district</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[taz_tours.csv]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[taz_tours.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='District Name' datatype='string' name='[district_name]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[lat_district]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[lat_taz]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[lon_district]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[lon_taz]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      <column caption='Taz' datatype='integer' name='[taz]' role='measure' type='quantitative' />
      <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='J:\Projects\Soundcast\soundcast_dashboard\model_output\taz_tours.tde' schema='Extract' tablename='Extract' update-time='10/28/2016 01:13:24 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[F1]' value='[Extract].[F1]' />
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[TAZ]' value='[Extract].[TAZ]' />
            <map key='[county]' value='[Extract].[county]' />
            <map key='[district]' value='[Extract].[district]' />
            <map key='[district_name]' value='[Extract].[district_name]' />
            <map key='[lat_district]' value='[Extract].[lat_district]' />
            <map key='[lat_taz]' value='[Extract].[lat_taz]' />
            <map key='[lon_district]' value='[Extract].[lon_district]' />
            <map key='[lon_taz]' value='[Extract].[lon_taz]' />
            <map key='[source]' value='[Extract].[source]' />
            <map key='[tad]' value='[Extract].[tad]' />
            <map key='[taz]' value='[Extract].[taz1]' />
            <map key='[toexpfac_dest]' value='[Extract].[toexpfac_dest]' />
            <map key='[toexpfac_origin]' value='[Extract].[toexpfac_origin]' />
          </cols>
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='11100' timestamp-start='2016-10-28 01:13:24.530' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>2</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>taz_tours.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3686</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>17044157.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1535.5096396396395</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>3685</statistic>
                <statistic aggregation='Stdev' datatype='real'>1015.7041437576717</statistic>
                <statistic aggregation='StdevP' datatype='real'>1015.6583902882569</statistic>
                <statistic aggregation='Var' datatype='real'>1031654.9076465049</statistic>
                <statistic aggregation='VarP' datatype='real'>1031561.9657629333</statistic>
                <statistic aggregation='Count' datatype='integer'>11100</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>37621805193.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>11100.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>11100</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>11100.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TAZ</remote-name>
              <remote-type>2</remote-type>
              <local-name>[TAZ]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TAZ</remote-alias>
              <ordinal>2</ordinal>
              <family>taz_tours.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3691</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>3700</statistic>
                <statistic aggregation='Count' datatype='integer'>9196</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county</remote-name>
              <remote-type>129</remote-type>
              <local-name>[county]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county</remote-alias>
              <ordinal>3</ordinal>
              <family>taz_tours.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;King&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Snohomish&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>11099</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>district</remote-name>
              <remote-type>16</remote-type>
              <local-name>[district]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>district</remote-alias>
              <ordinal>4</ordinal>
              <family>taz_tours.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>11</statistic>
                <statistic aggregation='Count' datatype='integer'>9196</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>district_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[district_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>district_name</remote-alias>
              <ordinal>5</ordinal>
              <family>taz_tours.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;East Side&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;West-South Seattle&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>11099</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lat_district</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lat_district]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lat_district</remote-alias>
              <ordinal>6</ordinal>
              <family>taz_tours.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>47.128059999999998</statistic>
                <statistic aggregation='Max' datatype='real'>47.884636</statistic>
                <statistic aggregation='Count' datatype='integer'>10105</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lat_taz</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lat_taz]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lat_taz</remote-alias>
              <ordinal>7</ordinal>
              <family>taz_tours.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3693</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>46.803109098919037</statistic>
                <statistic aggregation='Max' datatype='real'>48.282881216844046</statistic>
                <statistic aggregation='Count' datatype='integer'>11099</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lon_district</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lon_district]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lon_district</remote-alias>
              <ordinal>8</ordinal>
              <family>taz_tours.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-122.67538799999998</statistic>
                <statistic aggregation='Max' datatype='real'>-122.108131</statistic>
                <statistic aggregation='Count' datatype='integer'>10105</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lon_taz</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lon_taz]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lon_taz</remote-alias>
              <ordinal>9</ordinal>
              <family>taz_tours.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3693</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-122.909605997539</statistic>
                <statistic aggregation='Max' datatype='real'>-121.34202635136721</statistic>
                <statistic aggregation='Count' datatype='integer'>11099</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>source</remote-name>
              <remote-type>129</remote-type>
              <local-name>[source]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>source</remote-alias>
              <ordinal>10</ordinal>
              <family>taz_tours.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;soundcast_2014&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;tFutures_2010&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>11100</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;survey_2014&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tad</remote-name>
              <remote-type>4</remote-type>
              <local-name>[tad]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tad</remote-alias>
              <ordinal>11</ordinal>
              <family>taz_tours.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>121</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>120.0</statistic>
                <statistic aggregation='Count' datatype='integer'>11099</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>taz1</remote-name>
              <remote-type>2</remote-type>
              <local-name>[taz]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>taz1</remote-alias>
              <ordinal>12</ordinal>
              <family>taz_tours.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3693</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>20021117.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1803.7042342342343</statistic>
                <statistic aggregation='Min' datatype='integer'>-1</statistic>
                <statistic aggregation='Max' datatype='integer'>3700</statistic>
                <statistic aggregation='Stdev' datatype='real'>1087.5743692499916</statistic>
                <statistic aggregation='StdevP' datatype='real'>1087.5253783101145</statistic>
                <statistic aggregation='Var' datatype='real'>1182818.0086495171</statistic>
                <statistic aggregation='VarP' datatype='real'>1182711.4484685578</statistic>
                <statistic aggregation='Count' datatype='integer'>11100</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>49240270585.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>toexpfac_dest</remote-name>
              <remote-type>5</remote-type>
              <local-name>[toexpfac_dest]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>toexpfac_dest</remote-alias>
              <ordinal>13</ordinal>
              <family>taz_tours.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6672</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-1.0</statistic>
                <statistic aggregation='Max' datatype='real'>42357.605799999925</statistic>
                <statistic aggregation='Count' datatype='integer'>11100</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>toexpfac_origin</remote-name>
              <remote-type>5</remote-type>
              <local-name>[toexpfac_origin]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>toexpfac_origin</remote-alias>
              <ordinal>14</ordinal>
              <family>taz_tours.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6654</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-6.0</statistic>
                <statistic aggregation='Max' datatype='real'>30914.259700000006</statistic>
                <statistic aggregation='Count' datatype='integer'>11100</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.24812' measure-ordering='alphabetic' measure-percentage='0.597744' parameter-percentage='0.154135' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:source:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;soundcast&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;soundcast_2014&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;survey_2014&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;TransportationFutures2010&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;2014_survey&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>%null%</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;tFutures_2010&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;2006_survey&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;survey&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;survey_2006&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='person_day' inline='true' name='textscan.1imzlm61lrdqzy1720h55190e7l7' version='9.3'>
      <connection class='textscan' directory='J:/Projects/Soundcast/soundcast_dashboard/model_output' filename='person_day.csv' password='' server=''>
        <relation name='person_day.csv' table='[person_day#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='real' name='values' ordinal='1' />
            <column datatype='string' name='pptyp' ordinal='2' />
            <column datatype='string' name='measure' ordinal='3' />
            <column datatype='string' name='source' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[person_day.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values]</local-name>
            <parent-name>[person_day.csv]</parent-name>
            <remote-alias>values</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pptyp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pptyp]</local-name>
            <parent-name>[person_day.csv]</parent-name>
            <remote-alias>pptyp</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[measure]</local-name>
            <parent-name>[person_day.csv]</parent-name>
            <remote-alias>measure</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[person_day.csv]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[person_day.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[source]' role='dimension' type='nominal' />
      <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='J:\Projects\Soundcast\soundcast_dashboard\model_output\person_day.tde' schema='Extract' tablename='Extract' update-time='10/28/2016 07:56:13 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='224' timestamp-start='2016-10-28 19:56:13.504' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>person_day.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>56</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>6160.0</statistic>
                <statistic aggregation='Avg' datatype='real'>27.5</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>55</statistic>
                <statistic aggregation='Stdev' datatype='real'>16.199429763534184</statistic>
                <statistic aggregation='StdevP' datatype='real'>16.163229875244614</statistic>
                <statistic aggregation='Var' datatype='real'>262.42152466367713</statistic>
                <statistic aggregation='VarP' datatype='real'>261.25</statistic>
                <statistic aggregation='Count' datatype='integer'>224</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>227920.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>224.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>224</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>224.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>measure</remote-name>
              <remote-type>129</remote-type>
              <local-name>[measure]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>measure</remote-alias>
              <ordinal>2</ordinal>
              <family>person_day.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;escort&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;work&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>224</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pptyp</remote-name>
              <remote-type>129</remote-type>
              <local-name>[pptyp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pptyp</remote-alias>
              <ordinal>3</ordinal>
              <family>person_day.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Child Age 0-4&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;University Student&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>224</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>source</remote-name>
              <remote-type>129</remote-type>
              <local-name>[source]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>source</remote-alias>
              <ordinal>4</ordinal>
              <family>person_day.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;soundcast_2014&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;tFutures_2010&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>224</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;survey_2014&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>values</remote-name>
              <remote-type>5</remote-type>
              <local-name>[values]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>values</remote-alias>
              <ordinal>5</ordinal>
              <family>person_day.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>208</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>35.427968320616607</statistic>
                <statistic aggregation='Avg' datatype='real'>0.15816057285989557</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.99467893693229659</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.1905429786444236</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.19011718374657996</statistic>
                <statistic aggregation='Var' datatype='real'>0.036306626710689273</statistic>
                <statistic aggregation='VarP' datatype='real'>0.036144543555730844</statistic>
                <statistic aggregation='Count' datatype='integer'>224</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>13.699685521334663</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.364662' measure-ordering='alphabetic' measure-percentage='0.364662' parameter-percentage='0.270677' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:source:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;soundcast_2014&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;survey_2014&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;survey_2006&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='tours' inline='true' name='textscan.1jlrx2d0q7leqp169eg6f0u5j116' version='9.3'>
      <connection class='textscan' directory='J:/Projects/Soundcast/soundcast_dashboard/model_output' filename='tours.csv' password='' server=''>
        <relation name='tours.csv' table='[tours#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='real' name='toexpfac' ordinal='1' />
            <column datatype='real' name='tautodist' ordinal='2' />
            <column datatype='real' name='tautotime' ordinal='3' />
            <column datatype='real' name='psexpfac' ordinal='4' />
            <column datatype='string' name='pptyp' ordinal='5' />
            <column datatype='string' name='pdpurp' ordinal='6' />
            <column datatype='string' name='tmodetp' ordinal='7' />
            <column datatype='integer' name='tlvorig_hr' ordinal='8' />
            <column datatype='string' name='district_name' ordinal='9' />
            <column datatype='real' name='lat_district' ordinal='10' />
            <column datatype='real' name='lon_district' ordinal='11' />
            <column datatype='string' name='source' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[tours.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toexpfac</remote-name>
            <remote-type>5</remote-type>
            <local-name>[toexpfac]</local-name>
            <parent-name>[tours.csv]</parent-name>
            <remote-alias>toexpfac</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tautodist</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tautodist]</local-name>
            <parent-name>[tours.csv]</parent-name>
            <remote-alias>tautodist</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tautotime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tautotime]</local-name>
            <parent-name>[tours.csv]</parent-name>
            <remote-alias>tautotime</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>psexpfac</remote-name>
            <remote-type>5</remote-type>
            <local-name>[psexpfac]</local-name>
            <parent-name>[tours.csv]</parent-name>
            <remote-alias>psexpfac</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pptyp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pptyp]</local-name>
            <parent-name>[tours.csv]</parent-name>
            <remote-alias>pptyp</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pdpurp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pdpurp]</local-name>
            <parent-name>[tours.csv]</parent-name>
            <remote-alias>pdpurp</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tmodetp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tmodetp]</local-name>
            <parent-name>[tours.csv]</parent-name>
            <remote-alias>tmodetp</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tlvorig_hr</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tlvorig_hr]</local-name>
            <parent-name>[tours.csv]</parent-name>
            <remote-alias>tlvorig_hr</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>district_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[district_name]</local-name>
            <parent-name>[tours.csv]</parent-name>
            <remote-alias>district_name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat_district</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat_district]</local-name>
            <parent-name>[tours.csv]</parent-name>
            <remote-alias>lat_district</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lon_district</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lon_district]</local-name>
            <parent-name>[tours.csv]</parent-name>
            <remote-alias>lon_district</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[tours.csv]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[tours.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='test' datatype='integer' name='[Calculation_300052330297278464]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='count([source])' />
      </column>
      <column caption='Per Capita' datatype='real' name='[Calculation_77124148088532995]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[toexpfac]/[psexpfac]' />
      </column>
      <column caption='persons' datatype='real' name='[Calculation_77124148140941316]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='min([psexpfac])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Avg' datatype='real' name='[lat_district]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[lon_district]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Pdpurp' datatype='string' name='[pdpurp]' role='dimension' type='nominal' />
      <column caption='Pptyp' datatype='string' name='[pptyp]' role='dimension' type='nominal' />
      <column caption='Psexpfac' datatype='real' name='[psexpfac]' role='measure' type='quantitative' />
      <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      <column caption='Tautodist' datatype='real' name='[tautodist]' role='measure' type='quantitative' />
      <column caption='Tautotime' datatype='real' name='[tautotime]' role='measure' type='quantitative' />
      <column caption='Tmodetp' datatype='string' name='[tmodetp]' role='dimension' type='nominal' />
      <column caption='Toexpfac' datatype='real' name='[toexpfac]' role='measure' type='quantitative' />
      <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
      <column-instance column='[tmodetp]' derivation='None' name='[none:tmodetp:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='J:\Projects\Soundcast\soundcast_dashboard\model_output\tours.tde' schema='Extract' tablename='Extract' update-time='10/28/2016 08:57:25 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_77124148088532995]' formula='[toexpfac]/[psexpfac]' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='128248' timestamp-start='2016-10-28 20:57:24.984' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_77124148088532995</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Calculation_77124148088532995]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_77124148088532995</remote-alias>
              <ordinal>0</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21679</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-1.1495208165000382e-05</statistic>
                <statistic aggregation='Max' datatype='real'>0.086588106578337043</statistic>
                <statistic aggregation='Count' datatype='integer'>128248</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>3</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>1</ordinal>
              <family>tours.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>56392</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3140847165.0</statistic>
                <statistic aggregation='Avg' datatype='real'>24490.418291123449</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>56391</statistic>
                <statistic aggregation='Stdev' datatype='real'>16889.561436054391</statistic>
                <statistic aggregation='StdevP' datatype='real'>16889.495588655758</statistic>
                <statistic aggregation='Var' datatype='real'>285257285.50225562</statistic>
                <statistic aggregation='VarP' datatype='real'>285255061.23922229</statistic>
                <statistic aggregation='Count' datatype='integer'>128248</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>113504051953147.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>2</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>128248</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>district_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[district_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>district_name</remote-alias>
              <ordinal>3</ordinal>
              <family>tours.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;East Side&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;West-South Seattle&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>128248</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lat_district</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lat_district]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lat_district</remote-alias>
              <ordinal>4</ordinal>
              <family>tours.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>47.128059999999998</statistic>
                <statistic aggregation='Max' datatype='real'>47.884636</statistic>
                <statistic aggregation='Count' datatype='integer'>117054</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lon_district</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lon_district]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lon_district</remote-alias>
              <ordinal>5</ordinal>
              <family>tours.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-122.67538799999998</statistic>
                <statistic aggregation='Max' datatype='real'>-122.108131</statistic>
                <statistic aggregation='Count' datatype='integer'>117054</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pdpurp</remote-name>
              <remote-type>129</remote-type>
              <local-name>[pdpurp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pdpurp</remote-alias>
              <ordinal>6</ordinal>
              <family>tours.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Escort&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Work&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>128248</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pptyp</remote-name>
              <remote-type>129</remote-type>
              <local-name>[pptyp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pptyp</remote-alias>
              <ordinal>7</ordinal>
              <family>tours.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Child Age 0-4&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;University Student&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>128248</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>psexpfac</remote-name>
              <remote-type>5</remote-type>
              <local-name>[psexpfac]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>psexpfac</remote-alias>
              <ordinal>8</ordinal>
              <family>tours.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>32</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>76739.984999999811</statistic>
                <statistic aggregation='Max' datatype='real'>1686364.6492999915</statistic>
                <statistic aggregation='Count' datatype='integer'>128248</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>source</remote-name>
              <remote-type>129</remote-type>
              <local-name>[source]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>source</remote-alias>
              <ordinal>9</ordinal>
              <family>tours.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;soundcast_2014&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;tFutures_2010&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>128248</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;survey_2006&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tautodist</remote-name>
              <remote-type>5</remote-type>
              <local-name>[tautodist]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tautodist</remote-alias>
              <ordinal>10</ordinal>
              <family>tours.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>110279</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>685911.29404547636</statistic>
                <statistic aggregation='Avg' datatype='real'>5.348319615475301</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>109.22</statistic>
                <statistic aggregation='Stdev' datatype='real'>4.4886151976660429</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.4885976978845736</statistic>
                <statistic aggregation='Var' datatype='real'>20.147666392718566</statistic>
                <statistic aggregation='VarP' datatype='real'>20.147509293454696</statistic>
                <statistic aggregation='Count' datatype='integer'>128248</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6252350.6002864465</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tautotime</remote-name>
              <remote-type>5</remote-type>
              <local-name>[tautotime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tautotime</remote-alias>
              <ordinal>11</ordinal>
              <family>tours.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>113479</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1940796.0700351498</statistic>
                <statistic aggregation='Avg' datatype='real'>15.133148821308323</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>655.35000000000002</statistic>
                <statistic aggregation='Stdev' datatype='real'>10.758699003989214</statistic>
                <statistic aggregation='StdevP' datatype='real'>10.758657059007707</statistic>
                <statistic aggregation='Var' datatype='real'>115.74960425843851</statistic>
                <statistic aggregation='VarP' datatype='real'>115.74870171333637</statistic>
                <statistic aggregation='Count' datatype='integer'>128248</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>44214895.256984219</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tlvorig_hr</remote-name>
              <remote-type>16</remote-type>
              <local-name>[tlvorig_hr]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tlvorig_hr</remote-alias>
              <ordinal>12</ordinal>
              <family>tours.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>40</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1618889.0</statistic>
                <statistic aggregation='Avg' datatype='real'>12.623113031002433</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>39</statistic>
                <statistic aggregation='Stdev' datatype='real'>6.7799429412357286</statistic>
                <statistic aggregation='StdevP' datatype='real'>6.779916508245905</statistic>
                <statistic aggregation='Var' datatype='real'>45.967626286412177</statistic>
                <statistic aggregation='VarP' datatype='real'>45.967267858785341</statistic>
                <statistic aggregation='Count' datatype='integer'>128248</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>26330629.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tmodetp</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tmodetp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tmodetp</remote-alias>
              <ordinal>13</ordinal>
              <family>tours.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Bike&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Walk&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>128248</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>toexpfac</remote-name>
              <remote-type>5</remote-type>
              <local-name>[toexpfac]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>toexpfac</remote-alias>
              <ordinal>14</ordinal>
              <family>tours.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12678</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-2.0</statistic>
                <statistic aggregation='Max' datatype='real'>43022.821199999998</statistic>
                <statistic aggregation='Count' datatype='integer'>128248</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.31203' measure-ordering='alphabetic' measure-percentage='0.533835' parameter-percentage='0.154135' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:tmodetp:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Bike&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;HOV3+&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Transit&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;School Bus&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Park&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Walk&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;SOV&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;HOV2&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:source:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;soundcast&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;soundcast_2014&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;survey_2014&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;TransportationFutures2010&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;survey_2006.h5&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;daysim_outputs.h5&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;2014_survey&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;survey_2014.h5&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;2006_survey&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;tFutures_2010&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;soundcast_2014.h5&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;survey&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;survey_2006&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='aggregate' inline='true' name='textscan.1q85wlf1przf9h1ayoa2g0w8pr35' version='9.3'>
      <connection class='textscan' directory='J:/Projects/Soundcast/soundcast_dashboard/model_output' filename='agg_measures.csv' password='' server=''>
        <relation name='agg_measures.csv' table='[agg_measures#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='string' name='description' ordinal='1' />
            <column datatype='real' name='value' ordinal='2' />
            <column datatype='string' name='source' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[agg_measures.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[agg_measures.csv]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[agg_measures.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[agg_measures.csv]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[agg_measures.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
      <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='J:\Projects\Soundcast\soundcast_dashboard\model_output\aggregate.tde' schema='Extract' tablename='Extract' update-time='10/28/2016 01:14:10 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='32' timestamp-start='2016-10-28 01:14:10.884' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>agg_measures.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;avg_hh_size&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;vmt_per_cap&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>32</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>32.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>32</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>32.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>description</remote-name>
              <remote-type>129</remote-type>
              <local-name>[description]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>description</remote-alias>
              <ordinal>2</ordinal>
              <family>agg_measures.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Average Household Size&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;VMT per Person&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>32</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>source</remote-name>
              <remote-type>129</remote-type>
              <local-name>[source]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>source</remote-alias>
              <ordinal>3</ordinal>
              <family>agg_measures.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;soundcast_2014&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;tFutures_2010&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>32</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;survey_2014&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>value</remote-name>
              <remote-type>5</remote-type>
              <local-name>[value]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>value</remote-alias>
              <ordinal>4</ordinal>
              <family>agg_measures.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>32</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>20495595.424820248</statistic>
                <statistic aggregation='Avg' datatype='real'>640487.35702563275</statistic>
                <statistic aggregation='Min' datatype='real'>2.3748380033585392</statistic>
                <statistic aggregation='Max' datatype='real'>4023823.470999972</statistic>
                <statistic aggregation='Stdev' datatype='real'>1261166.3273041358</statistic>
                <statistic aggregation='StdevP' datatype='real'>1241304.1989539154</statistic>
                <statistic aggregation='Var' datatype='real'>1590540505125.8027</statistic>
                <statistic aggregation='VarP' datatype='real'>1540836114340.6213</statistic>
                <statistic aggregation='Count' datatype='integer'>32</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>62433925403209.656</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.36399' measure-ordering='alphabetic' measure-percentage='0.338083' parameter-percentage='0.297927' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:source:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;daysim&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;soundcast_2014&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;soundcast_release_c1&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;survey_2014&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;TransportationFutures2010&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;2014_survey&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;2006_survey&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;soundcast&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;tFutures_2010&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;new_run&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;survey&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;survey_2006&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='textscan.0gez7c91i1v0ur16inimo1jblygy'>
      <datasources>
        <datasource caption='time_of_day' name='textscan.0gez7c91i1v0ur16inimo1jblygy' />
      </datasources>
      <datasource-dependencies datasource='textscan.0gez7c91i1v0ur16inimo1jblygy'>
        <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
        <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk]'>
        <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:source:nk]' member='&quot;soundcast_2014&quot;' />
          <groupfilter function='member' level='[none:source:nk]' member='&quot;survey_2014&quot;' />
        </groupfilter>
      </filter>
    </shared-view>
    <shared-view name='textscan.0pjzefb1h3d84717pbfcj0z5x87c'>
      <datasources>
        <datasource caption='trips' name='textscan.0pjzefb1h3d84717pbfcj0z5x87c' />
      </datasources>
      <datasource-dependencies datasource='textscan.0pjzefb1h3d84717pbfcj0z5x87c'>
        <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
        <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:source:nk]'>
        <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:source:nk]' member='&quot;soundcast_2014&quot;' />
          <groupfilter function='member' level='[none:source:nk]' member='&quot;survey_2014&quot;' />
        </groupfilter>
      </filter>
    </shared-view>
    <shared-view name='textscan.0uj88h305cvmc715pwmi70t6g17m'>
      <datasources>
        <datasource caption='person' name='textscan.0uj88h305cvmc715pwmi70t6g17m' />
      </datasources>
      <datasource-dependencies datasource='textscan.0uj88h305cvmc715pwmi70t6g17m'>
        <column-instance column='[pptyp]' derivation='None' name='[none:pptyp:nk]' pivot='key' type='nominal' />
        <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
        <column caption='Pptyp' datatype='string' name='[pptyp]' role='dimension' type='nominal' />
        <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[textscan.0uj88h305cvmc715pwmi70t6g17m].[none:pptyp:nk]'>
        <groupfilter function='level-members' level='[none:pptyp:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[textscan.0uj88h305cvmc715pwmi70t6g17m].[none:source:nk]'>
        <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:source:nk]' member='&quot;soundcast_2014&quot;' />
          <groupfilter function='member' level='[none:source:nk]' member='&quot;survey_2014&quot;' />
        </groupfilter>
      </filter>
    </shared-view>
    <shared-view name='textscan.1imzlm61lrdqzy1720h55190e7l7'>
      <datasources>
        <datasource caption='person_day' name='textscan.1imzlm61lrdqzy1720h55190e7l7' />
      </datasources>
      <datasource-dependencies datasource='textscan.1imzlm61lrdqzy1720h55190e7l7'>
        <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
        <column datatype='string' name='[source]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[textscan.1imzlm61lrdqzy1720h55190e7l7].[none:source:nk]'>
        <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:source:nk]' member='&quot;soundcast_2014&quot;' />
          <groupfilter function='member' level='[none:source:nk]' member='&quot;survey_2014&quot;' />
        </groupfilter>
      </filter>
    </shared-view>
    <shared-view name='textscan.1jlrx2d0q7leqp169eg6f0u5j116'>
      <datasources>
        <datasource caption='tours' name='textscan.1jlrx2d0q7leqp169eg6f0u5j116' />
      </datasources>
      <datasource-dependencies datasource='textscan.1jlrx2d0q7leqp169eg6f0u5j116'>
        <column datatype='string' name='[district_name]' role='dimension' type='nominal' />
        <column-instance column='[district_name]' derivation='None' name='[none:district_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[pdpurp]' derivation='None' name='[none:pdpurp:nk]' pivot='key' type='nominal' />
        <column-instance column='[pptyp]' derivation='None' name='[none:pptyp:nk]' pivot='key' type='nominal' />
        <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
        <column-instance column='[tmodetp]' derivation='None' name='[none:tmodetp:nk]' pivot='key' type='nominal' />
        <column caption='Pdpurp' datatype='string' name='[pdpurp]' role='dimension' type='nominal' />
        <column caption='Pptyp' datatype='string' name='[pptyp]' role='dimension' type='nominal' />
        <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
        <column caption='Tmodetp' datatype='string' name='[tmodetp]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:district_name:nk]'>
        <groupfilter function='level-members' level='[none:district_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]'>
        <groupfilter function='level-members' level='[none:pdpurp:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]'>
        <groupfilter function='level-members' level='[none:pptyp:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]'>
        <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:source:nk]' member='&quot;soundcast_2014&quot;' />
          <groupfilter function='member' level='[none:source:nk]' member='&quot;survey_2014&quot;' />
        </groupfilter>
      </filter>
      <filter class='categorical' column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:tmodetp:nk]'>
        <groupfilter function='level-members' level='[none:tmodetp:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
    <shared-view name='textscan.1q85wlf1przf9h1ayoa2g0w8pr35'>
      <datasources>
        <datasource caption='aggregate' name='textscan.1q85wlf1przf9h1ayoa2g0w8pr35' />
      </datasources>
      <datasource-dependencies datasource='textscan.1q85wlf1przf9h1ayoa2g0w8pr35'>
        <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
        <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[none:source:nk]'>
        <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:source:nk]' member='&quot;soundcast_2014&quot;' />
          <groupfilter function='member' level='[none:source:nk]' member='&quot;survey_2014&quot;' />
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='% tours by purpose'>
      <table>
        <view>
          <datasources>
            <datasource caption='tours' name='textscan.1jlrx2d0q7leqp169eg6f0u5j116' />
          </datasources>
          <datasource-dependencies datasource='textscan.1jlrx2d0q7leqp169eg6f0u5j116'>
            <column datatype='string' name='[district_name]' role='dimension' type='nominal' />
            <column-instance column='[district_name]' derivation='None' name='[none:district_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[pdpurp]' derivation='None' name='[none:pdpurp:nk]' pivot='key' type='nominal' />
            <column-instance column='[pptyp]' derivation='None' name='[none:pptyp:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[tmodetp]' derivation='None' name='[none:tmodetp:nk]' pivot='key' type='nominal' />
            <column-instance column='[toexpfac]' derivation='Sum' name='[pcto:sum:toexpfac:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[pdpurp]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Pdpurp' datatype='string' name='[pdpurp]' role='dimension' type='nominal' />
            <column caption='Pptyp' datatype='string' name='[pptyp]' role='dimension' type='nominal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Tmodetp' datatype='string' name='[tmodetp]' role='dimension' type='nominal' />
            <column caption='Toexpfac' datatype='real' name='[toexpfac]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:district_name:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:tmodetp:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#d7d7d7' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk] / [textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk])</rows>
        <cols>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[pcto:sum:toexpfac:qk:1]</cols>
      </table>
    </worksheet>
    <worksheet name='% tours by purpose and person type'>
      <table>
        <view>
          <datasources>
            <datasource caption='tours' name='textscan.1jlrx2d0q7leqp169eg6f0u5j116' />
          </datasources>
          <datasource-dependencies datasource='textscan.1jlrx2d0q7leqp169eg6f0u5j116'>
            <column datatype='string' name='[district_name]' role='dimension' type='nominal' />
            <column-instance column='[district_name]' derivation='None' name='[none:district_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[pdpurp]' derivation='None' name='[none:pdpurp:nk]' pivot='key' type='nominal' />
            <column-instance column='[pptyp]' derivation='None' name='[none:pptyp:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[tmodetp]' derivation='None' name='[none:tmodetp:nk]' pivot='key' type='nominal' />
            <column-instance column='[toexpfac]' derivation='Sum' name='[pcto:sum:toexpfac:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[pdpurp]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Pdpurp' datatype='string' name='[pdpurp]' role='dimension' type='nominal' />
            <column caption='Pptyp' datatype='string' name='[pptyp]' role='dimension' type='nominal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Tmodetp' datatype='string' name='[tmodetp]' role='dimension' type='nominal' />
            <column caption='Toexpfac' datatype='real' name='[toexpfac]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:district_name:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:tmodetp:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk] / ([textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk] / [textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]))</rows>
        <cols>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[pcto:sum:toexpfac:qk:1]</cols>
      </table>
    </worksheet>
    <worksheet name='Aggregate Means'>
      <table>
        <view>
          <datasources>
            <datasource caption='aggregate' name='textscan.1q85wlf1przf9h1ayoa2g0w8pr35' />
          </datasources>
          <datasource-dependencies datasource='textscan.1q85wlf1przf9h1ayoa2g0w8pr35'>
            <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column-instance column='[description]' derivation='None' name='[none:description:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[none:description:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Average Household Size&quot;' function='range' level='[none:description:nk]' to='&quot;Avg Distance to Work&quot;' />
              <groupfilter function='member' level='[none:description:nk]' member='&quot;VMT per Person&quot;' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[none:source:nk]' direction='ASC' />
          <slices>
            <column>[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[none:description:nk]</column>
            <column>[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[none:source:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[none:source:nk]' value='36' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[none:source:nk]' />
            </encodings>
            <reference-line axis-column='[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[sum:value:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-pane' value-column='[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[sum:value:qk]' z-order='1' />
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[none:description:nk] / [textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[none:source:nk])</rows>
        <cols>[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[sum:value:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Aggregate Totals'>
      <table>
        <view>
          <datasources>
            <datasource caption='aggregate' name='textscan.1q85wlf1przf9h1ayoa2g0w8pr35' />
          </datasources>
          <datasource-dependencies datasource='textscan.1q85wlf1przf9h1ayoa2g0w8pr35'>
            <column-instance column='[value]' derivation='Avg' name='[avg:value:qk]' pivot='key' type='quantitative' />
            <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column-instance column='[description]' derivation='None' name='[none:description:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[none:description:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:description:nk]' member='&quot;Total Households&quot;' />
              <groupfilter function='member' level='[none:description:nk]' member='&quot;Total Persons&quot;' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[none:source:nk]' direction='ASC' />
          <slices>
            <column>[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[none:description:nk]</column>
            <column>[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[none:source:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[none:source:nk]' />
            </encodings>
            <reference-line axis-column='[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[avg:value:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-pane' value-column='[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[avg:value:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[avg:value:qk]</rows>
        <cols>([textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[none:description:nk] / [textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[none:source:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Avg Tour Distance by Purpose'>
      <table>
        <view>
          <datasources>
            <datasource caption='tours' name='textscan.1jlrx2d0q7leqp169eg6f0u5j116' />
          </datasources>
          <datasource-dependencies datasource='textscan.1jlrx2d0q7leqp169eg6f0u5j116'>
            <column-instance column='[tautodist]' derivation='Avg' name='[avg:tautodist:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[district_name]' role='dimension' type='nominal' />
            <column-instance column='[district_name]' derivation='None' name='[none:district_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[pdpurp]' derivation='None' name='[none:pdpurp:nk]' pivot='key' type='nominal' />
            <column-instance column='[pptyp]' derivation='None' name='[none:pptyp:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[tmodetp]' derivation='None' name='[none:tmodetp:nk]' pivot='key' type='nominal' />
            <column caption='Pdpurp' datatype='string' name='[pdpurp]' role='dimension' type='nominal' />
            <column caption='Pptyp' datatype='string' name='[pptyp]' role='dimension' type='nominal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Tautodist' datatype='real' name='[tautodist]' role='measure' type='quantitative' />
            <column caption='Tmodetp' datatype='string' name='[tmodetp]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='alphabetic' column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' direction='ASC' />
          <slices>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:district_name:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:tmodetp:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' />
            </encodings>
            <reference-line axis-column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[avg:tautodist:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-pane' value-column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[avg:tautodist:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>([textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk] / [textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk])</rows>
        <cols>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[avg:tautodist:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Avg Tour Time by Purpose'>
      <table>
        <view>
          <datasources>
            <datasource caption='tours' name='textscan.1jlrx2d0q7leqp169eg6f0u5j116' />
          </datasources>
          <datasource-dependencies datasource='textscan.1jlrx2d0q7leqp169eg6f0u5j116'>
            <column-instance column='[tautotime]' derivation='Avg' name='[avg:tautotime:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[district_name]' role='dimension' type='nominal' />
            <column-instance column='[district_name]' derivation='None' name='[none:district_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[pdpurp]' derivation='None' name='[none:pdpurp:nk]' pivot='key' type='nominal' />
            <column-instance column='[pptyp]' derivation='None' name='[none:pptyp:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[tmodetp]' derivation='None' name='[none:tmodetp:nk]' pivot='key' type='nominal' />
            <column caption='Pdpurp' datatype='string' name='[pdpurp]' role='dimension' type='nominal' />
            <column caption='Pptyp' datatype='string' name='[pptyp]' role='dimension' type='nominal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Tautotime' datatype='real' name='[tautotime]' role='measure' type='quantitative' />
            <column caption='Tmodetp' datatype='string' name='[tmodetp]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='alphabetic' column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' direction='ASC' />
          <slices>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:district_name:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:tmodetp:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='1' />
            <format attr='line-pattern' id='refline0' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' />
            </encodings>
            <reference-line axis-column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[avg:tautotime:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-pane' value-column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[avg:tautotime:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>([textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk] / [textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk])</rows>
        <cols>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[avg:tautotime:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Avg Tours by Person Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='person_day' name='textscan.1imzlm61lrdqzy1720h55190e7l7' />
          </datasources>
          <datasource-dependencies datasource='textscan.1imzlm61lrdqzy1720h55190e7l7'>
            <column-instance column='[values]' derivation='Avg' name='[avg:values:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[measure]' role='dimension' type='nominal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[pptyp]' derivation='None' name='[none:pptyp:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[pptyp]' role='dimension' type='nominal' />
            <column datatype='string' name='[source]' role='dimension' type='nominal' />
            <column datatype='real' name='[values]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1imzlm61lrdqzy1720h55190e7l7].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[textscan.1imzlm61lrdqzy1720h55190e7l7].[none:measure:nk]'>
            <groupfilter function='level-members' level='[none:measure:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1imzlm61lrdqzy1720h55190e7l7].[none:pptyp:nk]'>
            <groupfilter function='level-members' level='[none:pptyp:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1imzlm61lrdqzy1720h55190e7l7].[:Measure Names]</column>
            <column>[textscan.1imzlm61lrdqzy1720h55190e7l7].[none:pptyp:nk]</column>
            <column>[textscan.1imzlm61lrdqzy1720h55190e7l7].[none:measure:nk]</column>
            <column>[textscan.1imzlm61lrdqzy1720h55190e7l7].[none:source:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1imzlm61lrdqzy1720h55190e7l7].[none:source:nk]' />
              <lod column='[textscan.1imzlm61lrdqzy1720h55190e7l7].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.1imzlm61lrdqzy1720h55190e7l7].[none:pptyp:nk] / ([textscan.1imzlm61lrdqzy1720h55190e7l7].[none:measure:nk] / [textscan.1imzlm61lrdqzy1720h55190e7l7].[none:source:nk]))</rows>
        <cols>[textscan.1imzlm61lrdqzy1720h55190e7l7].[avg:values:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Avg Tours by Purpose'>
      <table>
        <view>
          <datasources>
            <datasource caption='tours' name='textscan.1jlrx2d0q7leqp169eg6f0u5j116' />
          </datasources>
          <datasource-dependencies datasource='textscan.1jlrx2d0q7leqp169eg6f0u5j116'>
            <column caption='Per Capita' datatype='real' name='[Calculation_77124148088532995]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[toexpfac]/[psexpfac]' />
            </column>
            <column datatype='string' name='[district_name]' role='dimension' type='nominal' />
            <column-instance column='[district_name]' derivation='None' name='[none:district_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[pdpurp]' derivation='None' name='[none:pdpurp:nk]' pivot='key' type='nominal' />
            <column-instance column='[pptyp]' derivation='None' name='[none:pptyp:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[tmodetp]' derivation='None' name='[none:tmodetp:nk]' pivot='key' type='nominal' />
            <column caption='Pdpurp' datatype='string' name='[pdpurp]' role='dimension' type='nominal' />
            <column caption='Pptyp' datatype='string' name='[pptyp]' role='dimension' type='nominal' />
            <column caption='Psexpfac' datatype='real' name='[psexpfac]' role='measure' type='quantitative' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Tmodetp' datatype='string' name='[tmodetp]' role='dimension' type='nominal' />
            <column caption='Toexpfac' datatype='real' name='[toexpfac]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_77124148088532995]' derivation='User' name='[usr:Calculation_77124148088532995:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='alphabetic' column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' direction='ASC' />
          <slices>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:district_name:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:tmodetp:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk] / [textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk])</rows>
        <cols>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[usr:Calculation_77124148088532995:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Destination Tours Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='tours' name='textscan.1jlrx2d0q7leqp169eg6f0u5j116' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.1jlrx2d0q7leqp169eg6f0u5j116'>
            <column datatype='string' name='[district_name]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[lat_district]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[lon_district]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[district_name]' derivation='None' name='[none:district_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[lat_district]' derivation='None' name='[none:lat_district:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lon_district]' derivation='None' name='[none:lon_district:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pdpurp]' derivation='None' name='[none:pdpurp:nk]' pivot='key' type='nominal' />
            <column-instance column='[pptyp]' derivation='None' name='[none:pptyp:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[tmodetp]' derivation='None' name='[none:tmodetp:nk]' pivot='key' type='nominal' />
            <column caption='Pdpurp' datatype='string' name='[pdpurp]' role='dimension' type='nominal' />
            <column caption='Pptyp' datatype='string' name='[pptyp]' role='dimension' type='nominal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[toexpfac]' derivation='Sum' name='[sum:toexpfac:qk]' pivot='key' type='quantitative' />
            <column caption='Tmodetp' datatype='string' name='[tmodetp]' role='dimension' type='nominal' />
            <column caption='Toexpfac' datatype='real' name='[toexpfac]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:district_name:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:tmodetp:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' />
              <size column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[sum:toexpfac:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.8342540264129639' />
                <format attr='mark-transparency' value='155' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:lat_district:qk]</rows>
        <cols>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:lon_district:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Destination Tours Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='tours' name='textscan.1jlrx2d0q7leqp169eg6f0u5j116' />
          </datasources>
          <datasource-dependencies datasource='textscan.1jlrx2d0q7leqp169eg6f0u5j116'>
            <column datatype='string' name='[district_name]' role='dimension' type='nominal' />
            <column-instance column='[district_name]' derivation='None' name='[none:district_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[pdpurp]' derivation='None' name='[none:pdpurp:nk]' pivot='key' type='nominal' />
            <column-instance column='[pptyp]' derivation='None' name='[none:pptyp:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[tmodetp]' derivation='None' name='[none:tmodetp:nk]' pivot='key' type='nominal' />
            <column caption='Pdpurp' datatype='string' name='[pdpurp]' role='dimension' type='nominal' />
            <column caption='Pptyp' datatype='string' name='[pptyp]' role='dimension' type='nominal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[toexpfac]' derivation='Sum' name='[sum:toexpfac:qk]' pivot='key' type='quantitative' />
            <column caption='Tmodetp' datatype='string' name='[tmodetp]' role='dimension' type='nominal' />
            <column caption='Toexpfac' datatype='real' name='[toexpfac]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:district_name:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:tmodetp:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' value='27' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:district_name:nk] / [textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk])</rows>
        <cols>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[sum:toexpfac:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Person'>
      <table>
        <view>
          <datasources>
            <datasource caption='person' name='textscan.0uj88h305cvmc715pwmi70t6g17m' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.0uj88h305cvmc715pwmi70t6g17m'>
            <column aggregation='Avg' caption='Lat District' datatype='real' name='[lat_district]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Lon District' datatype='real' name='[lon_district]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[lat_district]' derivation='None' name='[none:lat_district:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lon_district]' derivation='None' name='[none:lon_district:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pptyp]' derivation='None' name='[none:pptyp:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Pptyp' datatype='string' name='[pptyp]' role='dimension' type='nominal' />
            <column caption='Psexpfac' datatype='real' name='[psexpfac]' role='measure' type='quantitative' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[psexpfac]' derivation='Sum' name='[sum:psexpfac:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[textscan.0uj88h305cvmc715pwmi70t6g17m].[none:source:nk]</column>
            <column>[textscan.0uj88h305cvmc715pwmi70t6g17m].[none:pptyp:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <size column='[textscan.0uj88h305cvmc715pwmi70t6g17m].[sum:psexpfac:qk]' />
              <color column='[textscan.0uj88h305cvmc715pwmi70t6g17m].[none:source:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.8784530162811279' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.0uj88h305cvmc715pwmi70t6g17m].[none:lat_district:qk]</rows>
        <cols>[textscan.0uj88h305cvmc715pwmi70t6g17m].[none:lon_district:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Person Charts'>
      <table>
        <view>
          <datasources>
            <datasource caption='person' name='textscan.0uj88h305cvmc715pwmi70t6g17m' />
          </datasources>
          <datasource-dependencies datasource='textscan.0uj88h305cvmc715pwmi70t6g17m'>
            <column caption='District Name' datatype='string' name='[district_name]' role='dimension' type='nominal' />
            <column-instance column='[district_name]' derivation='None' name='[none:district_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[pptyp]' derivation='None' name='[none:pptyp:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Pptyp' datatype='string' name='[pptyp]' role='dimension' type='nominal' />
            <column caption='Psexpfac' datatype='real' name='[psexpfac]' role='measure' type='quantitative' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[psexpfac]' derivation='Sum' name='[sum:psexpfac:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[textscan.0uj88h305cvmc715pwmi70t6g17m].[none:source:nk]</column>
            <column>[textscan.0uj88h305cvmc715pwmi70t6g17m].[none:pptyp:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.0uj88h305cvmc715pwmi70t6g17m].[none:source:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([textscan.0uj88h305cvmc715pwmi70t6g17m].[none:district_name:nk] / [textscan.0uj88h305cvmc715pwmi70t6g17m].[none:source:nk])</rows>
        <cols>[textscan.0uj88h305cvmc715pwmi70t6g17m].[sum:psexpfac:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Person Type'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 34'>
      <table>
        <view>
          <datasources>
            <datasource caption='person_day' name='textscan.1imzlm61lrdqzy1720h55190e7l7' />
          </datasources>
          <datasource-dependencies datasource='textscan.1imzlm61lrdqzy1720h55190e7l7'>
            <column datatype='string' name='[measure]' role='dimension' type='nominal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[pptyp]' derivation='None' name='[none:pptyp:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[pptyp]' role='dimension' type='nominal' />
            <column datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[values]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1imzlm61lrdqzy1720h55190e7l7].[none:measure:nk]'>
            <groupfilter from='&quot;escort&quot;' function='range' level='[none:measure:nk]' to='&quot;work&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1imzlm61lrdqzy1720h55190e7l7].[none:measure:nk]</column>
            <column>[textscan.1imzlm61lrdqzy1720h55190e7l7].[none:source:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.1imzlm61lrdqzy1720h55190e7l7].[none:measure:nk] / [textscan.1imzlm61lrdqzy1720h55190e7l7].[none:pptyp:nk])</rows>
        <cols>[textscan.1imzlm61lrdqzy1720h55190e7l7].[sum:values:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Total Tours'>
      <table>
        <view>
          <datasources>
            <datasource caption='tours' name='textscan.1jlrx2d0q7leqp169eg6f0u5j116' />
          </datasources>
          <datasource-dependencies datasource='textscan.1jlrx2d0q7leqp169eg6f0u5j116'>
            <column datatype='string' name='[district_name]' role='dimension' type='nominal' />
            <column-instance column='[district_name]' derivation='None' name='[none:district_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[pdpurp]' derivation='None' name='[none:pdpurp:nk]' pivot='key' type='nominal' />
            <column-instance column='[pptyp]' derivation='None' name='[none:pptyp:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[tmodetp]' derivation='None' name='[none:tmodetp:nk]' pivot='key' type='nominal' />
            <column caption='Pdpurp' datatype='string' name='[pdpurp]' role='dimension' type='nominal' />
            <column caption='Pptyp' datatype='string' name='[pptyp]' role='dimension' type='nominal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[toexpfac]' derivation='Sum' name='[sum:toexpfac:qk]' pivot='key' type='quantitative' />
            <column caption='Tmodetp' datatype='string' name='[tmodetp]' role='dimension' type='nominal' />
            <column caption='Toexpfac' datatype='real' name='[toexpfac]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:tmodetp:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:district_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' />
            </encodings>
            <reference-line axis-column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[sum:toexpfac:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-pane' value-column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[sum:toexpfac:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>([textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:tmodetp:nk] / [textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk])</rows>
        <cols>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[sum:toexpfac:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Total Tours by Purpose and Person Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='tours' name='textscan.1jlrx2d0q7leqp169eg6f0u5j116' />
          </datasources>
          <datasource-dependencies datasource='textscan.1jlrx2d0q7leqp169eg6f0u5j116'>
            <column datatype='string' name='[district_name]' role='dimension' type='nominal' />
            <column-instance column='[district_name]' derivation='None' name='[none:district_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[pdpurp]' derivation='None' name='[none:pdpurp:nk]' pivot='key' type='nominal' />
            <column-instance column='[pptyp]' derivation='None' name='[none:pptyp:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[tmodetp]' derivation='None' name='[none:tmodetp:nk]' pivot='key' type='nominal' />
            <column caption='Pdpurp' datatype='string' name='[pdpurp]' role='dimension' type='nominal' />
            <column caption='Pptyp' datatype='string' name='[pptyp]' role='dimension' type='nominal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[toexpfac]' derivation='Sum' name='[sum:toexpfac:qk]' pivot='key' type='quantitative' />
            <column caption='Tmodetp' datatype='string' name='[tmodetp]' role='dimension' type='nominal' />
            <column caption='Toexpfac' datatype='real' name='[toexpfac]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <sort class='alphabetic' column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' direction='ASC' />
          <slices>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:district_name:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:tmodetp:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk] / ([textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk] / [textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]))</rows>
        <cols>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[sum:toexpfac:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Tour Leave Origin Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='tours' name='textscan.1jlrx2d0q7leqp169eg6f0u5j116' />
          </datasources>
          <datasource-dependencies datasource='textscan.1jlrx2d0q7leqp169eg6f0u5j116'>
            <column datatype='string' name='[district_name]' role='dimension' type='nominal' />
            <column-instance column='[district_name]' derivation='None' name='[none:district_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[pdpurp]' derivation='None' name='[none:pdpurp:nk]' pivot='key' type='nominal' />
            <column-instance column='[pptyp]' derivation='None' name='[none:pptyp:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[tlvorig_hr]' derivation='None' name='[none:tlvorig_hr:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tmodetp]' derivation='None' name='[none:tmodetp:nk]' pivot='key' type='nominal' />
            <column-instance column='[toexpfac]' derivation='Sum' name='[pcto:sum:toexpfac:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[tlvorig_hr]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Pdpurp' datatype='string' name='[pdpurp]' role='dimension' type='nominal' />
            <column caption='Pptyp' datatype='string' name='[pptyp]' role='dimension' type='nominal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column datatype='integer' name='[tlvorig_hr]' role='measure' type='quantitative' />
            <column caption='Tmodetp' datatype='string' name='[tmodetp]' role='dimension' type='nominal' />
            <column caption='Toexpfac' datatype='real' name='[toexpfac]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:tmodetp:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:district_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[pcto:sum:toexpfac:qk:2]</rows>
        <cols>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:tlvorig_hr:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Tour Mode Share'>
      <table>
        <view>
          <datasources>
            <datasource caption='tours' name='textscan.1jlrx2d0q7leqp169eg6f0u5j116' />
          </datasources>
          <datasource-dependencies datasource='textscan.1jlrx2d0q7leqp169eg6f0u5j116'>
            <column datatype='string' name='[district_name]' role='dimension' type='nominal' />
            <column-instance column='[district_name]' derivation='None' name='[none:district_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[pdpurp]' derivation='None' name='[none:pdpurp:nk]' pivot='key' type='nominal' />
            <column-instance column='[pptyp]' derivation='None' name='[none:pptyp:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[tmodetp]' derivation='None' name='[none:tmodetp:nk]' pivot='key' type='nominal' />
            <column-instance column='[toexpfac]' derivation='Sum' name='[pcto:sum:toexpfac:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[tmodetp]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Pdpurp' datatype='string' name='[pdpurp]' role='dimension' type='nominal' />
            <column caption='Pptyp' datatype='string' name='[pptyp]' role='dimension' type='nominal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Tmodetp' datatype='string' name='[tmodetp]' role='dimension' type='nominal' />
            <column caption='Toexpfac' datatype='real' name='[toexpfac]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:tmodetp:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]</column>
            <column>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:district_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[pcto:sum:toexpfac:qk]' value='p0.0%' />
            <format attr='height' field='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' value='26' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' />
              <text column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[pcto:sum:toexpfac:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#c0c0c0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:tmodetp:nk] / [textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk])</rows>
        <cols>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[pcto:sum:toexpfac:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Tours by TAZ Destination'>
      <table>
        <view>
          <datasources>
            <datasource caption='taz_tours' name='textscan.1d4t0nd0p6lq15195h2if0f74s2c' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.1d4t0nd0p6lq15195h2if0f74s2c'>
            <column caption='District Name' datatype='string' name='[district_name]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[lat_taz]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[lon_taz]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[district_name]' derivation='None' name='[none:district_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[lat_taz]' derivation='None' name='[none:lat_taz:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lon_taz]' derivation='None' name='[none:lon_taz:qk]' pivot='key' type='quantitative' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[toexpfac_dest]' derivation='Sum' name='[sum:toexpfac_dest:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[toexpfac_dest]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1d4t0nd0p6lq15195h2if0f74s2c].[none:district_name:nk]'>
            <groupfilter function='level-members' level='[none:district_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1d4t0nd0p6lq15195h2if0f74s2c].[none:district_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1d4t0nd0p6lq15195h2if0f74s2c].[none:source:nk]' />
              <size column='[textscan.1d4t0nd0p6lq15195h2if0f74s2c].[sum:toexpfac_dest:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='137' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1d4t0nd0p6lq15195h2if0f74s2c].[none:lat_taz:qk]</rows>
        <cols>[textscan.1d4t0nd0p6lq15195h2if0f74s2c].[none:lon_taz:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Tours by TAZ Origin'>
      <table>
        <view>
          <datasources>
            <datasource caption='taz_tours' name='textscan.1d4t0nd0p6lq15195h2if0f74s2c' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.1d4t0nd0p6lq15195h2if0f74s2c'>
            <column caption='District Name' datatype='string' name='[district_name]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[lat_taz]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[lon_taz]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[district_name]' derivation='None' name='[none:district_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[lat_taz]' derivation='None' name='[none:lat_taz:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lon_taz]' derivation='None' name='[none:lon_taz:qk]' pivot='key' type='quantitative' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[toexpfac_origin]' derivation='Sum' name='[sum:toexpfac_origin:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[toexpfac_origin]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1d4t0nd0p6lq15195h2if0f74s2c].[none:district_name:nk]'>
            <groupfilter function='level-members' level='[none:district_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1d4t0nd0p6lq15195h2if0f74s2c].[none:district_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1d4t0nd0p6lq15195h2if0f74s2c].[none:source:nk]' />
              <size column='[textscan.1d4t0nd0p6lq15195h2if0f74s2c].[sum:toexpfac_origin:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='137' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1d4t0nd0p6lq15195h2if0f74s2c].[none:lat_taz:qk]</rows>
        <cols>[textscan.1d4t0nd0p6lq15195h2if0f74s2c].[none:lon_taz:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Trip Departure Time of Day'>
      <table>
        <view>
          <datasources>
            <datasource caption='trips' name='textscan.0pjzefb1h3d84717pbfcj0z5x87c' />
          </datasources>
          <datasource-dependencies datasource='textscan.0pjzefb1h3d84717pbfcj0z5x87c'>
            <column datatype='integer' name='[deptm_hr]' role='measure' type='quantitative' />
            <column caption='Dpurp' datatype='string' name='[dpurp]' role='dimension' type='nominal' />
            <column caption='Mode' datatype='string' name='[mode]' role='dimension' type='nominal' />
            <column-instance column='[deptm_hr]' derivation='None' name='[none:deptm_hr:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dpurp]' derivation='None' name='[none:dpurp:nk]' pivot='key' type='nominal' />
            <column-instance column='[mode]' derivation='None' name='[none:mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[pptyp]' derivation='None' name='[none:pptyp:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Pptyp' datatype='string' name='[pptyp]' role='dimension' type='nominal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[trexpfac]' derivation='Sum' name='[sum:trexpfac:qk]' pivot='key' type='quantitative' />
            <column caption='Trexpfac' datatype='real' name='[trexpfac]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:dpurp:nk]'>
            <groupfilter function='level-members' level='[none:dpurp:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:mode:nk]'>
            <groupfilter function='level-members' level='[none:mode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:pptyp:nk]'>
            <groupfilter function='level-members' level='[none:pptyp:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:source:nk]</column>
            <column>[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:pptyp:nk]</column>
            <column>[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:mode:nk]</column>
            <column>[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:dpurp:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:source:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[sum:trexpfac:qk]</rows>
        <cols>[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:deptm_hr:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Trip Mode Share'>
      <table>
        <view>
          <datasources>
            <datasource caption='trips' name='textscan.0pjzefb1h3d84717pbfcj0z5x87c' />
          </datasources>
          <datasource-dependencies datasource='textscan.0pjzefb1h3d84717pbfcj0z5x87c'>
            <column caption='Dpurp' datatype='string' name='[dpurp]' role='dimension' type='nominal' />
            <column caption='Mode' datatype='string' name='[mode]' role='dimension' type='nominal' />
            <column-instance column='[dpurp]' derivation='None' name='[none:dpurp:nk]' pivot='key' type='nominal' />
            <column-instance column='[mode]' derivation='None' name='[none:mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[pptyp]' derivation='None' name='[none:pptyp:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[trexpfac]' derivation='Sum' name='[pcto:sum:trexpfac:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[mode]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Pptyp' datatype='string' name='[pptyp]' role='dimension' type='nominal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Trexpfac' datatype='real' name='[trexpfac]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:dpurp:nk]'>
            <groupfilter function='level-members' level='[none:dpurp:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:pptyp:nk]'>
            <groupfilter function='level-members' level='[none:pptyp:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:source:nk]</column>
            <column>[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:pptyp:nk]</column>
            <column>[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:dpurp:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[pcto:sum:trexpfac:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:source:nk]' />
              <text column='[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[pcto:sum:trexpfac:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#acacac' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:mode:nk] / [textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:source:nk])</rows>
        <cols>[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[pcto:sum:trexpfac:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Trip TOD Groups - Arrive'>
      <table>
        <view>
          <datasources>
            <datasource caption='time_of_day' name='textscan.0gez7c91i1v0ur16inimo1jblygy' />
          </datasources>
          <datasource-dependencies datasource='textscan.0gez7c91i1v0ur16inimo1jblygy'>
            <column datatype='integer' name='[Deptm Hr (group)]' role='dimension' type='ordinal'>
              <calculation class='categorical-bin' column='[deptm_hr]'>
                <bin value='0'>
                  <value>0</value>
                  <value>1</value>
                  <value>2</value>
                  <value>3</value>
                  <value>4</value>
                  <value>5</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                </bin>
                <bin value='6'>
                  <value>6</value>
                  <value>7</value>
                  <value>8</value>
                </bin>
                <bin value='9'>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                  <value>12</value>
                  <value>13</value>
                  <value>14</value>
                </bin>
                <bin value='15'>
                  <value>15</value>
                  <value>16</value>
                  <value>17</value>
                </bin>
                <bin value='18'>
                  <value>18</value>
                  <value>19</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='0' value='NI' />
                <alias key='6' value='AM' />
                <alias key='9' value='MD' />
                <alias key='15' value='PM' />
                <alias key='18' value='EV' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Deptm Hr' datatype='integer' name='[deptm_hr]' role='dimension' type='ordinal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[trip_arrtm]' derivation='Sum' name='[pcto:sum:trip_arrtm:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.0gez7c91i1v0ur16inimo1jblygy].[Deptm Hr (group)]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Trip Arrtm' datatype='real' name='[trip_arrtm]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[textscan.0gez7c91i1v0ur16inimo1jblygy].[Deptm Hr (group)]' direction='ASC'>
            <dictionary>
              <bucket>6</bucket>
              <bucket>9</bucket>
              <bucket>15</bucket>
              <bucket>18</bucket>
              <bucket>0</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.0gez7c91i1v0ur16inimo1jblygy].[pcto:sum:trip_arrtm:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk]' />
              <text column='[textscan.0gez7c91i1v0ur16inimo1jblygy].[pcto:sum:trip_arrtm:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#acacac' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.0gez7c91i1v0ur16inimo1jblygy].[Deptm Hr (group)] / [textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk])</rows>
        <cols>[textscan.0gez7c91i1v0ur16inimo1jblygy].[pcto:sum:trip_arrtm:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Trip TOD Groups - Depart'>
      <table>
        <view>
          <datasources>
            <datasource caption='time_of_day' name='textscan.0gez7c91i1v0ur16inimo1jblygy' />
          </datasources>
          <datasource-dependencies datasource='textscan.0gez7c91i1v0ur16inimo1jblygy'>
            <column datatype='integer' name='[Deptm Hr (group)]' role='dimension' type='ordinal'>
              <calculation class='categorical-bin' column='[deptm_hr]'>
                <bin value='0'>
                  <value>0</value>
                  <value>1</value>
                  <value>2</value>
                  <value>3</value>
                  <value>4</value>
                  <value>5</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                </bin>
                <bin value='6'>
                  <value>6</value>
                  <value>7</value>
                  <value>8</value>
                </bin>
                <bin value='9'>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                  <value>12</value>
                  <value>13</value>
                  <value>14</value>
                </bin>
                <bin value='15'>
                  <value>15</value>
                  <value>16</value>
                  <value>17</value>
                </bin>
                <bin value='18'>
                  <value>18</value>
                  <value>19</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='0' value='NI' />
                <alias key='6' value='AM' />
                <alias key='9' value='MD' />
                <alias key='15' value='PM' />
                <alias key='18' value='EV' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Deptm Hr' datatype='integer' name='[deptm_hr]' role='dimension' type='ordinal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[trip_deptm]' derivation='Sum' name='[pcto:sum:trip_deptm:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.0gez7c91i1v0ur16inimo1jblygy].[Deptm Hr (group)]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Trip Deptm' datatype='real' name='[trip_deptm]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[textscan.0gez7c91i1v0ur16inimo1jblygy].[Deptm Hr (group)]' direction='ASC'>
            <dictionary>
              <bucket>6</bucket>
              <bucket>9</bucket>
              <bucket>15</bucket>
              <bucket>18</bucket>
              <bucket>0</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.0gez7c91i1v0ur16inimo1jblygy].[pcto:sum:trip_deptm:qk:1]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='20' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[textscan.0gez7c91i1v0ur16inimo1jblygy].[pcto:sum:trip_deptm:qk:1]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk]' />
              <text column='[textscan.0gez7c91i1v0ur16inimo1jblygy].[pcto:sum:trip_deptm:qk:1]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#acacac' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.0gez7c91i1v0ur16inimo1jblygy].[Deptm Hr (group)] / [textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk])</rows>
        <cols>[textscan.0gez7c91i1v0ur16inimo1jblygy].[pcto:sum:trip_deptm:qk:1]</cols>
      </table>
    </worksheet>
    <worksheet name='Trip Time of Day - Arrive'>
      <table>
        <view>
          <datasources>
            <datasource caption='time_of_day' name='textscan.0gez7c91i1v0ur16inimo1jblygy' />
          </datasources>
          <datasource-dependencies datasource='textscan.0gez7c91i1v0ur16inimo1jblygy'>
            <column datatype='integer' name='[Deptm Hr (group)]' role='dimension' type='ordinal'>
              <calculation class='categorical-bin' column='[deptm_hr]'>
                <bin value='0'>
                  <value>0</value>
                  <value>1</value>
                  <value>2</value>
                  <value>3</value>
                  <value>4</value>
                  <value>5</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                </bin>
                <bin value='6'>
                  <value>6</value>
                  <value>7</value>
                  <value>8</value>
                </bin>
                <bin value='9'>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                  <value>12</value>
                  <value>13</value>
                  <value>14</value>
                </bin>
                <bin value='15'>
                  <value>15</value>
                  <value>16</value>
                  <value>17</value>
                </bin>
                <bin value='18'>
                  <value>18</value>
                  <value>19</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='0' value='NI' />
                <alias key='6' value='AM' />
                <alias key='9' value='MD' />
                <alias key='15' value='PM' />
                <alias key='18' value='EV' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Deptm Hr' datatype='integer' name='[deptm_hr]' role='dimension' type='ordinal' />
            <column-instance column='[deptm_hr]' derivation='None' name='[none:deptm_hr:ok]' pivot='key' type='ordinal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[trip_arrtm]' derivation='Sum' name='[pcto:sum:trip_arrtm:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.0gez7c91i1v0ur16inimo1jblygy].[deptm_hr]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Trip Arrtm' datatype='real' name='[trip_arrtm]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[textscan.0gez7c91i1v0ur16inimo1jblygy].[Deptm Hr (group)]' value='false' />
            <format attr='display' field='[textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.0gez7c91i1v0ur16inimo1jblygy].[pcto:sum:trip_arrtm:qk:1]</rows>
        <cols>([textscan.0gez7c91i1v0ur16inimo1jblygy].[none:deptm_hr:ok] / ([textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk] / [textscan.0gez7c91i1v0ur16inimo1jblygy].[Deptm Hr (group)]))</cols>
      </table>
    </worksheet>
    <worksheet name='Trip Time of Day - Depart'>
      <table>
        <view>
          <datasources>
            <datasource caption='time_of_day' name='textscan.0gez7c91i1v0ur16inimo1jblygy' />
          </datasources>
          <datasource-dependencies datasource='textscan.0gez7c91i1v0ur16inimo1jblygy'>
            <column datatype='integer' name='[Deptm Hr (group)]' role='dimension' type='ordinal'>
              <calculation class='categorical-bin' column='[deptm_hr]'>
                <bin value='0'>
                  <value>0</value>
                  <value>1</value>
                  <value>2</value>
                  <value>3</value>
                  <value>4</value>
                  <value>5</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                </bin>
                <bin value='6'>
                  <value>6</value>
                  <value>7</value>
                  <value>8</value>
                </bin>
                <bin value='9'>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                  <value>12</value>
                  <value>13</value>
                  <value>14</value>
                </bin>
                <bin value='15'>
                  <value>15</value>
                  <value>16</value>
                  <value>17</value>
                </bin>
                <bin value='18'>
                  <value>18</value>
                  <value>19</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='0' value='NI' />
                <alias key='6' value='AM' />
                <alias key='9' value='MD' />
                <alias key='15' value='PM' />
                <alias key='18' value='EV' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Deptm Hr' datatype='integer' name='[deptm_hr]' role='dimension' type='ordinal' />
            <column-instance column='[deptm_hr]' derivation='None' name='[none:deptm_hr:ok]' pivot='key' type='ordinal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[trip_deptm]' derivation='Sum' name='[pcto:sum:trip_deptm:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.0gez7c91i1v0ur16inimo1jblygy].[deptm_hr]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Trip Deptm' datatype='real' name='[trip_deptm]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0gez7c91i1v0ur16inimo1jblygy].[Deptm Hr (group)]'>
            <groupfilter from='0' function='range' level='[Deptm Hr (group)]' to='18' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk]</column>
            <column>[textscan.0gez7c91i1v0ur16inimo1jblygy].[Deptm Hr (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[textscan.0gez7c91i1v0ur16inimo1jblygy].[Deptm Hr (group)]' value='false' />
            <format attr='display' field='[textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.0gez7c91i1v0ur16inimo1jblygy].[pcto:sum:trip_deptm:qk:2]</rows>
        <cols>([textscan.0gez7c91i1v0ur16inimo1jblygy].[none:deptm_hr:ok] / ([textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk] / [textscan.0gez7c91i1v0ur16inimo1jblygy].[Deptm Hr (group)]))</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='% Tours'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='tours' name='textscan.1jlrx2d0q7leqp169eg6f0u5j116' />
      </datasources>
      <datasource-dependencies datasource='textscan.1jlrx2d0q7leqp169eg6f0u5j116'>
        <column-instance column='[pptyp]' derivation='None' name='[none:pptyp:nk]' pivot='key' type='nominal' />
        <column caption='Pptyp' datatype='string' name='[pptyp]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='4625' id='6' name='% tours by purpose' pane-specification-id='0' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' type='color' w='48900' x='50400' y='2375' />
        <zone h='20625' id='8' mode='radiolist' name='% tours by purpose' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]' show-all='false' type='filter' w='49100' x='48800' y='9500' />
        <zone h='90375' id='1' name='% tours by purpose' show-title='true' w='43600' x='2500' y='3125' />
      </zones>
    </dashboard>
    <dashboard name='Aggregate Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='aggregate' name='textscan.1q85wlf1przf9h1ayoa2g0w8pr35' />
      </datasources>
      <datasource-dependencies datasource='textscan.1q85wlf1przf9h1ayoa2g0w8pr35'>
        <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
        <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='10' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='160' h='100000' id='9' is-fixed='true' param='vert' type='layout-flow' w='100000' x='0' y='0'>
              <zone h='15375' id='11' name='Aggregate Totals' param='[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[none:source:nk]' type='filter' w='100000' x='0' y='0' />
              <zone h='7875' id='12' name='Aggregate Totals' pane-specification-id='0' param='[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[none:source:nk]' type='color' w='100000' x='0' y='15375' />
            </zone>
          </zone>
        </zone>
        <zone h='45125' id='8' name='Aggregate Totals' show-title='true' w='25500' x='2500' y='28250' />
        <zone h='85125' id='13' name='Aggregate Means' show-title='true' w='62400' x='34600' y='7875' />
      </zones>
    </dashboard>
    <dashboard name='Daysim' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Soundcast: Activity Simulation&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4461' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11307' id='4' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4461' />
            <zone h='83817' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15768'>
              <flipboard active-id='16' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Aggregate Measures' captured-sheet='Aggregate Dashboard' id='16' />
                  <story-point caption='Tour Mode Share' captured-sheet='Tour Mode Share' id='13'>
                    <currentDeltas />
                    <capturedDeltas>
                      <worksheet name='Tour Mode Share'>
                        <filter class='categorical' column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]'>
                          <groupfilter function='level-members' level='[none:pdpurp:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]'>
                          <groupfilter function='level-members' level='[none:pptyp:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Trip Mode Share' captured-sheet='Trip Mode Share' id='22' />
                  <story-point caption='Avg Tours per Person' captured-sheet='Avg Tours by Person Type' id='18' />
                  <story-point caption='Tour Time/Distance' captured-sheet='Tour Time/Dist' id='2' />
                  <story-point caption='Tour Departure Time' captured-sheet='Tour Leave Origin Time' id='19' />
                  <story-point caption='Trip Departure Time' captured-sheet='Trip Departure Time of Day' id='21' />
                  <story-point caption='Total Tours' captured-sheet='Total Tours' id='17' />
                  <story-point caption='Tour Purpose Distribution' captured-sheet='% Tours' id='9'>
                    <capturedDeltas>
                      <worksheet name='% tours by purpose'>
                        <filter class='categorical' column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]'>
                          <groupfilter function='member' level='[none:pptyp:nk]' member='&quot;Child Age 0-4&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='% tours by purpose and person type'>
                        <filter class='categorical' column='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]'>
                          <groupfilter function='member' level='[none:pptyp:nk]' member='&quot;Child Age 5-15&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Tour Destinations' captured-sheet='Tour Destinations' id='24' />
                  <story-point caption='Persons by Home Locations' captured-sheet='Person Home Location' id='25' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Daysim: Trips' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Story Title</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4461' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11307' id='4' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4461' />
            <zone h='83817' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15768'>
              <flipboard active-id='2' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Trip Mode Share' captured-sheet='' id='1' />
                  <story-point caption='Time of Day' captured-sheet='Trip Time of Day' id='2' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Person Home Location'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='person' name='textscan.0uj88h305cvmc715pwmi70t6g17m' />
      </datasources>
      <datasource-dependencies datasource='textscan.0uj88h305cvmc715pwmi70t6g17m'>
        <column-instance column='[pptyp]' derivation='None' name='[none:pptyp:nk]' pivot='key' type='nominal' />
        <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
        <column caption='Pptyp' datatype='string' name='[pptyp]' role='dimension' type='nominal' />
        <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='11' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='14' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='12' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='100000' id='10' name='Person Charts' show-title='true' w='42000' x='0' y='0' />
              <zone h='100000' id='16' name='Person' show-title='true' w='42000' x='42000' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='13' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='8375' id='15' name='Person Charts' pane-specification-id='0' param='[textscan.0uj88h305cvmc715pwmi70t6g17m].[none:source:nk]' type='color' w='16000' x='84000' y='0' />
              <zone h='14875' id='17' name='Person' param='[textscan.0uj88h305cvmc715pwmi70t6g17m].[none:source:nk]' type='filter' w='16000' x='84000' y='8375' />
              <zone h='23875' id='18' mode='radiolist' name='Person' param='[textscan.0uj88h305cvmc715pwmi70t6g17m].[none:pptyp:nk]' type='filter' w='16000' x='84000' y='23250' />
              <zone h='12875' id='19' name='Person' pane-specification-id='0' param='[textscan.0uj88h305cvmc715pwmi70t6g17m].[sum:psexpfac:qk]' type='size' w='16000' x='84000' y='47125' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Soundcast Overview' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Soundcast Overview</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4461' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11307' id='4' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4461' />
            <zone h='83817' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15768'>
              <flipboard active-id='1' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Aggregate Measures' captured-sheet='Aggregate Dashboard' id='1' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Total Tours by Person Type &amp; Purpose'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='tours' name='textscan.1jlrx2d0q7leqp169eg6f0u5j116' />
      </datasources>
      <datasource-dependencies datasource='textscan.1jlrx2d0q7leqp169eg6f0u5j116'>
        <column-instance column='[pdpurp]' derivation='None' name='[none:pdpurp:nk]' pivot='key' type='nominal' />
        <column-instance column='[pptyp]' derivation='None' name='[none:pptyp:nk]' pivot='key' type='nominal' />
        <column caption='Pdpurp' datatype='string' name='[pdpurp]' role='dimension' type='nominal' />
        <column caption='Pptyp' datatype='string' name='[pptyp]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='73875' id='1' name='Avg Tours by Person Type' show-title='true' w='49800' x='0' y='0' />
              <zone h='66250' id='8' name='Avg Tours by Purpose' show-title='true' w='49800' x='49800' y='7625' />
              <zone h='26125' id='6' name='Avg Tours by Person Type' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]' type='filter' w='49800' x='0' y='73875' />
              <zone h='26125' id='9' name='Avg Tours by Purpose' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]' type='filter' w='49800' x='49800' y='73875' />
              <zone h='7625' id='7' name='Avg Tours by Person Type' pane-specification-id='1' param='[textscan.1imzlm61lrdqzy1720h55190e7l7].[none:source:nk]' type='color' w='49800' x='49800' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Tour Destinations'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='tours' name='textscan.1jlrx2d0q7leqp169eg6f0u5j116' />
      </datasources>
      <datasource-dependencies datasource='textscan.1jlrx2d0q7leqp169eg6f0u5j116'>
        <column-instance column='[pdpurp]' derivation='None' name='[none:pdpurp:nk]' pivot='key' type='nominal' />
        <column-instance column='[pptyp]' derivation='None' name='[none:pptyp:nk]' pivot='key' type='nominal' />
        <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
        <column-instance column='[tmodetp]' derivation='None' name='[none:tmodetp:nk]' pivot='key' type='nominal' />
        <column caption='Pdpurp' datatype='string' name='[pdpurp]' role='dimension' type='nominal' />
        <column caption='Pptyp' datatype='string' name='[pptyp]' role='dimension' type='nominal' />
        <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
        <column caption='Tmodetp' datatype='string' name='[tmodetp]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='100000' id='1' name='Destination Tours Map' show-title='true' w='42000' x='42000' y='0' />
              <zone h='100000' id='12' name='Destination Tours Table' show-title='true' w='42000' x='0' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='8375' id='11' name='Destination Tours Map' pane-specification-id='0' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' type='color' w='16000' x='84000' y='0' />
              <zone h='14875' id='6' name='Destination Tours Map' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' type='filter' w='16000' x='84000' y='8375' />
              <zone h='19458' id='7' mode='radiolist' name='Destination Tours Map' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:tmodetp:nk]' type='filter' w='16000' x='84000' y='23250' />
              <zone h='19458' id='8' mode='radiolist' name='Destination Tours Map' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]' type='filter' w='16000' x='84000' y='42708' />
              <zone h='19458' id='9' mode='radiolist' name='Destination Tours Map' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]' type='filter' w='16000' x='84000' y='62166' />
              <zone h='18376' id='10' name='Destination Tours Map' pane-specification-id='0' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[sum:toexpfac:qk]' type='size' w='16000' x='84000' y='81624' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Tour Time/Dist'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='tours' name='textscan.1jlrx2d0q7leqp169eg6f0u5j116' />
      </datasources>
      <datasource-dependencies datasource='textscan.1jlrx2d0q7leqp169eg6f0u5j116'>
        <column datatype='string' name='[district_name]' role='dimension' type='nominal' />
        <column-instance column='[district_name]' derivation='None' name='[none:district_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[pptyp]' derivation='None' name='[none:pptyp:nk]' pivot='key' type='nominal' />
        <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
        <column caption='Pptyp' datatype='string' name='[pptyp]' role='dimension' type='nominal' />
        <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='16' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='12' param='horz' type='layout-flow' w='84000' x='0' y='0'>
              <zone h='100000' id='5' param='horz' type='layout-flow' w='84000' x='0' y='0'>
                <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
                  <zone h='100000' id='14' name='Avg Tour Time by Purpose' show-title='true' w='42000' x='0' y='0' />
                  <zone h='100000' id='19' name='Avg Tour Distance by Purpose' show-title='true' w='42000' x='42000' y='0' />
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='15' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='8375' id='18' name='Avg Tour Time by Purpose' pane-specification-id='0' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' type='color' w='16000' x='84000' y='0' />
              <zone h='14875' id='13' name='Avg Tour Time by Purpose' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' type='filter' w='16000' x='84000' y='8375' />
              <zone h='23875' id='17' mode='radiolist' name='Avg Tour Time by Purpose' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]' type='filter' w='16000' x='84000' y='23250' />
              <zone h='30625' id='20' mode='radiolist' name='Avg Tour Distance by Purpose' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:district_name:nk]' type='filter' w='16000' x='84000' y='47125' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Tours by Person Type &amp; Purpose'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='tours' name='textscan.1jlrx2d0q7leqp169eg6f0u5j116' />
      </datasources>
      <datasource-dependencies datasource='textscan.1jlrx2d0q7leqp169eg6f0u5j116'>
        <column-instance column='[pdpurp]' derivation='None' name='[none:pdpurp:nk]' pivot='key' type='nominal' />
        <column-instance column='[pptyp]' derivation='None' name='[none:pptyp:nk]' pivot='key' type='nominal' />
        <column caption='Pdpurp' datatype='string' name='[pdpurp]' role='dimension' type='nominal' />
        <column caption='Pptyp' datatype='string' name='[pptyp]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='73875' id='1' name='Avg Tours by Person Type' show-title='true' w='49800' x='0' y='0' />
              <zone h='66250' id='8' name='Avg Tours by Purpose' show-title='true' w='49800' x='49800' y='7625' />
              <zone h='26125' id='6' name='Avg Tours by Person Type' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]' type='filter' w='49800' x='0' y='73875' />
              <zone h='26125' id='9' name='Avg Tours by Purpose' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]' type='filter' w='49800' x='49800' y='73875' />
              <zone h='7625' id='7' name='Avg Tours by Person Type' pane-specification-id='1' param='[textscan.1imzlm61lrdqzy1720h55190e7l7].[none:source:nk]' type='color' w='49800' x='49800' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Trip Time of Day'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='time_of_day' name='textscan.0gez7c91i1v0ur16inimo1jblygy' />
      </datasources>
      <datasource-dependencies datasource='textscan.0gez7c91i1v0ur16inimo1jblygy'>
        <column datatype='integer' name='[Deptm Hr (group)]' role='dimension' type='ordinal'>
          <calculation class='categorical-bin' column='[deptm_hr]'>
            <bin value='0'>
              <value>0</value>
              <value>1</value>
              <value>2</value>
              <value>3</value>
              <value>4</value>
              <value>5</value>
              <value>20</value>
              <value>21</value>
              <value>22</value>
              <value>23</value>
            </bin>
            <bin value='6'>
              <value>6</value>
              <value>7</value>
              <value>8</value>
            </bin>
            <bin value='9'>
              <value>9</value>
              <value>10</value>
              <value>11</value>
              <value>12</value>
              <value>13</value>
              <value>14</value>
            </bin>
            <bin value='15'>
              <value>15</value>
              <value>16</value>
              <value>17</value>
            </bin>
            <bin value='18'>
              <value>18</value>
              <value>19</value>
            </bin>
          </calculation>
          <aliases>
            <alias key='0' value='NI' />
            <alias key='6' value='AM' />
            <alias key='9' value='MD' />
            <alias key='15' value='PM' />
            <alias key='18' value='EV' />
          </aliases>
        </column>
        <column aggregation='Sum' caption='Deptm Hr' datatype='integer' name='[deptm_hr]' role='dimension' type='ordinal' />
        <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
        <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='42250' id='1' name='Trip TOD Groups - Arrive' show-title='true' w='42000' x='0' y='0' />
              <zone h='42250' id='8' name='Trip TOD Groups - Depart' show-title='true' w='42000' x='42000' y='0' />
              <zone h='57750' id='10' name='Trip Time of Day - Arrive' show-title='true' w='42000' x='0' y='42250' />
              <zone h='57750' id='11' name='Trip Time of Day - Depart' show-title='true' w='42000' x='42000' y='42250' />
            </zone>
            <zone fixed-size='160' h='100000' id='13' is-fixed='true' type='layout-basic' w='16000' x='84000' y='0'>
              <zone h='42250' id='4' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
                <zone fixed-size='147' h='19875' id='7' is-fixed='true' name='Trip TOD Groups - Arrive' pane-specification-id='0' param='[textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk]' type='color' w='16000' x='84000' y='0' />
                <zone h='14875' id='6' name='Trip TOD Groups - Arrive' param='[textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk]' type='filter' w='16000' x='84000' y='19875' />
              </zone>
              <zone h='57750' id='14' param='vert' type='layout-flow' w='16000' x='84000' y='42250'>
                <zone h='17125' id='12' name='Trip Time of Day - Depart' param='[textscan.0gez7c91i1v0ur16inimo1jblygy].[Deptm Hr (group)]' type='filter' w='16000' x='84000' y='42250' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='148'>
    <window class='dashboard' name='Soundcast Overview'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='dashboard' maximized='true' name='Daysim'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='dashboard' name='Tour Time/Dist'>
      <viewpoints>
        <viewpoint name='Avg Tour Distance by Purpose' />
        <viewpoint name='Avg Tour Time by Purpose'>
          <highlight>
            <color-one-way>
              <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Avg Tour Distance by Purpose'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:district_name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1imzlm61lrdqzy1720h55190e7l7].[none:source:nk]</field>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]</field>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]</field>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Avg Tour Time by Purpose'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]' type='filter' />
            <card param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]</field>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]</field>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Total Tours'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]' type='filter' />
            <card mode='radiolist' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]' type='filter' />
            <card mode='radiolist' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:district_name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:district_name:nk]</field>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]</field>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]</field>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</field>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:tmodetp:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Avg Tours by Person Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.1imzlm61lrdqzy1720h55190e7l7].[none:source:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.1imzlm61lrdqzy1720h55190e7l7].[none:source:nk]' type='filter' />
            <card mode='radiolist' param='[textscan.1imzlm61lrdqzy1720h55190e7l7].[none:pptyp:nk]' type='filter' />
            <card mode='radiolist' param='[textscan.1imzlm61lrdqzy1720h55190e7l7].[none:measure:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1imzlm61lrdqzy1720h55190e7l7].[:Measure Names]</field>
            <field>[textscan.1imzlm61lrdqzy1720h55190e7l7].[none:measure:nk]</field>
            <field>[textscan.1imzlm61lrdqzy1720h55190e7l7].[none:pptyp:nk]</field>
            <field>[textscan.1imzlm61lrdqzy1720h55190e7l7].[none:source:nk]</field>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]</field>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]</field>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Total Tours by Purpose and Person Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]</field>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]</field>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Avg Tours by Purpose'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]</field>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]</field>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Tour Mode Share'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' type='filter' />
            <card mode='radiolist' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]' type='filter' />
            <card mode='radiolist' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]' type='filter' />
            <card mode='radiolist' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:district_name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:district_name:nk]</field>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]</field>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]</field>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Tours by TAZ Destination'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1d4t0nd0p6lq15195h2if0f74s2c].[sum:toexpfac_dest:qk]' type='size' />
            <card pane-specification-id='0' param='[textscan.1d4t0nd0p6lq15195h2if0f74s2c].[none:source:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[textscan.1d4t0nd0p6lq15195h2if0f74s2c].[none:district_name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1d4t0nd0p6lq15195h2if0f74s2c].[none:district_name:nk]</field>
            <field>[textscan.1d4t0nd0p6lq15195h2if0f74s2c].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Tours by TAZ Origin'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1d4t0nd0p6lq15195h2if0f74s2c].[none:source:nk]' type='color' />
            <card pane-specification-id='0' param='[textscan.1d4t0nd0p6lq15195h2if0f74s2c].[sum:toexpfac_origin:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[textscan.1d4t0nd0p6lq15195h2if0f74s2c].[none:district_name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1d4t0nd0p6lq15195h2if0f74s2c].[none:district_name:nk]</field>
            <field>[textscan.1d4t0nd0p6lq15195h2if0f74s2c].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Tours by Person Type &amp; Purpose'>
      <viewpoints>
        <viewpoint name='Avg Tours by Person Type'>
          <highlight>
            <color-one-way>
              <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Avg Tours by Purpose' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Total Tours by Person Type &amp; Purpose'>
      <viewpoints>
        <viewpoint name='Avg Tours by Person Type'>
          <highlight>
            <color-one-way>
              <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Avg Tours by Purpose' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='% tours by purpose'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='% tours by purpose and person type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]</field>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Aggregate Dashboard'>
      <viewpoints>
        <viewpoint name='Aggregate Means' />
        <viewpoint name='Aggregate Totals'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[none:source:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='13' />
    </window>
    <window class='dashboard' name='% Tours'>
      <viewpoints>
        <viewpoint name='% tours by purpose'>
          <highlight>
            <color-one-way>
              <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Tour Leave Origin Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' type='filter' />
            <card mode='radiolist' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:tmodetp:nk]' type='filter' />
            <card mode='radiolist' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]' type='filter' />
            <card mode='radiolist' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]</field>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]</field>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</field>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:tmodetp:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 34'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.1imzlm61lrdqzy1720h55190e7l7].[none:measure:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1imzlm61lrdqzy1720h55190e7l7].[:Measure Names]</field>
            <field>[textscan.1imzlm61lrdqzy1720h55190e7l7].[none:measure:nk]</field>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]</field>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Trip Time of Day - Depart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk]' type='filter' />
            <card param='[textscan.0gez7c91i1v0ur16inimo1jblygy].[Deptm Hr (group)]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0gez7c91i1v0ur16inimo1jblygy].[Deptm Hr (group)]</field>
            <field>[textscan.0gez7c91i1v0ur16inimo1jblygy].[none:deptm_hr:ok]</field>
            <field>[textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Trip TOD Groups - Depart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Trip TOD Groups - Arrive'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Trip Time of Day - Arrive'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0gez7c91i1v0ur16inimo1jblygy].[Deptm Hr (group)]</field>
            <field>[textscan.0gez7c91i1v0ur16inimo1jblygy].[none:deptm_hr:ok]</field>
            <field>[textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Trip Time of Day'>
      <viewpoints>
        <viewpoint name='Trip TOD Groups - Arrive'>
          <highlight>
            <color-one-way>
              <field>[textscan.0gez7c91i1v0ur16inimo1jblygy].[none:source:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Trip TOD Groups - Depart' />
        <viewpoint name='Trip Time of Day - Arrive'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Trip Time of Day - Depart'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
    </window>
    <window class='dashboard' name='Daysim: Trips'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='worksheet' name='Trip Departure Time of Day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:source:nk]' type='color' />
            <card param='[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:source:nk]' type='filter' />
            <card mode='radiolist' param='[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:mode:nk]' type='filter' />
            <card mode='radiolist' param='[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:dpurp:nk]' type='filter' />
            <card mode='radiolist' param='[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:pptyp:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:pptyp:nk]</field>
            <field>[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Trip Mode Share'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:source:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:source:nk]' type='filter' />
            <card mode='radiolist' param='[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:dpurp:nk]' type='filter' />
            <card mode='radiolist' param='[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:pptyp:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0pjzefb1h3d84717pbfcj0z5x87c].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Destination Tours Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[sum:toexpfac:qk]' type='size' />
            <card pane-specification-id='0' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' type='filter' />
            <card mode='radiolist' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:tmodetp:nk]' type='filter' />
            <card mode='radiolist' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]' type='filter' />
            <card mode='radiolist' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pdpurp:nk]</field>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:pptyp:nk]</field>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</field>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:tmodetp:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Destination Tours Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Tour Destinations'>
      <viewpoints>
        <viewpoint name='Destination Tours Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[textscan.1jlrx2d0q7leqp169eg6f0u5j116].[none:source:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Destination Tours Table' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Person'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.0uj88h305cvmc715pwmi70t6g17m].[sum:psexpfac:qk]' type='size' />
            <card pane-specification-id='0' param='[textscan.0uj88h305cvmc715pwmi70t6g17m].[none:source:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.0uj88h305cvmc715pwmi70t6g17m].[none:source:nk]' type='filter' />
            <card mode='radiolist' param='[textscan.0uj88h305cvmc715pwmi70t6g17m].[none:pptyp:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0uj88h305cvmc715pwmi70t6g17m].[none:pptyp:nk]</field>
            <field>[textscan.0uj88h305cvmc715pwmi70t6g17m].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Person Charts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.0uj88h305cvmc715pwmi70t6g17m].[none:source:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0uj88h305cvmc715pwmi70t6g17m].[none:pptyp:nk]</field>
            <field>[textscan.0uj88h305cvmc715pwmi70t6g17m].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Person Home Location'>
      <viewpoints>
        <viewpoint name='Person'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Person Charts'>
          <highlight>
            <color-one-way>
              <field>[textscan.0uj88h305cvmc715pwmi70t6g17m].[none:source:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='18' />
    </window>
    <window class='worksheet' hidden='true' name='Aggregate Means'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[none:source:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[none:source:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[none:description:nk]</field>
            <field>[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Aggregate Totals'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[none:source:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[none:source:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[none:run_name:nk]</field>
            <field>[textscan.1q85wlf1przf9h1ayoa2g0w8pr35].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Soundcast Overview' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Daysim' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Tour Time/Dist' width='192'>
      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
      QmkSAKG0/wczgS3WK/pmMgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Avg Tour Distance by Purpose' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO2dWXBUd3b/P713q1sttVr7vguhZSQkkCzEjg1hxhNXeZzZyhlXMq5KUpWq
      pOYly0PmIalU/ZOXJDNOzYxnPGQmpjBgNmOMWASWQICQhGQtNNpXWku31OpW7933/6DSjWVs
      MIMWEPfzgiSae8/vco9+yznne2SCIAhISLygyNfbAAmJ9URyAIkXGskBJF5oJAeQeKGRHEDi
      hUZyAIkXGskBJF5oJAeQeKGRHEDihUZyAIkXGskBJF5oJAeQeKGRHEDihUZyAIkXGuUXf+Dz
      +fD7/ethi4TEmvOQA8jlchQKxXrYIvEVzM7OYjKZ1tuMDYlMKoh59vnoVg8XB73rbcaG5KEZ
      4POEw2Fu3brF4OAgAGlpaezYseOJbzI+Pg5ASkrKH2Di2hEOh2lpaaGoqIiIiIjHfranp4eC
      ggKUysXHKAgC9+/fp7W1lczMTEpKSmhoaMDhcLB3717i4uLo7OwkLS2N6OhoAoEAt2/fpqKi
      Aq1W+5X3GrG7OX3XuqJjlVjkkQ4gCAJtbW1s2rSJ2tpa5HI5IyMjWCwWUlJSyM7OprW1Fb/f
      z9atW7HZbNy/f5/Y2FgyMjJoaWlBpVJRX19PRkYG3/3udx/7Yj0twWCQpqYm5HI55eXlDA0N
      MT4+TmlpKTMzM6SmpjIxMUFkZCSDg4MEAgFKS0txu91YLBY6OjpITEzk1q1bZGZmkpiYSEtL
      C8FgkK1bt2KxWHA4HGRmZnLs2DG+973vUVBQgEwmIxAIMD4+zqFDh3jvvfeYm5sjFAqRn5/P
      p59+SlxcHJcuXeLHP/4x0dHRXL58mVu3blFcXPxIB5BYPR7pALDoBE1NTYyMjFBWVkZjYyNu
      t5ubN29SVVVFZ2cn2dnZdHd3c+zYMb75zW9y7tw5ioqKOH36NP/0T/9EZGQk8fHxqNXqVR/Q
      yMgIN2/eJD4+Hq1WS0NDA3v27OHMmTO4XC5effVVGhsbycrKoqOjg9LSUhoaGhgcHGT//v0A
      dHR04PF4cLlcOJ1O+vr6cLvdhMNhrl+/TkZGBkqlkqioKOLi4sR7q9Vq9u7di9vtJjExEUEQ
      MJvN5OXl0drayv79++nv7wdgbGwMu91OTEzMqj8Tia/mscegMpmM2tpa3nrrLUpLSykrK2N+
      fh673c7k5CRxcXHs2bOHjIwMXC4XmzZtQqvVMjs7i9FoJCUlhYiICIxG45psrs1mM7m5uVit
      VqxWKyaTifz8fPx+P+FwmFAoJJ5yJSYmkpWVhc/nQ6FQkJOTQ1RUFPPz86SkpPDSSy/hdrvx
      +/0oFAoCgQAVFRVMT09jtVrR6XQYDAZkMhmw+MtidnaWq1evsmPHDmJjYwkEAiwsLKDRaDAa
      jSiVSgRBoKOjg+npaYaGhkSnkFh7HjsDKJVKmpqaGBwcJCEhAY/Hg8FgQKPRUF5ezsmTJ/nZ
      z37Gyy+/zJYtW/jd734HQElJCT09PchkMuLi4rh79y5lZWVERkau6oD8fj/9/f3o9XrMZjPD
      w8P8+te/Jjc3F4CPPvoIh8NBUVERSqUSmUxGREQE8fHxHD58GIfDwTe+8Q3q6+uxWCzk5ubi
      8XjEJc7Q0BBKpRKDwYDD4eCzzz6joqICmUyG1+vl8OHDeDwe7HY7ZWVlXL9+nTt37rBr1y5k
      MhlKpRKFQsGhQ4cIhUL89re/JScnZ1WficRXI50CPQXhcJjW1laGh4cRBAGNRsP27dtXfFnz
      zvkW/t81aRO8Gjx2BpD4amQyGcXFxRQUFIjf63S6dbZK4kmQHOApkMlkaLXaVT/BiTNoqMqS
      NsurgbQEeg6YnJwkISFhvc3YkEjJcBIvNNIM8Bxww3KD+8H7623GhkTaA3xN7HY79+/fx2g0
      kp2dzf379/F4POTn52MymbBarWK8YyklIiMjY0X2B122Lv6z9z9XYBQSX2TDLYHC4TBDQ0MM
      Dw/j8XiYmJggGAwyPT3NgwcPGBgYYHx8HEEQmJmZwel0ij9zOBy4XC48Hg9zc3PLrtnS0kI4
      HOby5cs0NjZy9+5d7HY7DQ0N9Pf38+tf/5qxsTEEQaC/v19MhZB4ttlwM8Do6CjHjx/HYDBQ
      Xl7O1atXefvttzl9+jSzs7OkpaUxMzPDD37wA06fPo3BYMDlcuF2u9m0aROBQIDIyEgUCgU1
      NTXAYor4yy+/TDgcZmJiAqfTSX5+PgUFBZw4cYItW7aQnZ0NgMfj4dq1a8tSJCSeXTbcDGA2
      m4mLi2NmZoZQKIRc/n9D1Gq1VFVVUVpaysmTJ4mMjGRmZga1Wk1aWhrZ2dlMTk7S1dVFUVHR
      susuzQJLCXLhcBhBEJDL5SQnJ4tJfrdu3WJsbAyr1UpPT8+ajl3iydlwDjA3N8fc3BxJSUl4
      vV6CwSAXLlzA4/GIn6msrKS1tZUtW7aQl5eH2+1mYmICvV4vJrEZjUbx86FQiA8++ID6+nps
      NhsRERG0tLRw7tw50tPTxVwggJ07d/IP//AP5OTkiAEyiWeXDXcKtLS2D4fDmEwmFhYWCAQC
      YiaqXq9HqVRis9mIjo5GEARsNhsqlQqNRsPZs2fZtGkTcXFxTE1Nidc1mUzihtZkMuF0OgmF
      QphMJjQaDS6XS7wGgMPhEO/1tPzqxq+kTfAqseH2AEvJd0t8VQp2bGys+HViYiIAbrebbdu2
      kZaWhs1mE19emUyG2WxeNit88XTHYDAs+z4qKurpBiKxJmw4B3gaIiIixMzMpKQkkpKS1tmi
      RZRyJXqVfr3N2JBsuCXQRkRKhVg9HnIAl8vFwsLCetkj8SW43e5VLyV9UZFmgOeAzr4RnDLJ
      AVaDx6pCzM3NIZPJiIqKYnZ2Flg8a/8yBEHAbrdjNBpRqVQrb+0qIwgCTqcTvV7/2PJNQRBY
      WFhAr9cvK4l0u904nU50Oh16vR6Hw0EwGMRkMqFSqcTySJVKRTgcZn5+Xgy8fRWf9k5LBTGr
      xCPjAG63m//4j//gn//5n7Hb7fzLv/wL//7v/44gCIRCITEYFAqFxO//7d/+jeHh4bWy/yE+
      b48gCGId8NLXS38u/fzzfxcMBjl69Kio5vDF8X3+en6/nxMnTuDz+ViaRAOBAMePH6epqYlf
      /OIXtLe3c+TIEU6cOMGNGzcYHR3lnXfeYWJiAoCBgQHeeecdXC7Xuj2vF53HngLJZDJsNhu3
      b98Wz7o//vhj7t27h9vt5sCBA9TX1zMzM8Obb765FjY/kgcPHnD48GHUajUHDx6krq4OlUpF
      amoqY2NjHDx4kPr6erKysrhy5Qpms5ktW7YwODiIz+djamoKi8VCfX09ycnJbN26lYsXLyII
      Anv37qWurg65XM7mzZvp7u6mu7ub8vJyYPHI9Uc/+hGCIPD73/+e0dFRKisrKSgo4NSpU0RH
      R4vHpX6/nytXrjyXM+VG4rGRYLlcTlpaGhcuXBALxJuamlAqlURHR+PxeFCr1QSDQVEAaz3R
      aDTo9XrkcjlOp5PY2FjefvttxsfHl0WDAQoLC3n11VexWq04nU5+9KMfkZqaytDQEPv27eON
      N94Qlysej4fJyUkiIyMJh8NER0eTlZVFUVHRskjwUspEQUEBZrNZTJcIh8OUlJSIDnDp0iXk
      cjlut5vp6ek1fUYS/8fXkkUpLCzE5XKRk5ODSqUiKSmJhIQENBoNY2NjLCwsEBMTQyAQWAub
      H4nX6yUmJoaoqCimpqaYmZmhtbUVvV5PXFwcFotFdFSFQoFCoUCpVCKXy+no6BC1egYHBzl/
      /jy9vb2YzWYSEhLw+/1ERESQkpJCb2+vuOdZWgIFg0HOnDlDV1cXUVFRREVFMTAwwK1bt0hK
      SlqWl1RZWUltbS1arVaMHkusPY88BQoGg1gsFmJjY3nw4AEJCQlMTU2RmpqKxWIhLi4Os9mM
      xWJBJpORmJiIw+EgOzt71eVPvopwOEx7ezvBYJCCggKmp6eZnJykoKAAQRDo7e1Fp9OJuUJm
      s5m5uTnkcjnDw8NERESQmZmJxWIhISGBqKgoLBYLer2e6Oho3G43NpuNvLw8ZmdnCYVC4hl9
      MBhkZGQEr9eLQqGgoKCAoaEhPB4PpaWlGAwGBgcHiY+PR6/Xi6nT6enpjxQNk1QhVg/pGPQp
      WHK2kZERYHEPUF1dveJKzpIDrB5SKsRTsKQ/urQJlnj+kGaA54D+kXEUEdHrbcaGRJoBngMM
      GiUJsVIy3GogOcBzQCAcwOl3rrcZGxLJAZ4Dzg+e5z/rpIKY1UBygK+BIAhcvnwZi8WCz+fj
      wIEDYnR427ZtlJaWcvz4cWpqaigoKMDpdPKzn/2MP//zPyc+Pn69zZd4BBvOAWZnZzly5Agq
      lYra2lqampp4/fXXuXz5Mg6HA7/fj0aj4Xvf+x6ffPIJsbGxdHd3o9Vqyc/PXyZ9XlVVJV63
      vLycnTt3cvLkSbq7u8V64osXLxIREcHCwoKYM3Tx4kWxH4HEs82GK4pfWFhgfn4euVyOz+dj
      enqaUCiE3W7H4XCwe/duoqKiuHPnDnNzc7S1teFyuRgbGyMQCGCxWGhraxPLJGExGh4TE8P8
      /Dw6nY7Y2FhUKhU6nQ6v10tpaSlpaWkA9Pb2YrfbiYyMlOoqngM2nAPIZDLKysqQy+X09fUR
      DAaZmZkRu8Co1Wq2bt3KsWPHKCgoICoqil27drF3716x19f4+DipqaniNQVBoKenhytXrrBn
      zx5iYmKYmZlhenqaqKioZSkOS4l3s7OzUo7Pc8CGWwIlJibS2tqK0Whkx44dJCYm0tXVRXl5
      OYIgEBUVhclk4sCBAxQXF5Ofn8/ly5cxmUzExMSQlJSE2Wxelp8fCoWwWq34/X7OnDnDzp07
      GR0dpaWlhd27dyOTycjNzRVzhnJycjCZTGzevHkdn4TE10EKhH2OmZkZGhsb2blzJwMDA3R2
      dgKLSXO7d+8WlzlrjSSLsnpsuBngaYiNjeW1114DICYmhsrKynW2SGK1kWaA54C2/jYmFZPr
      bcaG5EtVIdxu93rZI/ElSKoQq8dDDiBNCM8eU1NTUkBtlXhoD/D58j6JZ4MLXVbePdy93mZs
      SB4ri3LmzBnGx8cJh8NUVVWxdevWFXMSQRC4dOkSWq2WHTt2rMg1n4ZwOMz58+fZsWPHMh3Q
      LyMYDNLQ0MD27dvFaq5QKERjYyP9/f0YjUZqamq4fPkyLpeLffv2kZqaytWrV6moqCAhIQGH
      w8Enn3zCN7/5zYe0RT+PyxdkxC4tS1eDRzqAIAhMTExQXFwMQH19PZGRkTQ1NZGSkkJycjI3
      btwgMTERnU7HyMgIVVVVJCcnU1dXh9vt5tVXX+XWrVvMzs4SDAZ5/fXXaWpqYnx8nIqKCqxW
      6yP/858Uj8fDqVOnUCgUvPzyy9y9e5ehoSFqamoYGxujuLiYnp4e4uPjaWtrIxgMsnPnTmZn
      Z+no6ODBgweiikNhYSG5ubnU1dURCAQ4ePAgTU1NzM7OUlpayvnz54mMjBQ7xQuCQGxsLNXV
      1fzmN7+hpaWFpKQkMjIyaGlpYWxsjJaWFoqKikTnt1gsHDx4cMXGL/FkPDYSLAgCt2/fprGx
      kdTUVI4fP47D4eDIkSN0dHRgtVqpra3lk08+YXp6mp6eHs6dO0c4HCYnJ4f//d//paWlhdjY
      WBwOB7dv32ZycpK5uTnOnz+/4gOamJhgYGCAUCjE4OAgXV1dfPvb3+bixYvcvXsXp9NJb2+v
      2OnlG9/4Brdv3+bSpUt861vfwmg0cvfuXVJSUggGg2IAbGpqiubmZm7evCmqPGRnZ1NSUiLO
      iEqlkqKiIhYWFoiPjxcVKpKTk5mfn2fXrl1kZGQA0NPTg1wuX6ZSLbH2fC1ViLKyMv72b/+W
      V199FZlMxtatW/nhD38oauPr9Xqqq6tRKpX09vbidDpRqVSo1WpxU202m9FoNExMTNDT07Nq
      Yq9RUVFUV1czPT1Nb28vSqUShUKBTCZDqVTi9XpxOhdz641Go1i8v/S5pZdbpVJhMBgYHh5G
      qVSKStH79u3D5/PR3Nz80L0FQaCvr49r165x8OBB4uLiWFhYYGpqisjIyGUKcrOzs9hsNvr7
      ++nv71+VZyHxeBQ//elPf/qoD1itVlJTU0lNTUWtVqPT6WhpaUGlUpGcnIwgCBQVFTEwMEAg
      EKC0tJTt27fT1dXF2NgYr732Gm63m6ysLAKBAKmpqSwsLODz+TCZTKSkpBAVFUV6evqKDEgQ
      BJqamtBoNFRVVeH1emlubqaqqor09HRu3ryJVqslNzdXfLFDoRCJiYncuHEDtVpNVVUVzc3N
      KBQKMjIyGBgYQKVSER8fj81mw+12i0Eyr9dLYmIiMpkMr9fLxYsXmZmZYXBwkNzcXLq6urBY
      LOzatQuTycT09DSpqakUFhZSVlZGMBiksrLykaoQzX0PuD4sqcetBlIg7CkIh8PcuHGDvr4+
      YLFpxv79+1d8WSOpQqweUirEUyCXy6mtraW2tna9TZH4A3nkDBAOh2lra2N0dBSA3Nzch6QA
      P8/09DSDg4Ns2bJlRXpjSSxyufU+zZNScc1q8Nhj0Fu3bpGVlUV0dDRnzpzBYDCwsLBAdHQ0
      LpcLk8lEb28vJpOJ+Ph4FAoFVquViYkJAoEAhYWFBAIB+vr6iI+PJz09nba2NlQqFZs2bWJs
      bIyZmRny8vKkaOdXUJwSxb4tUoeY1eCxv6YFQaC1tRWdTodareb+/fu0tLRQUlJCf38/kZGR
      TExM4PF4eP3117l69Sr5+fk0NzeTnJxMX18fVqsVvV7PyMgIhw4d4pNPPkGj0eDz+Th16hRx
      cXGMjo7yxhtvPFaXX0JiJfla8ui1tbUUFBTwX//1X9hsNlFfH6C4uJj+/n5cLpd4vAiQk5ND
      YmIiPT09TE1N8dJLL5GXl0d6ejoxMTGihmZVVRVXrlwhKiqKQCAgOcCXcGfyDpd7Lq+3GRuS
      rzUDXL9+nc7OTmJiYigpKaGpqUkUlh0fHxfVjb+47pfJZGi1WgoKCujs7ESn05Gens7c3Bxx
      cXEIgsC9e/fIysoSFZqfVUZHR7l69SoJCQm89NJLXLt2TQxupaSkYLFYxGWgIAhcu3aNioqK
      FREJnnBNcHH44gqMQuKLPHITLAjCQ9mhSyH/L/t+6euv+vOrPr/09ef//EMJBoM0NjYil8sp
      KSlhYGCAoqIi+vv78Xq9zM7OYjQaqaysxGKxYDQa6enpwWg0kpSUJDa7djgcZGZmAouHATdv
      3iQvL4+zZ88SHR2NSqUiNzeXjo4OcnNzOXXqFN///vcpLCykubmZY8eO8ZOf/GRZcf0filQR
      tno8cgaQyWRf+kJ+8Wef//6LL/KXvdhf9fVKMDIyQnNzMwkJCeh0Oq5cuUJWVhZNTU04HA62
      bdtGZ2cnCQkJXL9+HZlMRjgcxm63U15ejsvlIiIiYlmPYLlcTk1NDcFgEIPBgEajwWw2k5SU
      RENDAwUFBaJArt1up6ura93KJyWejGd3zfEHEhMTQ35+PlarFbvdDiBq9KjValJTUykvL+fo
      0aNiFDgzM5OamhqKi4txOp3cv3+fvLw88ZqCIOBwOLh69SqVlZXEx8fj9Xrxer1otVoiIiLE
      vYvFYsFutzM8PExXV9e6PAOJr8+GO6wPBoP09/ej1+uJiYlBp9Nx5swZcT8il8spKirigw8+
      oLS0lLi4OBobG9FoNBQVFZGSkgKwrAIrFApx5swZhoaGGB8fp7y8nBs3btDZ2UllZSUymQy1
      Wo1CoaCmpoaamhoOHz5MSUnJej0Gia+JlArxOWw2G8ePH2fPnj243W7u3bsHLKpCbN++neTk
      5HWxS9oDrB4bbgZ4GkwmE2+99RYqlYpQKERBQQGwuE+RujluTCQH+BxyuVw80pXL5c/MSx8X
      EcdLSS+ttxkbkoeWQMFgkFAotF72SHwJNpsNs9m83mZsSB6aAQKBAF6vdz1skfgKgsGgJFWz
      Skib4OeAT9v76LSvtxUbk8fuAYLBIO3t7fh8PkpKSpaF9qenp5menv5aIrAej4fu7m7Kysqe
      2Xyfpb69aWlpj21eHQ6HGR8fJzk5WRzPkojA4OAgcXFxZGRk0NPTw8LCAiUlJRiNRkZHRzGb
      zej1ekKhEL29vWRnZz+yIqxzwiEVxKwSjy2JHBkZ4b333hO18GNiYhgYGMDr9TIwMMDZs2dJ
      TExELpejUCgYHBzEbrcTERGBx+NhcHAQt9uN3+/nv//7v9m7d++q1gosFcPPzc2h1+uZnp5m
      bGwMjUaD3W5HqVRis9kIBoOMj48zMzODRqPB5XIxPDxMXV0d2dnZPHjwAFjMbxoaGsJms2Ew
      GHjw4AGTk5OEw2GOHj1KZmYmBoMBmUxGIBDg008/JTk5mfPnz4sOJZPJGBkZwe1288EHH5CX
      l0d0dDS3b9/m7NmzVFRUoNVqv3JMUknk6vHYNzEiIoJwOIxOp6OoqIgTJ06IaglbtmzB4XDw
      6aefEggEKCgo4O7du2i1WpKSksRi8L6+Pnbt2rUW42FsbIyTJ08SGRnJtm3bqK+vp6CggDt3
      7mC32zl06BD19fVkZWVx8+ZNsrOziY6OZmBggJycHFwuF11dXfT19WEwGCgqKqK5uZlgMEhp
      aSkNDQ2YzWYyMzNxu934fD7x3mq1mj/+4z8mEAjQ3t7O/Pw8OTk5FBYWcvz4cUpKSkQxAIfD
      QXd394pKwkg8OY9NhYiLi+Pv/u7vmJiY4L333mNiYoLa2lr+8R//kaioKJKSktixYwd2u53u
      7m5qa2vZsWMHTU1NdHZ28u1vf5vc3Fx6e3vXYjyYzWYSExNF6ZWkpCQOHDjA/Pz8spcVIDs7
      m6qqKhwOB4IgsHfvXpKSknjw4AFbtmzhhz/8IUqlkoWFBTweDwsLCxQUFDAxMUEoFMJsNpOc
      nLwsnykUCokpE7GxsWLquFwuJzU1Fa1WiyAIXLhwgampKcbGxhgYGFiTZyPxMI+dAbq7u3n/
      /feJiYkhOTkZuVzOxx9/zP/8z/9QXV297D+/oqKCuro6NBoNBw4cYGJigsOHDzM1NcU3v/lN
      urtXX95vbm6OqakpUlJSxDX5kSNHiIuLIyEhgUuXLjE0NERWVpb4b9RqNRqNhuPHjzM6Osru
      3bu5fv06d+7cITc3F4PBIIoGDw4OkpqaisvlEpc4hYWFoirEr371K8LhMKFQiJSUFOrr6+ns
      7BQ/A4uBtTfeeINQKMS77767zBaJteWxp0BLmZJL3VVgcfpWqVRotVp8Ph86nQ63201kZCRz
      c3PAoj5PKBRifn5e1NiZn5/HZDKtqv7okuZOOBwmKioKr9eLx+MRbZ+fn0ehUKDT6QiFQmg0
      GgKBALDYX0ypVKLX65mfn0er1aJWq5mfn0epVKJWqwkGg/h8PiIjI/H5fIyMjODxeIDF4FlC
      QgIajQaZTIbRaBSb5y2lULtcLrRaLUqlEkEQcLlc6PX6R9ZCSKoQq4d0DPoUCILAgwcPRKdX
      KBSkp6ej0+lW9D6SA6weUirEUyCTyUhOTl71JDmNUoEp4tlIy9hoSDPAc8Dk5OSqSUm+6Gy4
      ghgJiSdBWgI9B9SP1nOk6ch6m7EhkRzgayAIAp999hm3b99Gr9eze/durly5gtvtpra2lpyc
      HJqamsjOziYtLQ2/38+HH37IgQMHMJlMT31/p9/JgEOKFawGG84BlsS2lqq42tvb2bFjB21t
      bSwsLDAzM4PJZOKVV17h9u3bxMbG0tzcjMlkIisrC41Gg06nw2aziY1BYLED/J/8yZ9w+vRp
      GhsbiYuLIzc3l1u3bjE/P09DQ4Mo9XL9+nXa29vZvXv3+j0Iia/FhnOA0dFRBgYGyMzMxGq1
      0t7ezrZt27h37x7z8/O88sortLe309vbS3d3txgdXuolYLfb0Wq1bNq0SbymTCajsLAQv9+P
      SqUiKioKo9FITEwMDoeDyspKrNbFY8oHDx4wMjIiqUI8J2y4TbDJZKKyspKpqSmGh4cJh8Ms
      LCwQDAZRqVTo9Xq2bt3K7373O7Kzs9HpdFRXV/Paa6+xZcsW/H4/AwMDZGdni9dciih//PHH
      vPzyy8TGxjI/P4/T6cRoNC4LYlmtVnw+H/39/ZIqxHPAhpsBNBoNo6OjGI1GCgsL8Xq91NfX
      i4ptWq2WtLQ0kpOTKS4uJjU1lfr6egwGA7m5uaSmphIREbEsPTkUCnHz5k1GRkZwOBxUV1fT
      0dHByMgI27dvBxZzkCIiIti8eTNbtmzhzJkzolaQxLOLFAf4HDMzM5w9e5Z9+/YxNTVFZ2cn
      sBjh3b1797otayRViNVDcoDnAMkBVg/JAZ4DrnRf4c7CnfU2Y0PykAP4fD78fv962SPxJczN
      zREdHb3eZmxIHtoEy2SyZ7Zm90VlqdxUYuWRlkDPAR/d6uHioCRVsxo89hg0EAhQV1fHwsIC
      e/fu5f79+yQlJW3IKqZwOExLSwtFRUXLxHG/6rM9PT0UFBSIRf6CIHD//n1aW1vJzMykpKSE
      xsZG5ubm2Lt3L3FxcXR2dpKWlkZ0dDSBQIDbt28/tih+xO7m9F2pHmA1eKwqxMDAAB9++CFl
      ZWU4nU5u377N4OAgTqeTxMRExsbGuHPnDh6Ph3A4zJ07d+jv70cul6/LujUYDHLjxg3GxsaI
      jY2lr6+P9vZ29Ho9w8PDaDQaBgcH8fl8dHR0iH3OZmZmuHPnDs3NzWRlZdHW1ibGDZbGvPQC
      37t3D5lMxpEjR0hJScFsNouqEJ2dnezcuZNz586JAbisrCzu3r2LzWbj7NmzFBUVER0dzaVL
      l/j000/ZunWrpAqxTjw2EhwfH09kZCSdnZ1iZ3itVsvNmze5cuUKR44cQalU8v7779PY2MjH
      H39MMBjkl7/8pVhquJaMjIzQ1NQkpjpcuHCBuLg4zpw5Q11dHdPT0zQ2NnLv3j1u375NMBik
      oaGB48ePi8Gyjo4Opqen6ezspLe3l97eXrq6urh16xbnzp1jdHSUsbExjEbjMknh1yQAABUg
      SURBVMlCtVrNvn37UKvVJCYmIggCsbGx5OXlMTc3R2lpqThzjo+PY7PZViRZTuIP57EOoFQq
      efPNN4mKiuLEiRMIgkBmZiYJCQmiPs7mzZvF36JGo1GUDFmP0ySz2Uxubi5WqxWr1YrJZCI/
      P19skhEKhUS7EhMTyc7OxufzoVAoyMnJISoqivn5eVJTU3nppZfEcSgUCgKBABUVFUxPT2O1
      WtHpdERGRoo1zkv1yFevXmXHjh3ExsYSCARYWFhAo9FgNBrFWuD29nYxXaO/v3/Nn5PEIo91
      gMnJSd59911GRkbIy8tDo9GgVCpRKpWkpqaSnJzMb3/7W+RyOfn5+UxMTHDmzBmKi4sfu45e
      Dfx+v9ggw2w243K5ePfdd8nOzmbz5s189NFHWK1WcQwymYyIiAji4uJEBYvc3FwaGho4e/Ys
      wWAQj8eD1+slEAgwMDCAUqnEYDCgUCj47LPPxD5nXq+Xw4cP097eTn19PTqdjpaWFt5//302
      b96MTCZDqVSiUCg4dOgQf/3Xf83mzZvJyclZ8+cksciKngLduHGDhoYG/uZv/uax0oIbgXA4
      TGtrK8PDw8DiEmj79u3ExMSs6H2kovjVY0UdIBAIEAwG0Wq1qyp98qwgCAI+n0/c68hkMnQ6
      3Yqf2UsOsHqsaDaoSqV6ZppKrAVLfccedYKzEsQZNFRlreysIrGIFAh7DpBUIVaPDVcQIyHx
      JEgzwHPADcsNeoNrIy78orHhKsJWC7vdzv379zEajWRnZ9Pb24vH4yE/P5/o6GisVisREREY
      jUYxJSIjI2NF9gddti6pHmCV2HBLoHA4zPDwsCha++DBA4LBINPT0zx48IDBwUEmJiYQBIGZ
      mRmcTieDg4OMj4/jcDhwuVx4PB5R73Ppmi0tLYTDYS5fvkxjYyNtbW3YbDYaGhoYGBjg17/+
      NWNjY6Ji9HvvvbfsGhLPJhtuBhgdHeXYsWMYDAbKysq4du0ab7/9NqdPn2Z2dpbU1FRsNhs/
      +MEPOH36NJGRkTidTtxuN5s2bSIQCIiF7jU1NcBiOvLLL79MOBxmYmICp9NJfn4+BQUFnDhx
      gvLycrGI3uv1cu3aNWJjY9fzMUh8TTbcDGA2m4mLi2NmZkZsTLGEVqulurqa0tJSTp48icFg
      YHp6GrVaTVpaGtnZ2UxOTtLZ2flQ37OlWSAzM5PExETC4TCCICCXy0lOThaj3jdv3mRsbIzJ
      yUl6enrWdOwST86Gc4C5uTmxM4zX6yUYDHLhwgVRwx8WG3m0trZSUVFBXl4ebrebiYkJ9Hq9
      mMS21E8AFlUhPvjgA+rr68X+Z62trZw7d4709PRlQb+dO3fy93//92RnZ4ud5iWeXTbcKZAg
      CExPTxMOh4mJiWFhYQG/3y/KnBgMBpRKpagQFw6HsdlsYsOPjz76iPz8fDHZDxYDXtHR0WJ6
      h8lkwul0EgqFiImJEZvsqVQq8TNzc3PivZ4WqSh+9dhwewCZTEZ8fLz4/Ve1H42LixO/TkpK
      AsDtdrN161bS0tKw2WziyyuTyTCbzRiNRvHffLEJxheb3Uk1vM8HG84BnoaIiAgxMzMpKUl0
      jPVGKVcSoVz7zNoXgQ23BNqISKkQq8dDDuByuVhYWFgveyS+BLfbvS61FS8C0gzwHNDZN4JT
      pl9vMzYkj90DhMNhZmdnCYVCmEymR6Y7LywsIAjCsg2hx+PB7/cvO1Z8VhEEAafTiV6vf2xO
      vyAI4m/mz5dEejwenE4nWq0Wg8HA3NzcsjapCwsLYpvUcDiM0+kkMjLykW1SP+2d5v9d+2xF
      xyqxyGPjAFNTU/zrv/4rv/jFL7h27RqCIBAKhcRA0FKdbTgc5sGDB4yNjS372Y0bN/jd7363
      FmMB+Er7lr7+/J+hUGjZ3wWDQY4ePSq+tF/1uaW64uPHj+Pz+cSSyEAgwLFjx7h+/Tq/+MUv
      uHv3Lu+//z7Hjx/nxo0bjI6O8s477zA+Pg4sKm78/Oc/x+l0rtnzkVjOY2cAv9+Px+Phu9/9
      LmVlZZw/f15UU3jjjTdoaGjA6XRiMBhITU3F6XTS1NSE3W4nGAyyZcuWtRiHiNVq5be//S1q
      tZqDBw9SV1eHSqUiNTWVsbExDh48SH19PVlZWVy5cgWz2cyWLVsYHBzE6/UyPT2NxWKhvr6e
      5ORktm7dysWLFxEEgb1791JXV4dcLmfz5s10d3fT1dUljlGtVvOjH/0IQRD4/e9/z+joKFu3
      bqWgoIBTp04RHR0tzo5+v58rV668UAVEzyKPnQFSU1P5q7/6Ky5cuMDvf/97Ojo6+M53vkNZ
      WRkffvghDoeDv/zLv+TNN98EFqOmer2eYDDI+Pg44XB41QfxedRqNRERESgUCpxOJ7Gxsbz9
      9tuMj48viwYDFBYW8uqrr2K1WnE6nbz11lukpqYyNDTEvn37+M53voNGo0GlUuHxeJicnCQy
      MpJwOEx0dDRZWVkUFxcviwQv1Qnn5+djNpvFdIlwOExJSYnoAJcuXUIul+PxeJienl7TZyTx
      fzx2Brh//z43b94kMzMTh8OB2Wymo6MDq9VKeXk5FouFW7duMTg4SHx8PPPz8wwMDJCXl8fo
      6Chrvcf2er3Exsbi8/mYmppiZmaG1tZW9Ho9er0ei8XC+Pg4WVlZKBQKFAoFSqUSuVxOR0cH
      drudkpISBgcHGR0dFdUltFotfr8fvV6P0Wikt7cXQRCw2+0kJiYik8kIBoN89NFHzM/PU11d
      jdfr5bPPPsPpdJKUlLRsnV9ZWYnNZuPMmTMvhIDAs8pjT4ECgQB3794lEAhQWFiIQqGgq6sL
      rVZLcXExExMTjI2NkZaWhlwux+/3s7CwgNPpRKFQkJaWhsvlIj8/f00GFA6HaW9vJxgMUlBQ
      IGr4bNq0SczTj4iIIDExEa/Xi9lsxuFwIJfLGR4eJiIigszMTO7du0diYiJGoxGLxYLBYCA6
      Ohq3283MzAz5+fni4cDSGX0oFGJ4eBiv14tcLqegoIChoSG8Xi+lpaUYDAbxF4VerxdTp9PT
      078yYg1SUfxqIh2DPgXhcJi7d+8yMjICLLZnqq6uXnG1N8kBVg8pFeIpkMvlbNmyZc03+hIr
      hzQDPAf0j4wjj5CS61YDaQZ4DjBolCTESpHg1UBygOeAYDiI0y8Fy1YDyQGeAz4e/Jj/rJMK
      YlYDyQG+BoIgcPnyZSwWC36/nwMHDnDx4kXC4TDbtm2jtLSUEydOUFNTQ35+Pk6nk5///Of8
      2Z/92bLiHIlnjw3nALOzsxw5cgSVSsWOHTu4ceMGr7/+OpcvX8bhcBAIBFCr1Xz/+9/n/Pnz
      xMbG0t3djVarJT8/X5Q+dzgcVFVVidctLy9n586dnDx5kq6uLsrLy8nLy+PixYtERETgcrkI
      BoOEQiEuXryIz+db8yi4xJOz4YriFxYWmJ+fRy6Xi7k9oVAIu92Ow+Fg586dREVF0dzczNzc
      HG1tbbhcLsbGxggEAlgsFtra2khMTBSvKZPJiImJwel0otPpMJvNqFQqdDqdGORa6iLf29uL
      3W4nMjJSqqt4DthwDiCXyykvL0cul9PX10cwGMRms4ldYDQaDZWVlRw7doyCggKioqLYvXs3
      e/fupaCgAJlMxvj4OKmpqeI1BUGgp6eHy5cvs3fvXsxmMzMzM0xPTxMVFbUsxWEp8W52dpap
      qan1eAQST8CGWwIlJCTQ0tKC0Whkx44dJCYm0tnZSXl5uSh3YjKZOHDgAMXFxeTn53Pp0iVi
      YmKIiYkhKSkJs9m8rB4gFAphtVrx+/2cOnWKXbt2MTo6SktLC7t370Ymk5Gbm4vZbCYhIYGc
      nByio6MpKipaxych8XWQAmGfY2ZmhsbGRnbu3MnAwACdnZ0AKBQKdu/eLS5z1hpJFmX12HAz
      wNMQGxvLa6+9BkBMTAyVlZXrbJHEaiPNAM8Bbf1tTMon19uMDcmXqkK43e71skfiS5BUIVaP
      hxxAmhCePaampqSA2irx0B7gReju+LxxocvKu4e719uMDckjN8GTk5McPXqUH//4x7zzzjtU
      V1ejUqmw2WwcOnTooc8HAgF++ctf8tprr5GSkrJqRq8W4XCY8+fPs2PHjmU6oF9GMBikoaGB
      2tpasbA9FApx/fp1+vr6MBqN1NTUcPnyZVwuF/v27SM1NZWrV69SUVFBQkICDoeDCxcucOjQ
      oYe0RT+PyxdkxC4tS1eDRzqASqViYmKCtrY2urq6kMvl6HQ6MjIyaGhooLe3l+zsbFJSUqiv
      rycpKYnu7m7y8/O5du0ab7zxxpqrHni9Xk6ePIlSqWT//v3cvXuXoaEhtm/fztjYGEVFRdy7
      d4+4uDju3r1LMBhkx44dzM3N0d7ezoMHD0QVh8LCQnJzc7l48SJ+v5+DBw9y8+ZNZmdnKS0t
      5fz580RGRlJRUYFMJkMQBMxmM1VVVfzmN7+hpaWFpKQkMjIyaGlpEWMHRUVFCILApUuXuHfv
      HgcOHFjTZyTxfzwyEmwwGEhISODjjz+muLgYh8PB2NgYRqORDz74gD179lBfX8+NGzfo7e1l
      //79yGQyjhw5Qlpa2rpIfoyPjzMwMEAwGGRwcJCuri6+/e1vU1dXR1tbG06nk/v37zMxMcH8
      /DylpaXcvn2bixcv8q1vfQuj0cjdu3dJSUkhGAxitVrFAvvm5maamprEAvjs7GxKSkrEZaNS
      qaSoqAi32018fDwajQa9Xk9ycjLz8/Ps3r2bjIwMAHp6epDL5VInmXXmkQ6gUqlISUmhv7+f
      V155BUEQcLlcpKeno1AoUKlUyGQywuGwqG4mk8lITk4WVRPWmqioKKqrq5menqa3txeVSoVC
      oUAmk6FUKvF6vaIQldFoJDIyElh8eRUKhShholKpMBgMDA8Po1QqRaXoffv24fP5uHPnzkP3
      FgSBvr4+rl69yoEDB4iLi2NhYYGpqSkiIyOXKcjNzs5is9no7++nv79/jZ6OxBdR/PSnP/3p
      V/3l0kszOzvLwYMHxRe9traWQCAg6t9s3rwZn89HSUkJIyMjHDx4kImJCXJzc9dc8kMQBJqa
      mtBoNFRVVeHxeGhubqaqqor09HRu3ryJVqslJycHhUJBUlISoVCIxMRErl+/jlqtZtu2bdy5
      cweFQkF6ejqDg4OoVCri4+OZmZnB7XZTUVEBgM/nE2VRvF4vdXV1zMzMMDQ0RG5uLl1dXVgs
      Fnbt2oXJZGJqaorU1FQKCwspKysjEAhQWVn5SFWI5r4HXB92rdUjfKGQAmFPwZL0Y19fH7DY
      g2z//v0rvqyRVCFWDykV4imQy+XU1tZSW1u73qZI/IFIM8BzwOXW+zRPhtbbjA2J5ADPAVKH
      mNVjwxXESEg8CdIe4DngzuQdrvRcWW8zNiSSA3xNRkdHuXr1KomJiVRXV/Ppp5/icDjYtWsX
      KSkpWCwWTCYT8fHxCILAtWvXqKioEOMMT8OEa4K64boVGIXEF9lwDhAMBmlsbEShUFBcXMzA
      wABFRUX09/fj9XqZnZ0lKiqKiooKLBYLUVFRdHd3YzQaSUpKEptdOxwOMjMzgcXjztHRUQ4e
      PMjZs2dxOp2oVCrKyspobGwkNzeXU6dO8f3vf5+4uDiam5s5d+4cmzZtWhEHkFg9NpwDjIyM
      0NzcTEJCAlqtlitXrpCVlUVTUxMOh4OtW7fy2WefER8fz/Xr18VItt1up7y8HJfLRURExLIe
      wXK5nJqaGoLBIAaDAY1Gg9lsJjk5mcbGRgoKCigrKwPAbrfT1dW1buWTEk/GhtsEx8TEkJeX
      h9VqxW63A4vtiMLhMGq1mrS0NMrLyzl69CiJiYmEQiEyMzOpqamhuLhYzBXKy8sTrykIAg6H
      g6tXr1JZWUl8fDxerxev14tWqyUiIkLsKm+xWLDb7QwPD9PV1bUuz0Di67PhHCAYDDIwMIBe
      rycmJgadTseZM2eQyWRoNBqxv5fdbucb3/gGZWVlfPbZZ3R0dKDVaklJScFoNC6rwAqFQpw+
      fZobN27Q0NCARqOhvb2d48ePk5+fj0wmQ61Wo1AoqKmp4Sc/+QmlpaWUlJSs45OQ+DpIcYDP
      YbPZOH78OHv27MHj8XDv3j1gcQm0fft2kpOT18UuSRVi9dhwe4CnwWQy8dZbb6FSqQiFQsva
      Oj0qWU3i+UVygM8hl8vF7FW5XP7MtDCNi4ijOql6vc3YkDy0BAoGg5Ko6zOGzWbDbDavtxkb
      kodmgEAggNfrXQ9bJL6CQCCwJkK7TqdzTeIWHo8HlUolnpytFqFQCJ/P90hJmYcs0Ol06HS6
      VTVM4snw+/0r3nlyPe8jk8nQ6XSrXiwVCARwOp2PHNOGOwaVkHgSpGPQ54BAILAmG/K1uk8w
      GEQuly+TlV8NwuEw4XD4kUstyQEkXmikY9DnhJGREa5du4bRaOTVV19FLpczPT3NxYsXUSqV
      vPbaa08cq5ifn+f06dMYDAb2799PZGQkwWCQo0ePEg6H2bNnz7JGIU+D3++ntbWV6urF49xw
      OExjYyPDw8OUlZVRXFy8IqqEgiDQ1tZGbm4uRqMRQRDo7Oykra2N2NhYDhw4sKz3g7QHeA5Y
      Sq+uqqpiamqK6elpAJqamti0aRPhcFgszH+Sa9bV1YkS8AMDA8CirpJMJuMHP/jBiqn7+f1+
      Tp8+zdmzZ8WfTU5O0tfXx6FDh7hy5QqBQOCp7xMOh7l8+TLHjx9fdmp2+/ZtDh48yB/90R89
      tOySHOA5IBwO4/P5MJvNJCYmYrUuKkQ4HA7MZjMZGRmMj48/0TUFQcDpdJKUlERycrKYOLjU
      Y+3w4cMrplekVCrZuXPnsr5rCwsLREREiL+lg8HgU99HJpNRXV0tio8toVarOXfuHB9++OFD
      jiY5wHPAUlTa6/XidrvFs3qtVovX62V+fp6oqKgnvq5Go8HtduPxeNDr9QiCQEpKCn/6p3/K
      1q1b6e3tXTH79Xr9siWOWq0Wu2rKZLIV2RDLZDIMBsND13rllVd488038Xg8oqMvIe0BngNk
      Mhnp6ekcO3aMQCDA7t27aWlpITc3l48++gi/389f/MVfPPE1i4uLOXLkCEqlkm9961tcv36d
      pKQkzp8/j06nY+/evSs6Bq1WC0BzczPp6ek4nU4OHz5MSkrKiuZaLWX9Dg8P4/P5aGlpwe12
      YzKZHoqoS6dAEi800hJI4oVGcgCJFxrJASReaCQHkHihkRxA4oVGcgCJFxrJASReaCQHkHih
      kRxA4oXm/wNG9cPnzHBQgAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Avg Tour Time by Purpose' width='192'>
      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
      TO4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Tours' width='192'>
      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
      cs/v9TGlstyT5q43QCQSUeLaFwmn04nFYrnn94FAgNHRUYqLixfQquXNXQKYm5sjGo0ulj0r
      Gq/Xu+hvoZXGip4DLDXs45P8pkWpHbqQ3HcOIEkSQ0NDtLS0sGbNGjZu3Cgv9c3OznLjxg32
      7NnzwJN0dHSgUqlYt24dHo+H8+fPE4lESEpKoqamZtGCuyRJoq+vT053vB/RaJT+/n6Kiork
      Va5AIMCFCxeIRCK8+OKLtLa2MjIywpYtW8jPz6e7u5uMjAwSExMJBoNyx8l7LZeKsRj/UT/4
      xK9T4d7ctz+AKIq89957ZGVlMTs7S0ZGBg0NDYyMjADw/vvv3z6IWo1Wq+XChQuMj4+Tnp5O
      d3c3zc3NaLVabt68yczMDCUlJUxPT3P+/Hlef/11PvnkExITExkcHCQuLo7r169jMpm4ePEi
      Xq8Xq9X6UEuqoijS2NhIT08PVquVzs5Orl+/jtVqpb29ncTERLnP782bN3E6naSmpnLhwgWu
      XLki2+t0OklKSqKhoYHe3l5SU1NpaWmhu7ubUCjEkSNH2Lhxo7w8Ojk5iUajQaVS0dbWRl9f
      H9XV1TQ0NBAKhTh69CilpaWYzWY+/fRTOjs7lf4AS4z7vgHUajVVVVUcO3aMffv20dDQwOjo
      KBkZGcRiMdRqNQaDgSNHjrBq1SqSk5MZHBxkYGAAm83Gnj17ePfdd8nPz5+Xcjg9Pc3x48cJ
      h8P4fD5qa2tJSEjg888/x+Fw8NVXX6HT6SguLn6opUin08nly5fJyMigo6OD5uZm9u7dy5Ej
      R5iamiIrK4umpia8Xi9lZWW0tLQwMTGByWQiMTGR0dFRebuRkRH6+/vxeDxEo1GamprIzs4m
      IyODjIyMeeXR73z+xRdfkJubi8/nIy8vjytXrlBSUkJvby8AXV1dGAyGp9okROHxuO/PqyiK
      dHZ2UlpaytmzZ9Hr9bhcLmw2G8FgEKPRSH5+vuwQs9lseDwesrOz0Wq1DAwMEB8ff9c/Pi4u
      joKCAvR6vSyipqYm+TuDwUA4HCYUCj3cRahUcgiGx+MhEonQ3d1NamoqcXFxNDQ0MDc3h1ar
      JTMzE6PRSHJyMjabTe4k4/V6GRsbw+l0Eo1GCQaDhEIhdDqdHP7h8/nm2dTf388vf/lLVCoV
      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
      jcrKSm7evMmOHTvk11xrayuiKNLd3c13vvOdZ+r1J0kSnZ2dpKSkzFve/DoikQg9PT2UlJTI
      y50+n4+zZ88SDoc5ePAgLS0tjIyMsG3bNlavXk17ezs5OTkkJSURCARobm6mpqbmngkxYizG
      R82jT/w6VwKHt2Q/WQEAuN1uWltb8Xq9dHR0oNVqaW9vJzs7m/b2dtatW0dvby+RSITa2lrW
      rl2L3++nurp6QQvFiqIoL2fu2rWLzs5OhoeH2bt3Lx0dHWzYsIGBgQHC4TB2ux2LxUJVVRW1
      tbV0d3dz4MAB2traSEhIkDvCB4NBdu7cSUtLC36/n5ycHH73u9/xl3/5l3LtHrfbzbp163C5
      XJw6dYqZmRn2799PXV0d09PT1NbW8sd//MckJCRw9OhRHA4HO3bsWJRm4gpfzz0XbAVBYO3a
      tXR3dzM8PExRUREtLS1kZ2fT2dnJ9PQ0H374obx9LBbjX//1X7FarQvuEJqZmZHLlHd2dtLS
      0kJVVRUff/wxdXV1zM3N8dVXX9HY2IjVaqWzs5MTJ05gsVjIzMxkeHiYqakpwuEwNpuN8fFx
      BgcHuXLlCvX19TidTvR6PYWFhfPG6JmZmRQVFeF0OikqKsJoNJKRkUE0GqWiooJ169YB0NbW
      RnJysrJcugS575OakpKC1+slJyeHDRs20N7eTn5+Ph0dHV9bwi81NZXR0YV/hcfFxVFRUYHH
      46Gvrw+9Xi83p74TuXknST4lJQWDwUA0GsVoNGIwGGSnWWpqKlNTU0iShMViQaPRUF1dzezs
      LD09PajV6nm/3n6/n3PnzpGfn09RURGhUIjZ2Vk0Go3sc5AkidnZWSYnJxkYGGBm5sF9qxQW
      jvsmxatUKoLBIGVlZfI/ePv27fj9frxeL2lpaeTm5pKQkIBareZ73/sew8PDrF69Wq6KsBAI
      gkBn5+04+m3bthEKhbh+/Tr79+/HaDTS09OD1WrFYrGQnZ1NNBpl69atNDQ0MDc3R3V1NXa7
      Ha/XS1FRESMjIxiNRtLT0+UHdseOHQwPD5OdnS37C/r7+2lqasLtdmMwGAiFQrS1tVFRUcGq
      Vatwu91kZmZSVlZGWVkZgiCwfv36BUmKX2l8b2sOWcmPHo6urAI9As9SUvxK4+M/3c62x6iC
      saI9wY+KkhS//FDeAEuIiclJbkw/vQJiy5mqghQspkdfZFAEsIS4U3hLYeFQhkBLjFA0tNgm
      rCgUASwhgmKQvR/uXWwzVhSKAL4GSZKora1lcHAQv9/Pvn37+OKLLwiHw/zkJz9henqa+vp6
      /vzP/xxRFPnv//5vcnJy2LnzyRS1Ulg4loUAPB4PH374IbFYjOrqapqbm3n99dc5d+4cHR0d
      FBYWYjabqaiooKmpSS54W1RURG9vL/v376e5uZmDBw/KXuxdu3axd+9ePvjgA9rb2/n+979P
      V1cXNpsNr9eLSqVCkiTZU56V9fi1aRQWj2WRxCoIguyIEkWRQCCAJEkEg0F0Oh2HDh1ibm6O
      L7/8ErPZTG9vLyqViunpaUwmE19++SUFBQXywy8IAnq9nr6+PoqLi9FqtXJGmSAIbN68Ga1W
      i9/v58SJE6SlpWG3259qCXiFp8OyEIAoimi1WiwWixzT09jYiCRJqFQqNBoN+fn5DAwMUFZW
      RmpqKgUFBSQlJbF582ZaW1vJzc2VjxeLxfjiiy+4fPmyHN/T0NBAb2/vvAwyvV7PG2+8gdVq
      xWQyKUFuzyDLYhlUkiRGRkbw+/3k5uYyMzNDMBgkISGBUChEdnY2wWAQp9NJdnY2Y2NjuN1u
      8vLy6Ovro7Ozk5dffpnp6WkkSUKSJKLRKLFYDEEQyM/PZ3h4GJ1OR35+PpIk4XA45EoSbreb
      WCz2jbO5nvWk+GeRZSGAx0WSJLq6usjMzCQajTIwMCBXhVizZs2CpycqAlh4lsUk+HERBGFe
      15o7ze8WCwGB1LjURbVhpXHXG0CZyC0eDodDbqansDDcJQC3200kElkse1Y0Pp8Pk+nR0/qe
      NkvRLr/fT1xc3DdeeLhrCHSnGprCwhOLxZbcG+DOosBSs2tmZoakpKRvnHq7LJZBFRQelxW9
      CrTUEEVxQYsJPAySJBGLxZacXaIoolKpvvEQSBGAwopmRS+DLkXuBNf5fD6qq6ux2Wxs376d
      69evY7VaWb9+/VM7dyQS4dSpUzidTgoKCkhOTqa5uRmtVsvatWuxWCzEYjH6+vr41re+taBV
      LjweD8eOHePw4cN89tlnckVvm81GTU0NDQ0NFBQUsHbt2kc6riKAJcadXmT79u3j6tWreL1e
      Tp06RXx8/DyfxdNAkiQ2bNiAyWTi448/JiEhgddee42PPvoIu93OyMgITqeT1157bUEfflEU
      uXz5Mt3d3bhcLmKxGAcOHODcuXO43W6cTieZmZnzqns/LMokeInh9/vR6XQkJycTDoeZmppi
      cnISs9n81MfhOp2O3NxcbDYbmzdvJhQKERcXR2JiIsFgkO7ubtRq9TduBvio9Pf343A4WLVq
      FS6XC4PBgMViIRQKMTY2xszMDGaz+bHqUSkCWGIkJyfjdrsZGRnBZDKRmZnJm2++SWdnJ/39
      /U/13KIocvbsWVwuF5s2bcJkMjE5OYnD4cBkMnHw4EFycnI4c+bMgjpM9Xo9KSkpTE9PEwgE
      cLlcjI6OYjKZyM/P56233qKxsfGxalIpk+Alxp0OlW63mx07djA2NsbatWvx+XwMDAxQWVn5
      1M7t9Xqpr68nEAiQlJREcXExjY2NZGZmyhGvKSkpNDc3U1ZW9rXF0Z4W0WiU9vZ2ysrKaGho
      kMtM2u12ysrKcDqdTE5OsnHjxkc6riIAhRWNMgRSWNEoAlBY0SgCUFjRKAJQWNEoAlBY0SgC
      UFjRKAJQWNEoAlBY0fz/1R2JwBqo6usAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Avg Tours by Person Type' width='192'>
      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
      f3l3ebkk+ksEAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Tours by Purpose and Person Type' width='192'>
      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
      9XVmZ2f57xwIi03HsvrDAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Avg Tours by Purpose' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tour Mode Share' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tours by TAZ Destination' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tours by TAZ Origin' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tours by Person Type &amp; Purpose' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Tours by Person Type &amp; Purpose' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='% tours by purpose' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='% tours by purpose and person type' width='192'>
      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
      DP4/EFNZ6L1PWH8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Aggregate Dashboard' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='% Tours' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAf90lEQVR4nO2daWwc17mmn+pm72STvbC5NFdxlU1JlmQtDq14U5AojhPbEyPXGCMwJsG1
      kziIg8EFcv8MAgwwAwT3R35kAQzEF54YQYAEiZfYju1YjrXYsmQtJimKO1vi0mQ3e9/3+aHp
      GtGUuIniVucBBJFV1VWnm/1Wne+85/uOVCgUCggECkW10Q0QCDYSIQCBohECECiako1ugGBj
      iMfjG92ETYEQgELJZrPMzs7S1ta20U3ZUIQAFMrg4CDnz5/H7/cTCoXQarVIkoTX66W8vByb
      zcbo6Cjd3d3U1tZudHPvGLeMAbxeL8FgkLm5uRWftLe397YaJbjzWK1WYrEY4+PjzM3NMT09
      zfj4OJIkEQqFiMfjjIyMkMvlNrqpdxTpVj7AX//6V2ZnZ+nu7mbXrl389re/paOjg3w+j9ls
      RqVSYbVaCQaDuFwubDYbFouF3bt388tf/pLW1lZqa2tpbGwkFApRW1vLm2++SWNj44LXWq1W
      /H4/R44c4aOPPuKee+7h0qVL3H///Zw+fZru7m6qq6vX+7PZ1sRiMUwm00Y3Y8NR//znP//5
      zXa0t7dz6dIlYrEYd999N6Ojo+zcuZOhoSFGRkZwu91kMhlGRkbYvXs36XSaWCxGU1MTAwMD
      lJaW4vf7ee2113jggQfI5/O4XC76+vrweDzzXtvT00NzczN/+MMfeOCBB/jggw/Q6XRcvHiR
      ZDJJIpFQfF91rclkMvzmhIszYz7OjPmgAHVW47pc+zeXfsO5mXOcmzkHgLPUuS7XvRm3jAHc
      bjfHjh3D5XIBcPDgQSYnJ7HZbLS1tSFJEi6Xi71791JbW0soFKKsrAyApqYmYrEY9913HxMT
      E9hsNoLBIP39/Rw7dgxg3mtTqRRer5cf/ehHnDx5kmPHjnH+/HmOHTvGZ599xr59++78J6FA
      fvmPYfnnnzwCB5oqGBkZoaysjGw2i0ajIZFIYDKZuHz5MpWVldTW1jI3N4der8flcrF7924M
      BgMffPABmUyG0tJSvF4vTzzxBO+//z6PPfbYguv+9vPfzvt9X+U+RkZGsFqtJBIJotEoDoeD
      cDiMTqfDYDBgtVoZHBzk6tWrRCIRHA4HarUajUaDw+GgsbFxVZ/BLbtAa4HP58NgMGA0Gslm
      swQCASorKxcc53a7qampuVPNENyEWCzG3f/zn/LvP3mkje/cXcrLL7/Mzp076e/vx2azYTKZ
      CAQCVFRUEA6Hqampoaenh87OToaGhvjZz36GTqfj+PHjhMNhTCYTqVQKu91Of38/3//+9xdc
      e9cru+Sff7DnBzzueJyXX36ZHTt24HK5uPvuu3G73SSTSbRaLdXV1Tz55JPMzMwwPj6Oz+ej
      rKyMeDzO0NAQ3d3d3Hvvvav6HO6oAASbl5sJ4CePtDIwMEBFRQUqlQqfz4fdbqekpISZmRnK
      ysrQarX4/X6MRiMajYaZmRkkSUKn01FWVoYkSRgMBux2Oz6fD5vNtuDaXxTA87ufZ2BgALPZ
      TCqVoqamhmg0SiQSIZPJEI/H0el0ZLNZTCYTuVyO+vp6EokEBoOBQqGw6nhGCECh+P1+9Hr9
      RjdjwxECECgaMRdIoGiEAASK5pbDoMlkknw+v55tEdwmRuP6jONvJ24pAL1ez43hgSRJC44p
      7r/ZvpVys3MtJzy58fjjfRP0zCRuesxPHtneRpqY3bk6Fp0Ml8vl+MUvfsHRo0eJx+NYrVZ5
      wpTRaGRiYoIHH3zwpmP7NyOZTPLZZ59ht9uJRqOUl5cTiUTQ6/VcuXKFxsZGysrKCAQClJWV
      MTo6ygMPPIDJZOLDDz8kEolgNpuJx+McOXKEU6dOzTNazoz5eOnjqQXXVUtsewEshcvloqSk
      hLq6OgCi0SilpaUb3KqNZ8nZoDU1NWi1Wt544w327t1LRUUFLpeLSCTCPffcs6KL5XI5zp49
      y+7du5mbmyMWi9HY2EgymSSVSjE9PY3VauXUqVO0t7cTDofl14VCIWw2G4VCAYfDgc/nA64/
      JdbiCbTduXDhAul0GqPRiF6v5+rVq9TX15NKpchkMjz44IPY7faNbua6s+mHQUdHR8nlcvL0
      i8X4X29cuuUTYPR/P3qnmrgpiMfji8YAv//973n44Yd59913MZvNpNNppqenOXjwIIODg3z1
      q1+loaFhHVu8Odj0AlgJg5Nz+FMLRSJJcHjHQkdyO7GUAIpcuXKFnTt3ks/n+fzzz6mqqsJo
      NFJRUbEOrdx8bMqEmHw+T6FQoFAooFar53VzFnsKTKd66Qv3Ldh+uOYwsL0FsBSxWIzBwUFU
      KhUzMzNUV1fjdDpJp9MUCgWCwSC5XA69Xo9Op5OnGZSU/P+vSD6f5/Lly3R1dZHP54nFYpjN
      5g18V7fPugogmUxy7tw5nE6nnHRRV1eH1+tFo9Fgs9lwOp1MTU0xODgoB96FQoFcLkdTUxNN
      TU23PP/52fO8MvzKgu1alZYD1Qfu4Dvb/AwPD8uzai9dukR1dTW9vb10dnbyxhtvoFarUalU
      pFIpnnjiCa5cuYIkSXg8HlKpFJIksWvXLrxeL4FAgIGBAdRqNYcOHdrgd3Z7rKsRls/nOX/+
      vJyOZ7fbuXjxIhcuXCASiTA6OookSUSjUflxbrPZ0Ov1pFIpMdR3GxiNRqLRKPl8Xn6KGgwG
      RkdH5Tu61WrFZDKhVqtJJBLyv1wuR3t7O3a7Hb/fj9vtlie+bXU2TQwwNzdHJpPB7/fjcDiW
      PbR6I//x8X/c9Anwwj0v8Nye59aimZuW5cQAQ0NDJJNJurq6UKmWvvfl83l6e3vZtWvXso7f
      itxSAMlkcsvlg17zXyOYDy7YXm2spspUtQEtWj+SySRWq/WW+wuFAj09PRQKBdra2kQ65P9j
      SSc4m81eP7CkRH7kZbPZecHRWlB8NN/4WL3xcZ1OpykpKSGfz6NSqVCpVOTzedRqtXz8xIiJ
      i9MLH8v/9VCV4qcJ9PT00NXVhVqt5sKFC+zbt4933nkHm83GlStXsFqt5HI5IpEIjz32GIOD
      g5jNZjwej5wH4HQ6+c///E9efPFFTp8+TWlpKadPn+aFF17Y6Le3ahb9FodCIX71q18RCAR4
      +umnyefzxONxQqEQ3/rWt1Z8sWQyyaeffkplZSWRSGSeEzw0NER9fT1msxmv14vZbMblcvHg
      gw9iMpk4ffo0oVAIs9lMLBaju7ubTz75hG984xvy+T+76r+pD/Bwp2Pd8l03M8WbxY03jWQy
      idPp5MyZM1RVXX9KFgoF3G43k5OTxONxPB4PdXV1NDU10draSk9PD3a7HZVKJZtpOp1uQ97T
      7bLkbTyXy2Gz2bh48aIcNO3fv39VFyuOPXd1deHz+YhGozQ2Nsr9f6/XSzqd5ty5c7S2ts5z
      goPBoDwiVF1dTSgUQpIk4QQvk127dnHx4kUkSWLHjh0Acn42wNGjR+cd//jjj5PP5zl79ixP
      Pvmk3GX65je/Oe+4jo6OO9zyO8umCYJvxVo4wX967j4ONN+6f7wdWE4Q7HK55CofgutsegGs
      hPEZP5HswtGKlspSTLpN6fmtGUsJYHR0FI/HQzQapbKyknvuuYf333+f+vp6rFYrAwMD2O12
      DAYDvb29NDU1odfr0Wg05HI5GhoaGBkZYWBggPb2dtRqNRUVFQwMDLB3715mZmbQarU0NDSs
      eXx4J9mULc1ms+RyOQqFAlqtdl43Z7HhuNHoBS4FL83b9i8d/4JJp0yb/0ai0Sjnzp3jwoUL
      /PSnPwWux3ilpaV89tlnaDQafD4fDz30EHa7nePHj2O1WmloaGBwcJDDhw/Lkxb7+vowmUwM
      Dw9TV1fH22+/TTqdxmKx0NzcvMHvdGWs6xMgkUhw5swZ6uvrCQaDJBIJ6urqcLvd6HQ6Kisr
      qa+vZ3p6moGBAZLJJOXl5fJoVHNz86JO8M18gFe+9gr7qrZ/XaGlngChUIjR0VEKhQI1NTXz
      ajldvnyZqqoq9Ho9ZWVlhMNhwuEwer0erVaL1+uloaGBVCqFRqMhHo8zOztLVVWVfGOanZ3F
      4XAsOhS7GVnXJ0ChUODy5cvyTMT777+fvr4+fD4fHR0duFwuGhoaCIfDGI1GEokElZWVRKNR
      AoEAicTCZBfB8igvL6erq4tMJiMHtOXl5cD1APmLxxb33XicVqsFrg+Rf/GLbrFY7ljb7yTr
      KgCj0bhgzLhY8nBubo5cLsfly5dxOBzs3LlzPZu27fF4PMzOzqLX61GpVLS0tHDt2jUkSaK0
      tBSLxcLo6CgtLS243W7Gx8c5ePAgPp8Pk8k0L3lmdHQUu91OT08PDodDHgmanp7G4XDIMcD0
      9DS1tbUMDAzQ0dExbxAjm80yOjpKLBajpqZmwwqjbSsneCo4RbQQnbetoawBo2b7ewBLOcEX
      L15k7969837+85//jCRJXLt2DYvFgkajoba2lra2NgYHB4lGo+j1eoaHh2lqamJubo6SkhJ0
      Oh2PPPIIPT09uFwu7HY7gUCAZDIplzIcGxujsrKSZ599lpdeegmz2UwymUStVtPY2MiBAwc4
      f/48V69epa2tjaGhIZ555pl1n3KxaAxQKBTkD0Gj0Sx6omw2iyRJ80yWlZDL5ZAkad4HkMvl
      5N9jsRharZZcLkdJSQklJSVy/coi71x0cW4ydtPzP9jh4MvtK59ftFVYKgZwu91Eo1EMBoNc
      bLj4BBgbG+PkyZM8/fTT8ufpdrsxmUxyFlk6nUalUsmmmNVqZWRkBIPBQC6XI5/PMzc3R11d
      nezWp1IpWltbgevzkN5++22eeOIJTCaT/ATy+Xw4nU50Ot28btd6sagAstksL7/8slyc1GQy
      IUkS5eXleDwe9Ho9uVyOsrIypqen6ejoWNQYSSQSnD59WjayLBYLkUgEnU7HyMgIdXV1VFRU
      MDU1RXl5OZOTkzz00EOYTCY+/vhj/H4/5eXlhMNhuru7OXPmzDwn+FY+AMB//0o7P97GecHL
      8QGi0SjJZFKRqY+3YtEYQJIkLBYLbW1t8vTlkpISpqamyOfzhMNhmpqauHr1KrFYjLvuumvR
      ixUKBYaGhlCr1QSDQUZHR+X1A/L5PIFAgGw2S39/P62trcRi1+/m+XxerjNZKBRwOp1Eo9EF
      yTKCWxOLxRgaGkKlUpHNZqmursbr9aLVaufdeQuFApFIhHg8jsFgkPcFAgFgYbAbCASwWCyE
      w2HKyspIJBLE43G5W/TF45PJJNPT0/K5Njp4XlQAarWap556CmDFCfA3w2g08sMf/nDJ4+6/
      /37556IT/Pjjjy/4oi82JCqYz80SYt544w1qamrQ6/W43W4sFgtf//rX+fTTT7l69SqlpaWU
      l5eTz+eZnp6mvb2dubk5uSz5o48+yokTJ6iqqqKvr4+uri65gvOLL74o75ucnESr1cq5yMWJ
      jHV1dZw4cYLHHntsw6ZbL1kW5dVXX6W6upqWlhb5C1i8Y1dXV5PJZIjFYpSXl5NOp9mxY8ea
      3pFbWlqWfewzhxv5Lwd33HSfvXRrTtZaK4oJMUajUf77HDp0iGvXrsnH1NbWcuXKFbLZLPv3
      7ycWixGJRKipqUGlUhGPx6mvr2diYkL2CioqKuTJi4lEgnw+z44dO+bt8/v9dHZ24nQ6yeVy
      uN1uzGYzarWavXv3bmiuwZIxwCuvvIJarcbn81FeXk42m5WVPDExwa5duxgeHsZms5FOp3nu
      ueduWwDpdFp2g41GoxxUAYsG2e8Ovcv5wPn5bxCJfz/077fVnq3AnUiIuRXBYJBAILAs1zce
      jzMxMbFpJ80tOQo0PT2N2WyW7x65XE7+EhZfmslkMBgMsh1+KwEkEglOnjxJU1MTfr+fVCqF
      0+lkcnISg8GAw+GgqamJmZkZBgYG5BEIuC6KlpaWFTvBaknNpe9eusUrtg9LCUAkxNycJYNg
      p/P6+k3F5Y9uh0KhwNjYGJIk4Xa76e7uZmBggGAwSHt7OxMTEzQ3NxMMBmUnuLq6mmg0SjAY
      JJlM3nYblMrNEmJeeuklOjs7MZlMJBIJVCoV9913H6dOneLy5cvU1dVhsVhQqVRMTk7icDjI
      5XKUl5fL1flee+019u/fz3vvvceRI0eYnJykr6+PH//4x7z++uvs37+fK1euUFdXh8FgwOl0
      0tvby8WLF6mqqsLj8fC9731vwz6XdXeCn3/++Xnbin18n88nl90QTvCd4YsJMcVljopZYV/6
      0pcYGBhgbGyMlpYWfD4fsVgMm82G1+slk8lgtVo5ceKEvIaXSqXirbfeoqSkhN7eXnl4/MZ9
      Go2GyclJeYZpLpejsrIStVqNzWab16tYb7aVEzwTmiEhzZ8vJCHRXL61ZiiuhqWc4GIyUjEh
      5nbq+QSDQcbGxpa1eGE8Hqenp4dDhw5tyuHqJWeDFlMWiysGGgyGefsTiQR6vf6231wmk5Fr
      09y4rTivJBgMYjAYyGazaLVaNBoN6XR6Xiqekte+FQkxq2PJLtCf/vQnurq6CIfDTE1N0dnZ
      SSgUkvuNkUiExx9/fFkXSyQSfPTRR9TW1hIMBuc5wWNjYzidTqxWKy6Xi4qKCtxuNw8//DAm
      k4krV67g8XiwWCwEg0Huu+8+zp49O88JFtya0dFRLBYLTqeTS5cuyQkxBoMBm82G2Wzm888/
      52tf+xpvvvkmNTU1VFRUkMvlsNvthMNhHA4Hw8PDRCIRDAYDVVVVJBIJfD6fnGYZj8dXNHS9
      0SwpgNbWVvr7+3E4HFRVVeHz+YhEIkxOTlJaWrriagvXrl3DYDAQCoWYmJigoaGBYDAoF8Qq
      FAq4XC5aWlrkoDeXy+H1erHb7RQKBerr60kmk2g0GuEEL5NoNCp/MW/0c2w2m7zG78GDB+WY
      wGAw8PHHH1NXV8cf//hHurq6+Pa3v83HH38s/x1CoRDJZJKLFy8yNTUll1/fSgLY9CmRK8kJ
      Fl2gxRNixsbGUKlU8oLXxSobg4ODGI1GtFotDoeDSCSCWq0mFouh1+tJJpOygLxeLyqVCp1O
      h8/no7S0lEwmI3dXS0tL12TEcL3Y9AJYCUIAiz+N0+n0vIQYwSZdJC+ZTBIOh/H7/WSzWXkR
      h0wms9FN27J4PB4GBweZnp5mdHQUuN4dnZiYAK4PMtzsXhgIBJiauj7DtlAo8Mknn9Db20s0
      ej3vIp/PMzk5KR8/MzOzpdaWW1cfIB6P889//pPm5mb8fj/pdBqn04nL5cJkMlFTU0NzczOh
      UIiBgQEymQxarRZJkkgmk7S1tYkJcKtkampqXkIMwMTEBJIkcfz4cSYnJzl8+DB9fX2Ulpai
      0+kYHx+ns7MTn8+H1WrlqaeeIp1OMzQ0xMmTJ9m9ezeTk5NMTU1RWVlJoVBgYmKCF154Ycus
      N7CuApAkienpaXQ6HbOzs7LxEolEsNvtTE1NsWPHDvx+P0ajkbm5OZqamojFYuTzedLp9Ho2
      d1tRXV3N8PAwBoNBTm8segFHjhxhYmKCyspKWltbmZmZwW6309DQIM8Gdbvd5PN5NBqNPLFN
      kiQaGhpobm6mpKQEi8WCx+PZUoV0N00M4PP5KBQKcnWB1VSHFjGASIhZKdvKCd7KNSpvl1Qq
      teVKkmwGFq0ODdeDoGIidLEsxp0gnU6jVqvnzQlJp9NyjmqxSnE6nZaX8Ukmk/Oc6Xcvz3Bi
      LLzktTprzDz/wNYZq14OwgtZHUvGAK+//jqVlZV4PB46OjooFAr4fD6amprYvXv3ii4Wj8c5
      fvw4dXV1BAIBrFYrkUgEjUbDtWvXqKmpwW63Mzw8LPcnH3nkEUwmEy6XC7fbjc1mw+/3c/Dg
      Qc6fPz/PCR6YifDapekl2/HleHrbCUCwOpaMVlpbW5mbm8NutzMzMyM7uMHgwoUolqK45lQx
      57S/vx9JkuSpuMlkEp/PJ888LA575vN5PB4PDocDlUpFY2MjuVwOnU63rNXkBYJbsaogeGJi
      gvr6+jvRngWsRXXoL/Lldjv/579t7cXdvshyl0kVzGfTjAKtBd5AmELJ0nGKVq2iwnjn4pmN
      QAhgdWzK6tDxeJxUKkU6ncZqtZLNZuXgeLFA/LT7OKe9pxdsb6to41/3/Osda69g67LuTvA/
      /vEPOdsok8lQW1vL6OgoZWVlOJ1OWlpaiMViDAwMkM1mUalUshPc3t6+qBM8Ehzh766/L9ge
      qA4IAQhuyrpadiqVCr/fj9frxe1209bWxsTEBLlcTp7/L0kSc3Nzcjm++vp6LBYLRqNRzAUS
      rDnr+gTQ6/U8++yz87Y1NDQA4Pf75fLpq3WCBYKVsq2c4FAsRKFk4dspUZVQqim9ySu2D8IJ
      Xh1LOsFer5eysjL592LtSLPZTCgUWrOKvsUMrxud4FQqJQe9xYK56XQag8GAwWAgFovNq1v/
      Vq+bD0dCy77mLmc5P3yodU3av9EIJ3h1LNkFeuedd2QzzGw2Y7PZuHr1KolEAq1Wu6L1guPx
      OO+99568NKrNZiMajVJSUsLk5CTV1dVUVlbS39+PzWbD5/Nx9OhRTCYTs7OzcoHeubk5Dhw4
      wIULF+Y5wSOeKO/0zSy7Pans1pm3LrgzLMsJnpiYkJNUitXiivUgV3QxlYpwOEw8HiefzzMy
      MiLX/C/+7/f7icfj8yo/F6fjVlVVoVKp5JJ8BoNBOMGC22LTG2F3wgku8nCng5efPXC7TdwU
      CCNsdWx6AawEfyiCWqtf9vEalYRxm6wfLASwOjblXz8ajZJIJEilUjgcjnlO8GLz/T+cfI+P
      Zj9a1jV2Wnfyg3t+sCbtFWxd1lUAsViMd999l7a2NrxeL9lsltraWoaGhigvL6e+vp62tjZS
      qRRDQ0PkcjlGRkbk2vSdnZ2LOsHjoXE+nPhwWW1J50R6pWCdnWC1Wk08HicQCOD3+7nrrruY
      nZ3FYDBQXV2Nx+ORp0wbDAZSqRRNTU3YbDZ5bQKBYC1Zdyf4mWeembetrq4OuO4E19bWCidY
      sK5sKyc4moii0izvoaaW1OjU2yd/WDjBq2NRJzgej5NIJJAkCY1GI5e8K67YuJYkEgk0Go1c
      Dbq4rehAj4+PY7PZSCaTmEwmTCaT7EgXeePzad4fWnmm2malyWbkfzy2vErOwgleHYt2gRKJ
      BL/+9a8xGAw0NjZSUVFBMpnE5XJx9OjRJZdF/SKxWIx33nmH5uZmudhtJBKhpKQEt9stF+D9
      /PPPsdvtBINBvvKVr8hf9t7eXhwOBx6Ph3379tHT08Ojjz4qn398LsbxAc/qPolNyC7n6mv4
      C5bHov0Fq9VKU1MTTqeT+vp6eYG8xsZGuTTeSlCr1WQyGdLpNCUlJXJFOLVajU6nQ5Ik/H4/
      kiRhMpnkXIB8Ps/U1BQ1NTVIkkRLSwsajQaj0SicYMFtseQaYd/97nfX7GJ6vZ6nn356Ra8p
      OsHHjh1b8Jivrq5es7YJlMm2coLDkShavWHpA7cIKgm0JctbO0s4watjUzrB4XCYWCxGMpmk
      trZ23lJJxaD4Zvzd9TbHZ46vVzM3nJaKFv7twL9tdDO2NOvuBL/11lt0dHTg8XjI5XLU1tbS
      39+PxWKhsbGRjo4OcrkcLpeLfD6Py+VCrVYTjUa56667FnWCr0WucXp6YVL8diWejW90E7Y8
      6+4EFxNqYrEYu3fvxufzUVlZKecISJLEzMwMBoOBZDJJS0sLlZWV2O32LedLCDY/6+4Ef+c7
      35m3rba2Frheg7S6ulo4wYJ1ZVs5wYlkAq1ubQpe5fP5Natzf6fOJUkSaul6kJzJZNYsPVVJ
      LJkTvNVYq/UB1nKtgc16LsE2GwZdyyVTlXAuwSYdBl0t2WyWv/3tb8RiMSRJ4tixYyuaIJZO
      pzlx4oS8EPT4+DiHDh1i3759K25LPp/nL3/5izzdY2ZmhoMHD7Jnz54VnyudTvPqq6/KyxIN
      Dw+zb98+Dh8+LMRwm2ydxZyWiSRJHDhwAIPBwEcfLS87rEg+nycWi2E2mzEYDHR3d3P27FkC
      gcCK2xGNRslms6TTaSwWC/v37+fUqVPE4ysfuiwUClRWVuLz+VCr1Rw9epS+vj6mp5deC0Gw
      ONuqCwTXV5VXqVTyHKGVBJ+FQoF8Pr/gripJ0qrutIVCYcFcpdWeK5fLya+TJEnuCoknwO2x
      7QQgEKyEbRUDrCXpdJrf/e53HDhwgP3799Pf38/MzAxVVVVytbxiHaOamho8Hg979uzhk08+
      obOzk2g0SllZGdlsFo1GQyAQIBwOk8vlaGpqIhqNsn//fnEH32CEAG6BRqPhy1/+MqdOnaK+
      vp7p6Wl8Ph979uyRl2bq7+8nm81y6dIlotEo9957r7xyTvH4qqoqebX7ohiK5xQjOhuP6AIt
      Qj5/vXRisc9d/PnG/bfqj38xlnC5XPPmMRUKBTnfQbBxCAEIFM22GwYVCFaCEIBA0QgBCBSN
      EIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSN
      EIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSN
      EIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSN
      EIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSN
      EIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSN
      EIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSN
      EIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSN
      EIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSNEIBA0fxfOUHpwD4F/KYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Tour Leave Origin Time' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 34' width='192'>
      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
      3+e5OvWQ/wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Trip Time of Day - Depart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAASHElEQVR4nO3db2wbZZ4H8O94/Ld27Pxx0jqJQ9rQNm2vUBpxvQbCclUr/mhbtOor6LFo
      782xOvHi7lZCLPfipL03h7Qsywqkk5BAi7i9W217IEDh2BZCS4tC2pKWBJo/ddomTZw4jh3b
      sceeP8+9YOt0aiczbZNMJvP7SEiZhyfjn9x8/cw883iGY4wxEGJRNqMLIMRIFABiaRQAsqhk
      MomZmRnceqRcKBRU24IggDGGXC63kuXdNbvRBZDV7fTp06ipqYHdbockSXC5XMjn8xgZGUEo
      FIKiKHjwwQdx7tw51NTUYGBgAM3NzWhrawPHcUaXr4lGALIoj8eDyspKfPPNN7h+/ToGBweR
      TqcRCAQwNjYGxhjGx8dht9vR0NCAdDoNr9drij9+AOBoFogsZmRkBJIkobGxEaOjoxgdHcWm
      TZvgcDjA8zzcbjecTidEUYTf78fk5CT8fj+8Xq/RpetCASCWdteHQIIgUH+D+jPGkM/ndfeX
      JAmiKOruXygUIMuy7v6r6b3R2/+uAyBJUkkbYwxTU1Nl3+xy/QEgnU5DURRd/WVZxsTEhO7+
      oihicnKyZCZjsfqTyaTu/rlc7rbqyeVyiMfjJe0L9Y/FYohGo2XrLNc/mUwilUqV7X9rjYwx
      xOPxsrM3siyXvAeCICCfz5f99y1XSyqVAmOsbD3l+s/OziKbzSIWi5W89q39b+w3k8kgmUxq
      7l9RlGI9N/ovy0lwIpFAZ2cnvvrqK139M5kMXnvtNczNzenqPzc3h66uLgwPD+vqPzs7i6NH
      j+r+BJmZmcGrr75a9g+6nDNnzuDixYu6+gLARx99hFOnTunuLwgCjh8/rrv/sWPH8Mknn+jq
      K0kSPvzwQ3z88ceafRVFwTvvvIOenh50dnbizJkzi/afmJjAm2++iW+//Rbvvvuu5v4jkQje
      eustxGIxHD16VHO06u/vx3vvvYexsTF88MEHmvvv6enB+++/j7Nnz+LYsWMAlikAiqKA5/kF
      P+1v5fV6sWvXLt37lyQJ4+PjaGxs1NWfMYZQKLTgp+6thoaGUFFRoXtO2+/3Y3x8XHd/juPK
      fqIvJBKJ4JFHHtHd3263l8zTL4TneQSDQV39OY5De3s7ZFmG3W7XPDxav349WlpasHXrVgSD
      Qc39Nzc3o6GhAbFYDIFAAA6HY9H+27ZtQ3V1NVwul64Pq/vuuw8+nw9TU1PIZrM/jDDsLqXT
      6ZI2RVHYlStXWD6f19WfMcbi8TiTJElX/3Q6zS5dusQymYyu/oIgsEgkwhRF0V3P1NSU7v6p
      VIpdu3bttvpfv3697OuW67/QeyPLctn3IBqNsunp6ZL2QqHABEFQtSmKwsbGxsq+bjabZaIo
      qtrm5ubY3Nxc2X/fcvuYnp5msiyzWCxW8v/K9Y/FYiwajbKhoSEmy/Ki/RVFYbFYjMXjcRaN
      RjX3L8sym56eZoqisKmpKcYYY3c9C5TJZODz+ai/Af0VRUEul9M95SiKIhRFgcvl0tU/l8vB
      4XDAbtd3vXQ1vTd6+9/1lWDGGDKZTEm7KIplh7CFDhOo/+33Z3+ZBbr1M0xRFCiKUvKHK0kS
      GGMlx9ayLIPjONhs6iPiQqGAQqEAnudL9sPzfMnFrtX03ujtf9cB4DiubMoWSx/1X5r+iqLA
      ZrOVjAA3pjs9Ho+qfaERIJ/Pg+M4OJ1OVftCI8Dc3Bw8Hk9JYG6n9tXSXzMAiUQC09PTcLvd
      UBQF+XwewWAQPp+v5A0jxGw0A3Dy5ElUVVUhn89DFEXEYjG43W4cPHiQAkBMT3MatKKiAoIg
      FKeN9u3bh2w2i1OnTiGbzd721TlCVhPNEaCjowOiKILjOHAcB57nceTIETDGdM+/ErJaaQbA
      4XBoXpAgxKzo+wDE0igAxNIoAMTSKADE0igAxNIoAMTSKADE0igAxNIoAMTSKADE0jSXQvT1
      9QH4YW14IBDA4OAgNmzYgJ07d+r+ZhEhq5XmCGCz2RCPx8EYQzQaRSAQwMWLF3H16lXk83nd
      X74mZDXSHAFsNhtcLhd4nofP50NtbS14nkcmkwHP8yVflyPETDQD0NraWtIWDoeLP1MAiJnR
      STCxNAoAsTQKALE0CgCxNAoAsTQKALE0CgCxNAoAsTQKALE0CgCxNM2lEIVCAfl8vniHYEVR
      4HQ6wfN82bsDE2ImmgHo6upCZWVl8UFq4+PjCIfDePLJJykAxPQ0/4K3bt1afBSn3+/HoUOH
      MDExgTNnztDNcYnpaY4AXq8XDQ0NxUOgiooKHD58GJIkYd26dXRzXGJqmgEIBoO6nvBHiBnR
      QTyxNAoAsTQKALE0CgCxNAoAsTQKALE0CgCxNAoAsTQKALE0CgCxNM2lEIqiYHBwsPiQ7Hg8
      jrq6OtTX19PNcYnpaY4AAwMDuHDhAqLRKFKpFCYnJ3H69GkkEomVqI+QZaUZgBuf8l6vF6lU
      Cjt37oTH48GlS5doOTQxPc1DoE2bNmHTpk2qto0bNxZ/puXQxMzoJJhYGgWAWBoFgFgaBYBY
      GgWAWBoFgFgaBYBYGgWAWBoFgFia5pVgYk4yk5EupFVtdmaHjT7zVCgAa9RwYhjPHn9W1fb6
      j15He6jdoIpWJ80ACIKAzs5OBAIB5HI5JBIJhEIhPPzww7Qcmpie5nj45ZdfYmZmBrIsw+Vy
      YceOHYhEIvjuu+9oNSgxPc0RYP/+/bh8+TJyuRwYYwgGg+jo6ADHcXRz3GWQLcj4uzdOq9r+
      4ZFN6NhYYVBFa5uuc4CWlhbVdigUWpZiCKAwht7RpKptOpMHQAFYDnQSbBKxbAztR9UnsL9q
      /xX21+83qKK1gQJgIgxs0W1y+2hSmFgaBYBYGgWAWBoFgFgaBYBYGs0CmVwiW8DrX1xTtR26
      bwPAGVSQyZQEIJPJIBKJoLm5GX6/34iayG2YzYn4z5MRVdtf1VcgXGtQQSZTEoDu7m7Isoz6
      +noj6iFkRZUEgDH1xZVEIoG5uTnwPA9RFCHLMqqrq+HxeOB0OlesUEKWg+okuFAoIJfLAQDS
      6R++TJHJZNDd3Y2enh5kMhmcOHECn376aUlQCDEjVQAcDgdqa2shiiK8Xi8AQJIkBAIBtLS0
      YGJiAk888QRSqRS6urpoOTQxPdUhEMdxsNls8Pl8uHjxIvbt24dQKISamhrYbDY0NzfDbrfj
      mWeegaIotByamF7JOQDP84hGo9izZw84joPb7Ybb7TaiNkKWXcmFMI/Hg2w2C5/PB46jyWSy
      tqkCkEqlcPXqVTQ3NxdPhglZy1QBuPG1R4fDQY9AIpagOgeoq6vDgQMHwBiD3U6rJMjapxoB
      OI5DX18fPv/8c4yPjxtVEyErpuQk2G63w+PxIBKJ0BQnWfNUARAEAdFoFDzPY+fOnbDZaLU0
      WdtKDoEaGhpo+pNYhioA8Xgcw8PDsNvtFAJiCaqpHpfLhV27diEUCoHneaNqImTFqAKwbt06
      DA4OYmxsDNu2bUNVVRX6+/sxNDQEt9uNXC6HWCyGcDiMffv20c1xiempDoE8Hg+qq6sxOjqK
      bDYLAGhsbITH4wEAVFRU4KGHHsLo6CguXLhAq0GJ6ZVc7Uqn0xBFsRiAVCqFcDgMm80GjuNQ
      VVVVvFhGq0GJ2akCUCgUcPnyZQSDweIK0HA4bEhhhKwE1SGQ0+lEU1MTeJ5HoVAwqiZCVowq
      AOl0unhiW1NTY0hBhKykkgBcuXIFXq+XvvNLLEF1DuD3+/Hoo4+iurraqHoIWVGqEUCSJHR1
      deHs2bNIJpML/Q4ha4YqAJWVlWhra4Pdbi/eFYKQtaxkuefly5eRTqcxODhoRD2ErKiSAOzd
      uxe1tbVobW01oh5CVlTJneEEQUB/fz/GxsaMqomQFaMKAGMMn332GTKZDCoq6LGcZO1TTYMK
      ggBBEPDUU08VL4j19fUhmUzC4/HA7/cjEolgw4YNaG1tpdWgxPRUI0AgEMCRI0dQWVlZXAG6
      fft2OJ1OiKKIqakpOJ1OnD9/HtevX4coipAkyZDCCVkKmvc+6e7uhs1mg8PhgM1mQzgcBsdx
      iMfjtFCOmJ5mAPbu3VvS1tTUNL8Dun8QMTG67QOxNAoAsTQ6flkBO//t/yCIcnH7hX2b8fd7
      QgZWRG6gAKwAUVIgyvPLy2WFlpqvFnQIRCyNAkAsjQJALI0CQCyNAkAsjQJALE1zGlSWZTDG
      wHFc8U4RN+4SR3eQJmanGYCBgQEMDw8DAERRxMTEBJqamvD444/D6XQue4GELDXGGEbTowB0
      BKC2thYcx2FiYgKKouD+++/HiRMn0NPTgwceeACCIMDn8y170WsNYwyvnn1V1dbR2IGwY7NB
      FVmHzGQ8+b9PAtARgEQiAVEU0dTUBJvNhkAggIMHD0KWZbo57l1gYHi7/21VW5W7CuEQBWAl
      aQZgy5YtK1EHIYagWSBiabQYjphKKidCuem+tS773T3KiwJATOXx105ifHb+qUTP/s09eHF/
      8x3vjw6BiKXRCEBWpT9f/TPShXRx+x7/Pdjq3brkr0MBIIb6lz9ewPDU/B96e0sQ/9jRiN99
      8zuMzI4U2w+1HMJLu15a8tenAJBFfTeewn+fu65qe769EY1/uW/Urf75j704PRwvbu8KV+LX
      P1n4k3toMo2L12eL2/WV5fe7XCgAZFGjiSz+q/uaqu2Z3esX7J/IiphMzZ+kzszlAQC/Pf9b
      DCWGiu3ba7bjp/f+dImrLTWZEnDzw458LvWfPAWArIjeqV6cnTxb3JYUCbh3+V+34z8+R0Ge
      X63wT/s347m/ritu0ywQsTTNEaBQKCAWiyGXywH44cHZdXV1qKuro9Wga0hezmM6M61q83Hm
      WeR4dPAoCvL8o3231WzDveu0hxjNAMTjcQwODoIxhpqaGoyMjOD777/HY489hmAweHdVk1Xj
      3OQ5vPDFC6q23+//PYBaYwq6Tb859xvMFuZPpn+242e4t1U7AJqHQMFgEC6XC9XV1YjFYti9
      ezdsNht6e3uRzWYhCILWLiwjL+UhSELxP1ERjS6JaNAcARwOB9rb21VtGzduLP5My6Hn7f/T
      fiTz80/XfG77c3h+2/MGVrR8IrMRfDXxVXG72l2NH9X9yMCK7gzNApE70j/dj1d6Xilub6ve
      ZsoA0CwQsTQaASxmIJrCv38yrGp7+bEVmJBfpSgAFpMWJHw9MqNuy0uARR/3RgG4A//6fh9m
      MvnidseWWhzcXm1gReROUQDuQNfAFMYSueJ2lddJATApOgkmlkYBIJZGASCWRgEglkYBIJam
      OQsUjUZx5coV5PN5CIKAZDKJUCiEPXv2wOWy6OQxWTM0R4BAIABJkiDLMnieR0tLCwYGBjA4
      OEirQYnpaY4ATqcToVAI6XQajDHU1dXB5XKB53m6OS4xPc0A3PjUv1lDQ8OyFUTISqKTYGJp
      tBQCwHgyB0GUi9telx1e+miwBAoAgJ+/dx4XRue/yfXYjvX49U9aDayIrBT6nCOWtiZHgM5v
      J3Alni1ubwi4cWBzwMCKyGq1JgPwp/NjOPH9VHG77Z4qHNh8n4EVkdWKDoGIpVEAiKVRAIil
      Lck5wInvJ/GHr9W30H7lqaV/mgchS013AKanpyFJEhRFgd/vh9vtht3+w69fm8ni+E0nnQCg
      HDL/84WHE8PIy/Nffg+4AqjkKg2siCw13QH44osvsGXLFpw8eRL19fU4ePDgcta1Kvzi5C9w
      OXm5uP3jTT/Gyw+8bGBFZKnpPgdoa2tDLBbD4cOHEYvFcOLECVoOTUxP9wgQCASwe/duOJ1O
      PP3001AU5abl0GnN3ydkNdIdgKqqqiV70c5vJ1TnDG6HDS8d2LjIbxCyPAy5Etw3nsLR82PF
      ba+LpwAQQ9B1AGJpplgL1DuaxLWbFrd5XTz2hL0GVkTWClME4A9fX8P/9IwWt++pWYePf/6g
      gRWRtYIOgYilUQCIpVEAiKWZ4hxgqbx48kX0TvUWt9vWt+GXD/zSwIqI0XQHoLu7G/l8Hul0
      GqFQCDt27DDdrRGnc9MYnxsvbjcLzcYVQ1YF3QHIZrOQJAkVFRXo7e1FRUUFNm/evOjvnJ88
      j6+jXxe3OXA40nLkzqu9xfGrxzGcnH/gW42nBk/UP7Fk+ydrn+4AuN1uMMYQDodhs9mQSqU0
      f+fc5Dm80ftGcVsrAG/0voFjQ8eK29Xuarz9t28v2P/Tq5+ic6SzuL21aisFgNyW/wdQShQQ
      m9SdoAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Trip TOD Groups - Depart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trip TOD Groups - Arrive' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trip Time of Day - Arrive' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Trip Time of Day' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Daysim: Trips' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Trip Departure Time of Day' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trip Mode Share' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Destination Tours Map' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Destination Tours Table' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tour Destinations' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9WYwcyZkm+PntER5XRh7MTJJJMnll8agqssi6pWpdravVPRrNoHt3WxBa
      u43FzEtvAwuoX2YH2H2ZmadFP8zLQtPAYtWzgtSLrm0VoKMoqVqrg1Wqk0fyKB6ZZB7MM+7w
      02wfPMzS3MMjMpLMLDLJ/IAqZkS4e5h72G/2n98vUUopdrCDJxTywx7ADnbwMLEjADt4osEF
      4K233sKPfvQjuK4bOYAQgqWlJVy5cgXNZrPtAgsLC1heXsb09HTiF3z44Yf4wQ9+gH/8x3/s
      aUA//vGP8YMf/ABvv/02ACAIAvz85z8HAPzkJz/p7a4eQzwqv8+9e/ewsrKCK1eubPwmHkGo
      7I9Lly7hc5/7HP7hH/4BQRBg9+7duHHjBg4dOoRf/OIXOHLkCBYWFnD16lWcOnUKd+/eRTqd
      xrlz5/DSSy9heHgY586dw8jICKampqCqKv7iL/4CzzzzDN5//31861vfwve//314nodCoYDj
      x4/j4sWLmJmZwcDAAIaHh/Hqq6/iS1/6Er773e/i9OnT+N73voeJiQn84he/wMLCAur1Oj78
      8EN88MEHeO2117B///6H+Og+WTwqv897772HZrOJd955B3/+53+O8+fPY2xsDNPT03j11Vdx
      5MiRh/2oNgQuAL7v49KlS6hWq7hy5QrS6TRM00SpVMLAwABkWcbi4iJeeeUVvPnmm5iensbY
      2BiGh4exa9cuXL9+HYZh4Pbt2yCEIJ/Pw/M8GIYBAKCUYnZ2FrIso9lswrZtLC8v4+mnn0Ym
      k8G5c+fw6quv8oHdvn0b7777Lggh6O/vx+zsLCzLwjvvvIOpqSmcPn36k39aDxGPyu8zPz+P
      1dVVjI6O4s0338Tk5CQkScLY2BiuXLmy7QRAYl6g27dvAwD27duH69evo6+vDysrK9i9ezdm
      Z2eRyWSgaRrS6TSq1SpKpRIsy4Isy5AkCZZlYWlpCf39/ajX69A0jf8wc3NzGBkZwfz8PAgh
      sCwLs7OzyOfzsCwLtm3D8zzs2bMHADA3N4fBwUF8/PHHyOVyKJfL6O/vByEE2WwWt2/fxvj4
      OFKp1EN7cJ80HpXfZ35+HqZpIggC1Ot1NJtNnD9/Hs888wxOnDgBRVEe7oPaIKQdN+gOnmSo
      6x+yg0cBpVIJkiSBUgpJkiKfqerW/IyUUgRBsCXX3swxU0rh+z5/LUkSZFmGLMsISABCCGSp
      9Tp2PzsCsE1g2zY0TeOvKaWQZRmUUmSzWcjy5nu0fd9HpVLh38cEEAAsywIhBM1ms00g2fEi
      4sLL1LUHQRAEcF0XjUYDQRDwa/skQH+xiMAP4JMAXhBAVySoqgrHcSLj2YkDbDOwH1n8N+4a
      3SyIqyX7PlmWYZomFEVBKpVCJpNJFL74OJlAUEpBKeWG9oOAT+KWncOuLQFwbAeUUhiajrRh
      AghdxvHzdwRgmyHJZGs0GhEVYLPgOE7k+zRN44axpmmQJAmGYfCdSTxWnPCSJEV2D/a60Wg8
      0PiCIICu623qjyIrfLy+78NxHOi6Dtu2+Xcz7AjANoK4msbVjlqtligc9wvHceD7fmRlTafT
      iat9r944WZZhWRaAtZ0gvipvBEylEQULAN+VPM+DruvQdR2EkIgKya/B/qjX6/c9kMcFhJAt
      0aUfBGzCiBDHyIQhCAJUKhUoigJFUWCaZqJu3ivE71BVlas9nY7N5XLcXgAQWfHZOMUxsc99
      34eu6/c1Rtd1efRb3GkIIXAcB6lUCvV6HYZhwHEcGIYB3/cj4+ICkPSgnzT8n7+6ihXn/ifN
      RvA/fX79gFF8UYqrFfF/fd9HEASglEJV1cQVr1domgbLsqCqak++fVVVkU6n+ZjFVZkQAkmS
      4DgON0LZZ/e7a3meh0q1AtfzoClq6LEiAQzd4LuLoiiR3dK2bZimGbE9Il6gWq2GqakpHDhw
      gFvojUYDpmmiXC7DdV0oisI/e1ArfjNRqVSQy+Ui79XrdR7ImZubg2EYSKfTUBQFlmWhVqtF
      zvnhu3fx0fyDGWa9ohcBSAIz+sTX4r+EEP7DPyhYlHgjx9u2HfHIAGjbicRJeT8qkOM4WF5d
      gSor8IMAiixDgoSAEDieC8MMjV62O4g5Um0uZPHFrVu3sLi4iCAIMDU1henpafT39+Pzn/88
      Lly4AFmWUS6Xsby8DEVRUCgU8Md//McbvoH7xZUrV7C8vAzbttFsNnHo0CFcu3aNP3jLsjA8
      PIyZmRksLS2hUCjgK1/5ClzXxfz8PBRFgeM4qNVq2LVrFzzPwwsvvPCJjX+zIf6YbMKn02l4
      nvdAqsWDjMc0TdTr9URBZTtBN1smDkopHMdBEAQIgoDvcpoSTl1dDY1xUECWZHi+B7n1HWw3
      BABFUbgKJCKi8FqWBcMwcPfuXQBAoVBAPp+HLMsYHR3lJ6fTaaTTaYyPjz/I89owcrkcarUa
      gPCGlpaWsHv3bvi+j2w2C0mSUC6Xoes6MpkMV+tqtRo8z4MkSSgWi9i3bx8KhcK2C9sDyWqD
      +Np13dD9t8HVe7PAvENJE5u5KwFwYUhS05ht0Gw2US6XecqF53n8PAZVUSBLMiBJ0FQV+WwO
      nuetfa6qsCyLe4FElzGlNLoDjI+Pd5zUxWIRR48e3eDj2FyMjo5idHS05+ODIMDly5dRKBTw
      6U9/uu3zT1qANxvMaBdXVN/3YRjGQxVuNkmZLg6AB+3EeIKmaYnjtG0bjUYjMfKdtAAQQmB7
      DtJGCoEfQNN15PN51Go1mKbJPWTis2LXeqwjwYqi4Pjx4z0f/43Te/CZT8gI3iiSVv34pALQ
      cfWNn+t5HoIg2PSEQsd1In7/uCCI4+2UDsHsgqR7Tro3SZKgqxo/13NdeKqKVCqFWq3WVe16
      rAVgo/hXz+15ZL1hSauhuNKKP3I8MpxkEDebTb5bbKbr17Ed/p1sXOz64jiYTp4E0TAW701U
      n0SXtSRJUBU18Rpxg1scy2O/A2wU/+md/4RpO7ly6pPERHEC33n+O23vx43eJCOYHcc+t22b
      TzRxFWRR0s02lkUPVCd7RVEU5HK5jjsVU4soonGEuMCLn3XKRxLvOUnQH0sBmJycBCEEpVIJ
      R48ehSRJWFpaWteGubJyBZerlz+hUW4c4oRKcoXGX7NEMV3XI8cz49P3fTQaDaiqumm7QDqd
      RqVSaduVKKXcEE2lUl3VNJaDJEECRTQjNWmydzK42XcB4GkQvu9HbIFtJQCTk5P46KOPUCgU
      MDk5iZMnT6JUKmFlZQUTExOwLAunT5/G3r178eabb2Lfvn1YXl5GrVbDT3/6U/z1X/81zJaP
      eDuim/cHCH/0dDrNdetGowFKKWzbbovZaJoGVVXDgFKlwr03wJodERecXqCqKrLZLKrVKh9f
      KpXiAsfSlDvB87w2T434t08CqLLStgMEhEBV1t63bRuqqnJj2jTNMBqdSoESgkq1Ak3VtpcA
      FAoFnDx5EtVqFa+88gr279+PRqOBmZkZOI6Dvr4+XLp0Caurqzh58iQWFhYwMTGBRqOBb37z
      m9t68gPJK10cjUYDhmFwIxfobGyySU4p5b57cZdpNBrI5XJQFKWn72bQNA2apsHzPJ496vt+
      T9mfzGglhLQmvI8LKxdwfbmExZoLgGJ3Qce+Qh9O9p2EKqv8XkT9nhDCk+U8z+Np2wZCFStj
      ZeD7/vYSgJGREYyMjLS9v2/fvsTjDx48CKD3ZK3tgiSjVkwsi7NDrDd5WbJYPDuTUsrze/r6
      +jYkBNlstmddnYEZt8yAXrKX8MaN9zEgT+DM4AT6xxQQKmGmbOPmvVVMld7Cq7ufwYA5ACUh
      2hyPSLP3m80mFEWBqqrbSwC2Gt95/jsI1K2pgNoIsnq242diICjJsIvnB/XiFgWiQtKWLqCq
      95VYJ56j6zosy0IQBB1jFGyHoJSi4lbw/177CK8Ov4wjQ1HPXF9aw/HhDH57O4dfz3yIz+w9
      hZyei7iG2XVYABQAT5JjtoDneWs1wTvZoOAZg48KGEUJAMzPz3NvjSgE6yWUMdUgl8t11b0b
      jQYajUaiQMmyjEKh8EDZpb2gUqnwaO+Pbv0Su5RTODuW73g8pRQ/v74MNTuJ10Y+BQBt4xef
      T9yDRAjZyQYV8d/8H7/bcDLc7f/w1S0aTXRRYpO/l/wZAJEfGUCEAiUJohEsgqlWrutu+eLA
      VKCl5hLuLKv48ulc1+MlScLx4Sx+NauBHCAwiclrGNjY2XFs5xHvUZblqAp08+ZNzM3NYWxs
      DKlUCuVyGZZlwfM8UEoxOTkJTdPw8ssvY3JyEmNjYwCA1dVVXnigaRpWVlYwPDyM5eVlGIaB
      a9eu4YUXXsC5c+dw6tQpvP/++zhx4gRs28bg4CAWFxdRLBZRr9ehKApu376N4eFhHD58OHLD
      9XodlUoFtm0jm81C13XMzc1haGgIFy5cwP79+5HP59FoNFCv17G8vIznn38eS0tLuHjxIjKZ
      DBRFgW3bOHjwIJaXl3Hs2LEH/+U+ARBCYBhGYvljt12ArYj1eh2+78M0Tbiu25YuzVyhSZ4l
      pkpspQCwZDdCKaaq09hrjUGR1xf0XVkdlrQbN1dv4lDqEDegxTJJ8T66ZoPW63U4joOrV69i
      eXkZd+7cgSzLOHjwIFzXRTqdhm3buHXrFkqlEur1OhYWFgAAd+/exZ07d3D48GH09fXho48+
      wsmTJyHLMlzXxdTUFEqlEt59912Uy2W8/fbbIITg9u3b2L9/P6anp/mEn5+fx7lz5/A3f/M3
      Ec/NzZs3cfv2baTTaVy4cAHPP/88SqUS3nzzTZw8eRIfffQRT91eXV3F3r17IUkhJ87AwABs
      2+auuGvXrsH3/W0jACzBS5yk8ZUurgMzsB+e6b+u67YFv1hsoFN9seu6XfX3BwWrE6CUwIeH
      jNZdIxEnsymbWKnNAam1ZyCqiHEwIQFiAnDgwAHIsoyRkREoioLFxUVks1lkMhmsrKzwk0dG
      RrhBceLECfT39/O01VQqheXlZXz5y1/G0tISDCMsUNi1axd830c+n0e1WsXAwAD/3pWVFXzu
      c5+DJEk8cFMul9tWnIMHD6Kvrw+e5+H06dOo1Wp46qmncObMGVSrVezfv58LKfN9X7x4EZIk
      QVEUjI6OIpPJQJIk7qveLhCNWTG/Rsy7iU/+JN2XFbgkTWS2OyR9N/t9t6oGhNDQ+yNLMtJq
      Gst+A0B/x+PZs6g7NuygiUEl6umLOwM6fRYRgEwmE0key+fXDJC4jdAtyaxYLPLr9XLO4OAg
      /7u/P7zpXbt2tR3H0rAZ+vr6+N9DQ0OJ1+6WPRovoNlOSHIvxncGcaVjn3XS9YG1FASmQoiT
      Z6sN4JSZQrMR+ur3WHvwtn0ZDXcUaT0qqPEJPVMJAP0e9liH+Ofi+Ludu5MLFMN//csXt40z
      ID7ZgXDiMjuM7RAs30dRlJ5yfsQdJemzrYIoxH1GH/YN+Dg/VcJnDnfeBbyA4G7JQTZno6AX
      EBACJcHTxQUCFBKiauOOAAi4unoVQfX+4wBnh89u4miiiE/I+CRlKhBLhxDheV7Pvvx4Up1Y
      xfUgDA7rIR6Ee37oFN6cfh+/vvkMXtifhypHd6Jy08U7d6pQrCt4uvg0CKXwAx+SpAIUERWP
      p0e4DgxNDwtoEHOD7gD4j2//xwdKhrvwrQubOJooOrkoxc/FPH+eUUlpx8nPSgaT1J140h2l
      lDtCtmIncH0PtudCliRoioqcnsOn9xzH+fn38dNrh5DXs8inVBAKlJo+XFKDbN3Ayf7jyGk5
      PkZKAUW4H/EZpXQzsnMqirK9BGB2dhblchmapuHevXvo7++HqqpYWVnByMgIZFnG7t27MTk5
      iQ8++ACapuHo0aMwDAPnz5/HN7/5zYd9Cw+ETmkF8YnLjNUkNYkhCIII3yhjgWDXBqL582wH
      YFw7mwlKKVRZganp8IO1mt0BcwBfHPsULqxeQMW9jds2gaYosDIS+pU0ThZf4blAhFJoqgZJ
      iqZRr5c5uq0EoFKp4MMPPwSlFKurq3jppZdw584dzM7O4tixY9i9ezcAYHFxEYODg6hUKhga
      GsLdu3d5VuR2TojrFASL18mKxeCdVus1t2NLF255h1RVheu6PIIsXoelEGy2ADASLgCc1Y1B
      lVWc6j/FX7N6gzYbhRJoraQ/0S0sposk7ZjbSgAmJiYwMTERee/UqfDh3LhxA9lsFpcuXcKZ
      M2cievCuXbvw3HPPfaJj3WrE830AtKktnSY/U2dEsIxRliId/y523mZWjxFCuMuaCVu3tI54
      TYPoDlYVtW1HZH/H3cEitpUAdAPL/OzkDu0FE8WJR4rrKI5udoD4WTdXJ1OROlVXMdtBnCxJ
      sYXNQL1e51kG6+U0dYIfBCCUwNDWUkUYOrmGmdBEdoCdZDjgr57+qwcK92/2M4yvxN0gBro6
      McJ5nhfhEBUnHqsdEHNpOgXcNgMiRUl8B0tCUiAQCA1eGdGdIS64oqCzf5l9s5MMJ+Af3ru7
      LjXiiwf68eLBzr7pzUQSNWIno45SGmFtjoMRgsVX/ST3qvh+koFtmuYDqUKsFJMhbsN0sl/E
      41zfE0ixkneoboLFPmujRnRdF7VaDZlMhkd0twM+KWrEv/ocPjEB6AVsMrPkwE7HsPLITmkB
      LNtT5NNMUn0opbz/2P3uls1ms2115nXAkoSAtCrZYkwP4i5gaDoXiLhtEL8/cdWPRMnjRvCt
      W7fw/e9/H3/6p3+KN954AyMjIxgcHMSlS5cwOjqKdDqNz372s/d105uBJ50aUVzRxL/T6XRX
      z4zt2Gg6NteTk9ynrOkdU7viLlD2XWzi1mo1EEI2XG3num4iT78f+HzCxyd+fAzsdS+xEfEY
      WZajwTxK26kRP/vZz+Lu3bsYGxtDLpfjLsS5ubkN3ehW4EmnRhTzXFKpFFKpFPL5fMdJSAhB
      uVxGs9GEqRttEzn+n+gZWi/YtdFgGHNDV6tVKIoCQsNCdvZZ2M+re6SZTeiNfjc7PlJNh4RU
      iG7UiMy3/jCxQ424RkC73spLKUW1WuUxgU6rZdxl2OnzJL18I43uPM8LaxKCIOTzjLk94/7/
      TvfUbaydPmMQ4xqqoiIIgt7doA978t8PtoIa8cXxh6f/i1HbbiCEoFKp8KLw9Sb6eq/FyR+Q
      ALIUMj1spP8A2201NeTylxDNVo0jLnBJAsjuTXTpJo1ffE/cDYDHKA6wGXiUqRGBaGFLt9XX
      dd3Idt+pGiruGlxvFaWUwtANGIaxYQNYaa36nYQyDi/wOQW6ONa4HZQkEJ3cqY91IGwzsFFq
      xE4UhlsB8YdbLxUh3gs37vdnEH37cd5M8Xhxsvm+31bn0SvENIZuqz8DoTRCdyKeK6Lb6s/s
      i06u0MdSAB5HasSN6N7xJhCdgkPd0gQopXD9kNiKtSBiu0q5XEYqlYJhGF1XcRG85jfm82dI
      p9PwgwCNRgNK6zvjiNObi/cTRzzolXSv2y4X6EmnRhRX604eLEJIJJobP7eTqhNfQf0ggBf4
      QACoshL5jBCCer0OQkjPqSNxtSxp4hJKwqKVLkKVpPqwMcX5Utnqz+D4LgxVjxyzrQTgSadG
      pJR2pClkbsZ4b99uq7yI+DXDvlvg7kpJkiDHjomrWt1gGEbXvsC1eg2u58HU7y+41snwpTR0
      eEpA2+TfdirQDjVicgBIzKoE0FHn7eYlSfoeSsN/bc8JPT+aHrm267ohv2YP7lBJknimaZIg
      SlhrctEJ8RU9fn3xvgglkfLH+HnsPraVAGw1NkqN2I3CcKuQpHc3Gg2+8ielQm80cMSQMgx4
      LRoZkZFZnMCVSqWnlBlJkpC20lhZXYUqKXyczBDuJcAV9/DEk/REAWdljwC4IZ2U37STDSpg
      f3r/ht17W/ncxGxQ9mPHPUCU0ghn0GZBVVVQL6QpUWKU5vHVez2XJoOmashnc/yZSZIUEdik
      3mLs2ozKhdlAce+O67kApFB1i/n8WQpE0hh3skEF3A81IrB19IiicHXS3zu5BuPHdIvystcM
      uq7zlqJ6K9iVZFSyCbyRHYYQAkIJVpsl3GrchBtEC3Pyeh5H80cjKc6Mm1SWZTiOg3KlAkWY
      1OxexFUfCNUgWVo7rqsAACHz2sWLF3Ho0CH+EC5evIggCHD27FkMDg7iBz/4AT796U9zt9bS
      0hJmZmagKApOnTqFXC4HTdPw+uuvo1gs8mtpmoZKpQJCCBYXF9Hf3w9CCEZGRlAulzvq8SKe
      ZGpEAIkGcCcmNxGe70NVFUhIzumPr7ZshWW06Wzys7QK0Zu00XwqQghuV29j0V7CHvMpTC0H
      8ILw+y1DQT7t4pczb2GibwK7rdHI5CeEYGlluVX7u5bT4/k+/MCHrmhRAcX66R9t1Ii///3v
      MTU1heHhYZRKJYyOjsJ1XZw/fx5f/epXQSnF9773PRw+fBjz8/NwXRf9/f3QdR0//vGPMTIy
      ghMnTqDZbOLatWvcXTY/P4+BgQHMzc3Bsiz09/djdXUVs7Oz2L9/f08C8CRTI+qt1p/xVVtM
      LQaS9X2j1QSDGYZxVyRb2dn7QRDA87y2gBerJFNVlbtiNyoA8+48HOLBrR7Gokvx3N4cdCX8
      3rpLcGGWYEA/iwX7YxAEOFQ8xL/Dtm2eRsHvlYbNstUOuURs5SeUwPW8NkOb06MDYdakbdtQ
      FAUrKyvI5XJcxzQMA/39/bh+/TqGhoZQr9d5Azbf9/mKUSgUkE6ncfXqVRSLRZ6CrGkadF3H
      wsICZ3RjYXHbtjnRbjc0Gg2srKxw2nBWt+B5HqrVKjRNa6NGXFlZ4Q8hn8+3USOK9QB//L+f
      e+RUIKaain8D4A0tWHE7Q5IA5HI5vvsm6fJxoWKvN7sepOE1cH7+PGjpIHbnJGQNlRe1rJFX
      AXdLNubLNhraR/iD/a+hmA3HUS6XYTt2aJcItC8A2qLKYsGMJEk83Tr+fNqoEZnUi7SDIo4c
      OQIAnLe+E+LF6wwi3eJGsUONuAbXdSOTv5MeznqB6brOg1Gi96TT5L9fz1E3vLfwHg5lTuNO
      o46+tBohqJKkMNHOC3zsLZhYrns4lDmFd+ffxecznw/HI0uwPReGqrXZInHVjq303D6Qk+Mn
      O25QAduFGpEFveIpDkk/MJsopmmGrlKsqTtJBjR7vRVBQy/wMDnXxEtjOTgtdUb8XiAMvFFK
      8fRoBv98YxVqZq2SzTRMKHINPgkgEwWSFOr5nYJ7ImQpOV9oRwAEPCg1YhxHi0eR0zd/l2EO
      CKB7dBcAZ+xWVRW5XOiCjJ8bTy8wDCN0g/bo3uwFDa+BtJZGBRJIQttTpgaZrWitLEmQISGt
      ptH0m7B0C5qqIm2Y8HwPru9BkWVe5Xa/tI07AiDgQakR4/gvX/wvW8IX6rpuV/09PnFZ7bOm
      aRF7oJPgKIqCarXKK+s2A07gwFAMSAi9Ugx+4HOvjqZq0UxRSYIu66jZNVi6BVmWeSyAlU12
      E9IwDYJCoi0VCbTNVbqtBOBJp0YUkVQILqY1iwLieR7uLN2BYRrIalmu4rDWoeJ12PtAe1bp
      g8DSLNS9OpqOjbotw1D10JdPKRqOjZRhct8+I/mllKIZNKFhzXOTTqexsrqSWDfM/P5AmMyn
      yDJ/LUlSxC3KcoS2lQA86dSIIpIS3OLZnh7x8OHKh1hpNFGu61AVHRnLw0BWw9nRs0ilUmuu
      xZZnTFEU3lw6CAJUKhXuWXNdF9lsdkOVYAy6osMJHKgSoCgGAuLztGdNAac1l1os0LYXQJYI
      bN+GQtdcnJqmIZ/LR1guCG2lU0DiQqAK7tnQBUxhuw5Srdpo5vrdVgKwQ40YQtf1tl7AQFQd
      coiDX83+BkH9MPpTOTy714Sha1ioerg1V8bP6r/B2T3HkEWYz8S8RQzcMxMEcF2Xq12NZhP5
      +xAAx3GgeioG+2xcngvw7O5QtYq3NWX2wNtTFRwaBpacAq8jYLsec727rotMJhMGWasVuI6b
      GPzygwC+78IyUvx72D1uKwHohkeRGnGrkuV6ST84f+9tBLVj+PTBQd5lhVKKfL+OI4O7cP5O
      Du/fu4BXdz0Hmcg8x0g0kFVV5WS5PJemB49LHNV6Da7t4JB1GP/fwq8wqDyHqVUbY31GJGOT
      3dM702XsLmi4Un4ffzD6ByA07Pou5g1lMhk+kX3fR62VNqKLdkQraCZLEgI/4PXMETcwC4Tt
      JMM92n2CxUAYC/zFwSbETGMGv7+zjJd3T2Aws8YFJBq92XwBP748jcGBeZzuPw1d17m9wLrD
      K4rS1mJJ13VksxsT7FK5FAZYZQVVr4orpSvIkmOYr7rYWzAwmNFBKDBXdXGv4uLQkI5bzXdx
      euA0sloWAQn7HfQV+hIT/ljqC6WUs07EnQO2F9ZRG6rOn4XtOjvJcCJ6oUZ8EGyUVnG9RalT
      avCd2h3klcN88jNEhIAEyOgW6l4zIvTixBELXkS9eaNQZIUbo5ZiYTw7jkur72LP4G7I/i5M
      lTzIEkXODEAHZ3HHKeO5/jO8UySlgOt6WFpZhq5qbURgsqDvs8kvtkuSJAkp3WzzkGmq1k6N
      ODU1hUOHDvGHQilFvV5vc4exVAdGl3Lnzh1uYLK8FYbl5WXuYWAqBusIvlkr7idFjfgg2Cxa
      xbjPOx7RJZQAtHt+fRAEyJoq7trRuIeoXokCxnTwjRrArERTHGvRKOJTw5/CXHMOM94kjJwB
      IslYqDs4lD+EE30nImOX5TAl2w18NB0bshrtd6a3+FDF8SqxlA9RgHm6dbwg5tatW5icnMSV
      K1dQq9V4Alm1WkU+n+f9p77whS/g/PnzePrpp/H6669jfHwc169fx/z8PFKpFI4fP877Uh07
      dgyTk5O4desWnn32WZRKJZ7R+fzzz+PEiRM9P8wnnRqRIalOIO4PF9/rlPrccAOktbWJwiZq
      Ur/gpOv0Akopv248aW80PYo9mT0oFouo1WpomqFhz7JXmb7OSjE1WQFVKLJWdDjnX5gAACAA
      SURBVDGWZRnZXA6l1VV+7cgYhOZ4okpHgXZqRMYBeuTIEfT396Ovr4+v5qZpIpvN4uOPP8aR
      I0eQzWZx6FDYnvLgwYM4cuQI9u8Pe/Wqqorp6WkehWS1vAcOHMDIyAiKxeKGXZJPOjUiEC2A
      AdoDYQAwaA6iGiyj6ZHoD87zYsKJVXdcmFq4BjLd33GcNopEcYfpJe2AoWnbWFldaVObxAi0
      67mYX7gX9WpRCtf1eLsksShmoK+YnNPD2ObQnl4hS3JY4N8GGs0G3UxQSnH37l3s3bt3Ky7f
      E4IgwJUrV1AoFHiMoBvuNxu0V/zV5w7jr79wpOfj49mgkMKU4HirTzGbEgACGuDcnX+Gaj+N
      zxwuJqZLXLzXxIp0E68dOIGMnEG9XkfDbiJtpiJlinFGZUVRkM1mu9oChBA0mk0sriwBANK6
      CUJJW/CKBe4YE4QiR5mpfRJAlRUeAc5msx3rj13X5T3PImNp7SDis6rZYQzBUPWtc4NKkvRQ
      Jz+wNdSID4IHoVWs1+vcKxNvASrqtgAgQ8azg8fx7r1JnLs2gZMjWQxlDQAUVdvHR7M1NOVZ
      PDVWQNEs8jz/JK9P3E9PCGlLq46DUoqmvbai256DlG62HQOskWXFP6PhH6AI25/qut61+F4c
      j+t7kCUJVa+GqfoUal4tFEA5LArq1wcxbA7DDbyt2wG2I+I59w8b4njm5+e5ASqqI9308hV7
      BR+tXsRKOQ2VDECRFNh0FflcCcd3HcaJ4TX7q1QqRYzrpCzTdDoN0zR7sgMopbi3uBAWIEky
      NFUN3ZlyNI9fvJ9UKgXbsRH4YZ1IQAkyaYu7gzsJHXsOS0vhjrPqlPDe4vuw1DT2pI9gtaai
      1HRhahryKQWyvow79ZvoTw3sCICIf//Lf78hasSN4jvPfwcTxeQ6iSQkCUCbgRebSKxKy3Ec
      vjss28uYb84joAEGzAGMpke5ncSu12w226LL8XQLllHaqyHsOA7K5XKbCia+1nWde55YhJtl
      u7KCqk6tWVlwrFqtIpVKoVQq4Vb1FpbsJeTpQdxYcjGUTWFfMYWMrgCQsNLwML1qw/UJDow+
      RpFgEY8qNWLVbQ9e9Yokn38ckiQhlU5DbU0atqL3m/3oN/v5MZSGvQBWV1d51ZdhGFwAxNVf
      5Av1fR+2bffMsySqaqwck1AKWZbCgFVL589ms5zR2g/CklVCKRZXlmHoepvXBwg9VkEQQFVV
      +L6P1dIqbtem4FIXivMUPFXCFycKkWIZSZIwmjcwmjfgBwTv3KluLwF4kqkR4z+k+D6DaZqc
      xcGyLFQqla6rNaUUtVoNuq4nrrARu4JlZzabUBSlp17BqqoibVlo1Os8EMY4ehj351J9Ce+t
      foiS7aNUrSJrSBi1BnAwdwiO60KGBEd12uIPrHSXRYAbQQMrzjIk+yh2FwyM5Az4wRpFpOgK
      BQBFkfDKeN/2EoAnnRqRQRQCcWcQjcR4cCx+LjuP9ejVdR2KovDobyfNuOk6CCoEGcvqaSfI
      WGEhS6VaBRU8Sj7x8cuZt/HxPYpnh5/B0aEimloDd5ZL+GB5Ce+bP8fZXYewX0uuFZckCbV6
      jccKPlz+EGPmaVR9guFsyGYh5v7H6wDY620lAE8yNWLShBQnM+vyzsDiHgDaagTirs2kopp4
      II2dm9INOK67oW7xhmFgoMVM4bouSpUSfnDtFxhUTuC/P7ULWSsNTdNQ1V2M5fuhKIO4NDeG
      305/AHVcxjPFZ9qu6fs+bNdF2jDRCBrIaBncWLTxyv5s27PqxAskSduMG3SrsVFqxI3iaLG7
      DdILkqK9QDtnULxghgkB87uLWZFMcJK8S8yoZnQylmXdV6EMm4CmaeLavbvYpT2Nzx7cxes0
      WHGO1qJcOTGSga6extsz72J8eBxFrZh4PQC4UbmBQX0fAkNCksYXvy9IEhRm2LODdrJB748a
      cUPwgLrX+3NOivjGPTNidFcEU/cYI7MoLJ7vgyprvbnYuczjIu4CYs4WMzhZYOp+QCnF9YUq
      /rvTz6BWLYMGlKcth9mcPneVHhlMY2rlKN6dfw9f2P/5yHXCzM4w9bnqViHZCvYW9DZVh2WH
      8u9HlJJxJxtUAKNG3Cqen40iqVF2HKIqw45hf5umCdu2I1mdsiyHEWUvLB5JGWvkVmwXiSeP
      EUI4ARdbxe+nKgwA7tbuYnduAKauQc0XUK1WI0KnCL0IKKXY32fhyqqLYCyINNJLpVIwTROr
      q6uglKLc9HCw3+TPgLFLuL7HBUCSJKiCV8s0zagK5DgOXn/9dXzta1/D73//e9RqNezevRvL
      y8sYHR3FwMAAPM/DysoKxsfHP3Gj8kmnRgSi6QmiysPIyUqlEq+SAtbcmyKPJouIxncO5jZN
      olcXXaIbTYgTMV+fh4GQq0lVVRQKBayurvKmHlFVDRjrT+OjWxZW7BUMptcaNbL77+vrQ7qc
      hmvLoIKXp2Y3kNINfk9eED6flGHy81OpVLsNwCgNr1y5gnw+j9u3b6Ner+Ott97C4cOH4bou
      JEnC/Pz8J940+0mmRsxms/B9n48/rgp5nsfTzoMggKZpqNVqXKWLtwhVFbajrBXSi9VgmUwG
      jUYDnue18Qg9CHziA4imcpimGSnwWTPaQxpGBSo84iVcLbwvQzOQSitYbfgYzobBwlzKChPg
      pDAGoUgyfKxVlrHkuIgA6LqOF154AcViEV//+tfh+z6PKj733HPIZrOo1+u4fPkyXn755Qd6
      EPeDgwcPoq+vD57n4fTp06jVanjqqadw5swZVKtVnokqUiNevHiRG3Ojo6Nt1IjbBc1mE/l8
      vuOYWZqBJEnQNA1BEPDfrxM9OKEUjm1DawWbWAMLRmPJJnsQBKAIOUZVVb1v/d91XaSVNFw1
      2imGUWQyhLZAyOpQcgBVt5Ez1uo24veyN7cXy6SK6YU0RnI6XN+DoenQFBWKLMMPAmiKCl1W
      4REfuVQWfquoPiIAkiR1pDQUwVKgP2k8ydSIvu+3Bbai8YCwB5auaPB9nzfM0LSQRlC0J9gE
      UmQZKd3kbYlM0wyzJA2D88EqioKV0ioUSYbnefB9H5Zlbbg2IIzWltCHPrxX+hifpgciKg+7
      FhO2gASAquL6vQZ25SkyWoZ/XqlWwzpfEsAwDOzL7cPVxZ/C9cfRcF2AEujqmpHPbIeAkJB+
      pSXA244VYquxnagRgVinE0UBDSgPajmOw92VbDIzOkXRfhCrvJhLtFarIQgCFAqF0EUqSfAC
      nxec12o1nrvTy/MihIQ5QQBMyURBU/Hu1DJODGd4dikDEwZFlrFU99CgqziUGYheLwhAhGuD
      AiP5ETSpjQ9mgGdGjcjzEcdBgpBUWGu5fjevpchjgNdvvI7//MF/xj9+/I8Peygd0anTiWEY
      vJ2p7/vchcoYv1VV5Y4D8XwxoEUI4ZM/IGueo1wmy92UwJre3ovL2HVdrKyu8JWdguJALoff
      z7yLy7Pl0H4hBHfKJSw16lwYlhse3p9dgZaawjODa4EwJuBAuKJ7bljIczR7FCV5FoN5FZML
      NgiNChYAHmNg9QeE4vHMBmX1v0tLSxgfH+e8NusxWv/p//OnuFy9jDO7zuDvvvR3n9BoO0PM
      Bp2bm+OTV/xhRW+Ibdvc7y/LcmK/YFmRYRprrHD5fJ7n5Nfrdc7/Y7sO8rkcMq1EtGq1ytUV
      Vle9HhzH4eeJcQhJknDHvoNf3Z7Frbk0TI1gYtCCGxDcWK5gINWH4Txg5Wbx8vAr2NU/FBFa
      Qgiq1Spsx+ZxDEop0tk0fjX7K2T9Q5hZ9HF2LMcpYRiYq3e+YuNGaZtlg7KaYF3XcevWLezf
      vx+e5+HatWs4ffo0TNPE0aNHYZom3njjDRw8eBD1eh26ruM3v/kN/vIv//Jh38J9I+7nFyeU
      H4QrvtiJXdO0iHrBfftkLXDG8n+A0MgW6datVBqGbvDzNkqFAoS7EttVxHsAAGJnIflpfPkM
      wc35MlZtFzJUjA26aPjXcGlZwv989MuQIPGFQFTbstkw5YF1rdE0DaZm4rNjn8W5j88hk1fx
      4exeuD6QNRRkTRUUQKkZwPEJoFQhpaa2lwDkcjlMT09z4tb+/n4sLy/ziT48PAwAuHjxIk6e
      PIn5+XkcO3YMCwsLGBsbe6yoEYE1F6giK3BdFwEJuFAkNc4QJ2ChUOCvmdeMrdRMD/c8D41G
      Y90SyG4wDAOVSiXihnV8D+du3MS3Tj2Dgf4BnMquYMVegU99ZLUsFKpicnERb926jc+Mj6Na
      r4EQEnFayLKMVCrFhYvtjgoUnOk/g8XGIq6SSWgAmsREzdFBQaDoTagmQU7L4Xj/K9tLAEZH
      R9u8OizhbXFxEQBw6dIlPPfcc0in03jmmVB3zOfzOHz48Cc72C1EXJ1gSWbdtFlm4BqGEbED
      fN/nPJuiv58Fph5k8gPg+UNiSsbv7szg0/vH4Pphwp5pmOhHWK/gBwFUVcGp3Xvwf334EQIS
      8PoGz/NC96giQ2/1LGbXFOsWKKXoN/vxov4iJEmCTWw0gyZUWQ0FTBIiw/d9Z48YGD8R+/d+
      8CeH/gSvkdcwmunsOn3YSDKA13NHplIp7tKMT2Y2+ZOuJ0Z/HwSWZfFiG0IJ6p6P/YXQhV2r
      1XjzDiDK59NnprDabGLAyvCkOUVT0bRt6JrOO06yCQ2s9REDEBbVKyoyegYWXfNWiaWZO8lw
      Ar6050vcs/EoPA8xGa4TH2h8JxDBdOV46jLTmxlplXiu6N+Pk9LeL1ggMghCbs6UpoZuW0pR
      q9eRTqd5sI6NQZZlpHUNjVaeEHseFIDVigWFahuFLK2NmRX4s13BJwE0qBGhJpRCbb3eSYYT
      8L/96DJul++PE/8bp/fgX5/ZXBYMUQiZQZm0Wie5RiUp5EAS3/c8D0EQcH2fgQmD2Iha7OQu
      CkDTtlGulkEB9OUKMHvMnhXHUXc9NFwXaV2HLEtoNBq8go3QMAdIpjKWGg28um9v5NxsK5LP
      1DRVGDPQCm6p4YRXKEVAAjRdB7IkQVPU0Phv9Q8j8UhwEAT4+c9/jldffZUXkczMzPAHxvTo
      6elpzM7OIpPJoFqt8hSJs2fPbmq38o1gZmamjftnfn4ew8PDWFxcxNTUFKxWFZPrutizZw+W
      l5cj1C2X5yr3zQv0woEHpzzshmazyX9YoD09GljL92GtTCVJQq1W4+2OxKJ3MaGO2QfiJGKI
      uzsNXYfbWpVtx+5ZAFRVhdvKQD01sgu/nr6LLxwa5/aLqqqwLAv1ZgNe4KPpufCEumEAEUaK
      arUa8YiJHjD2XFh2aUAIb6ukKSoIpTBULSTMFQdJCMHq6ip++MMfIpvN4sKFC+jr6wsZuQYG
      8MYbb+AP//APcevWLXz1q1/F66+/jmazCd/3ceTIESwsLHBPzFaA1QSbpom5uTk899xzuHz5
      MgghKBaLOH/+PPr7+zE3N8f7D3/961/HwMAApqen0Wg0eObhxx9/jFQq9dC5izaCeCmk6BYU
      kclkuF7N/kvaIUT4vo+AkrXVkRCkUqm242RZhpVKo9ao91wVxuIKoGEDjNFsFu/MzOJuuYzd
      Lc9Oo9FAKpVC1spgpVLCDy9P4kuHDnFSK5bjxCAWALFaBZb1Gi/7VGQZgawgIEHIGSTLaHpO
      e38AQggGBgY4U0A6nUaxWAQhBLquY8+ePRgYGEAmk8Hvfvc7jI+Po16vI5VKwXGcB+Lm7wWF
      QgEnTpxAvV7H+Pg4CCH41Kc+hXK5zIM+2WwW+Xwe+/btg2VZuHTpEi/kTqVSGBwc5K2UZmdn
      t3S8m434ZEzS21meTqVSaUsyY8dS2uLFFD4Ls0FJRH/ulPPf31fkyXO9INS7SURg/+Spo3h9
      8ioml5bx0t7dsDQdjUYDc80mfn7zFl7csxt9KZMfz3YcJnQsJywIAn7PLP+JM+SRtc4xmqJC
      lZUwLRprO0XkDgzD6DnFuZfG1puNTjXB94te6BIfJUiShLrTDDMbhY7n4q5Qq9Xa8vklKVrk
      QihF07WRNsyIS1BrNZJm5zKOHvZaTETcSE2wLMvoLxSx2iKvpTRkaPj6sadwt1zGP01ehUNC
      Aq3xviK+feY5NJsN3vqI1QbEGfHYeCRJCuMgLYHnCXbs2UgSZIQMdaIgSpL0eKZC3C/e+XgO
      vtT7DytiT18Ke4ub110GaCfGkhUFTdeGqigwVL3N9x0PdsVVAWBNGOL8+eJ1OtlxmkC5slFb
      r16v86qygBDIwljjhjbT9cv1KjRJ4eoOm/RJOUiNRiOxbZR4f17gw/HcVl3kYxYH2AwcG8k9
      0t4wRQ4pBkF7r8rqxIggTn5RlYr/K57L3LKNRoP3i2Cr7noCoWka99ErMcGNn8ua8aX9FDyh
      PRNFKEgUYU8A8TymhosesfjaHjbkUxG04geaou4IgIhv/+Tbm8IM92+e+Tf4t8/+200YURSS
      JMFQda4aiO+zf+OrflJ5o3heEkVKfGLGdxBRFWGNt03T7Mobysht49Tr7Prcj++FFYdBKUA+
      n0dFiIUwwSmXS9BUDZZl8d2AGcliRLxTzYIiy5BpLA6wHcBqgg3DQK1Wg6IoyGQyWFpawuDg
      IA/dT05OYm5uDq7r4uDBg0ilUrh+/To+85nPPOxb2BTIktw2ecRJ2mkFZxBfi25EsSSy00RW
      VTXCs8SEpRfGOGasxht8EEp54boiK7yii7lzWdIbK2eUWpQuTPhYBVzTbkKW1gJq3XZJ9tm2
      EoCbN29iamoKQNjN5sUXX8SNGzcgSRKGhoYwMDCAkydP8rLHQqEAy7IwNzeHS5cu4aWXXtr2
      yXCdVBa20sfzhNjnSZFiBsMwQtdgBx1avJZoCIs5Q6ZprmsYq6oaruqtRhw88U7w36uKAqV1
      L8ygF3lLAUCWWxyjCA11lmcEisju2Esqx7YSAFYT7Ps+Tp8+jb6+Phw7dgxzc3Oo1+vo7+/H
      pUuXAABHjhxBvV7H0NAQCoUCDh8+vO0nfyedWZzYcRa4uPqS9DnL/Fzvuy3LauslLF6jF7Bd
      2vf9SGSbNbKIX49FqLPZLI85SZIUMaLFAFj8WQHd28puKwGI1wQziDXKSTXAvfqrH2V00+Pj
      On83xG0CVhcg6ubijiHaB/EFRFQ1GC1LL4IgyzJS6RRWVldhaOGuoQiTueHayJhrv3O1WoVh
      GMhkMiiXy/x7mAAlqXy8rlgCQNYacbSpg8wNyreRJxiPWr2AWMUmNsgAknuD9fJ+XD0CwLl5
      4seI7kmxPzBLX2g0GhEh0DQt0nOgG0qVMur1OmeJ5is+JXA8F2qL0QFYs3lkRUGqRaESkJY9
      gNj9tnaHOAIakuUqshxhyeBL42Z2SN+uuDxbhi8/WFgkZ6o4Nppf/8Ae0C1EI6pD4sQVyw/j
      q73oEuVpAi0fu6qqbX2B2bVZ8QmD4ziRRD3RTeq67rq1wpRSNBoNBCTgdcx8TDTs9i4a+uyc
      oLXLyLIMx3OhSTJkOZq6zYJmkhQW8oPSkAdJoIAUv2/76wabiP/1R5cfuEneCweK+P7/+NIm
      jWgNcWHotMomuUIZklyiQRDwQvj4tcX0CqZGioZvfHySFGZ2SpLU1SD2fR+KJEPRjKhR3ypW
      F1f1ODzPg5VhDbSTdz72t6ao8IMgrAtoRYNFtAXCbNvG3/7t3+JrX/saT05aXFzExYsXUSwW
      8Y1vfAM//OEPIcsyb3PKKowURUGpVMLZs2e3jI58dnYWlUqFu0IHBgZw8+ZNFAoF3Lhxg9M3
      Oo7DG2N88YtfxNLSEn77299yakTWY3h5eXnb9AmO6+Rxwy8pFsCOS4q4iscxtj8RnXzpnue1
      JdfFXbCO43QVALYLxQWNEAoirXlxVCht6ozjODAMo+PuGLeBWPtU8X6ZgDqO006Mlc/n8Zvf
      /AamaYIQwnPIKaU8l+O1117D3//934NSir179yKbzcKyLPz617/GyZMnt0wAKpUK3nvvPViW
      hXv37mHv3r3QNA3nz5/H0NAQZmZmUKlUMDMzg1KphPHxcQDgTbsBcKGt1Wrbzu5JSnOII/5+
      kls0fnyn95IiqvV6vWtcAehNnU4ai6oocMlab2CfhFxEQcvYVQXy3o0gaVHgHEl0o1fbRngY
      fYI3UwWK5wKJdIVA8gSNf7Ye4gITjwwD4B0aWTPtbjBNs2s6CSu0j3eiZ2ACQCiF3LIHxLH6
      JEAuk+XJb73cm+gBit/vY20DbLRP8FMjOaRSD+YMODa6dXSLnXRe8b1OxFmdsN6uoqoqVyt8
      328RTtEI5z67jiRJcBynqwBIksSpF5kal3gvaC/GkSSJe416AWVZb13G8lgLwEbxv/zRsUc6
      Ga6Tnh5H1avi48rH0GUdh3OHYaidvTLxSchWSdEVKiLk2hTObTWfSwq8JUFVVaiqCk3TsFoq
      gbTqONZTq8TzJUXGhbl53K1U4AUEhZSJo/1FDFhi4TuB47uwjGjahniPmUxmRwBEvH7jdZRI
      aUuufXb4LM4On92SawNrP+7dxix+NPkxDucm0PBtfHjvl/gXh16FpXUW7CTvULckOtcP6UmA
      cJU1VC3SvKKXgJiiKEinUrzLI4OEMFtZBCGkRXMO/OTadZSbTRzq68Mzw0PQFQUl28bvZ+ew
      UKvjlX17cbBYhAQgpZuJPQ2YULuu+3gKwP1SI77+8etb2id4MwQgvoqJXg9KKX5y7Qb+2xOv
      IG+GP+3Pr1t4f+kjvDL8YuQ6nbw44mdxTxJnVZZkKK14CSs0F8/tJRYAhDlI1Wo1zM1vqSqq
      pMCnBBIAGWsMdnOlEn58awpfmziMXEwN6kulcaCvCEopzt28hZurq/jM/n3QpKjuz9I5GHeq
      bdvbSwCeZGrEOOJeDSCcfEGg8skPALvzaVytJuf59OL/EFUkMWFNVcIaWzaGoGV7BCRAs9ls
      I+FNAuMpits2rf41ME0T6XQaS+US3rh+A99+/gz8GOOdCEmS8PmD4/hgfh6/mrqDV/btgamt
      pUsz96eu6yEDBSHbix06l8vx1keMGlHTND7R2QrPqBErlQrGx8eh6zqnRnzckdIVlG2f/+A3
      V1Yxmmvn9Yzr9p0mq1j91aYmtdKSKQ3pRwgJWRwY31AvSPpeFgV2HCckafjwIr5xfAJaD1Vo
      lFI8OzyMqutiqd7grZGYKz8IAp5Gr2na9toBnnRqxLiHJ2ny/IuJ4/j+hfMomoOouQ3kMlWc
      Hnyl7bheDGqW38OQ6HYUoq7smrlcrucERNa3oBOWGw1YmoaMrq/r9mRjBoAvHj6I1yev4V+f
      eAqe70FTNV7zIO6Y20oAumEzqRG3Ag+q/0cyHTtEaSmlyBtZ/A+nX8aKswJNGUbBKEQEh0VA
      RZdpp9VfpEUhhLT57j3fh65pbepYEAQ9C0Amk0m8NsPbd2fx4tjucOVucRclpYO3BeN0AwEN
      HaGqqrWliNTr9SgtyqNABfiwIVIjbgU2+ozjfYJFIYgHrOKBnoHUQFtynCRJnBgMWPP0JE0g
      RVEimbGNFueOOB5F0N9ZtRarzurFE8Suk8vlUK1W0bSboUsVlNc9LzXrGMpkIasKSpUyNEWF
      Iett14iDUopBK42Feg0jmRzQegZst2Gp1DvUiAIehBrx3/3RMRzfpCxQhrjAiD90fBXslAQn
      7hasvLDTNcVz4t4lkqB+iIGqXC7Hu8qXSiW4rssNYbmVgtyJZ0iSJN7TmCXDUeYMbY2btWhS
      erADGCxdR9MLg3cy1qgeWXVZmwoUp0acnJzEU089xT+/du0axsfH27a3GzduoFarcZ0bAK5f
      v56ody8tLWFgYADXr1/HwYMHN41K8WFTI1aa9yc4D4L4qp8U1BKPY00zeoH4u7D2rAxJ0WKW
      Ts0oGYMg4F1o2PerqopMJpP4m7NmfmJmqCzJIHTN3UrV3sbOUHMcZIoFBIRAVaJBPu7REk9g
      1Ijf+9730NfXh9XVVfzsZz/jjQgymQzeeust5PN5zM3NIQgC/Nmf/Rlc18Xy8jK++93volar
      IZvNotFo4L333gMhBAsLC6jVaigWixgdHcXvfvc7HD58GL/61a/w7W9/u+cbetKpEUXEV/JO
      E5+9jn/GkKRTx3cRttJ3UmkIIahUKqg1GxjdNYxsNotyuczHwK7l+z7K5TIsy2rLFmUCwtUz
      KRzTkJXFfKWMA7uGefoEuy4ro+y0iy01mhjKZBEEAbzAhypHUys6UiOyetrh4WHkcjnMzc0h
      m82ir68Py8vLME0To6OjyOfzSKfTqNfrKBaL2LNnD6rVKiqVCoaGhqDrOqrVKi9ZNAwDmqYh
      n88jk8lwbple8aRTI4pgdkASkjJC2b9spRUZIJL0ddu2kUqluK+eqSjxTFHmTvQ8D6oWGpss
      uksp5VycAGDq4e/fi23AxvT8nlH8duoO9g0OQVYVeI7Ldwo5QdAZSo0aZKk1yVsxC6/FJg2E
      O5yiKL1RI548ebLrYNeLsMYhqlUbwQ41YnLiWpL+H/fwiEZtkgCIYDZAtVpFLpfjjfEY9ya7
      vth7QNd1aJqGarXKjfeAklB3l3UMFvvX9QyxnUa0QfrTadRcDyv1GlRQ6LoeKchhMQhN1cLA
      XCt6fO7mFD4zvj/0+DhNpHQTkII2r9dj4wbdDPy7Pzp239SIW5kFCrQnrYl/x5kegDUPD9v5
      xJVXURRexB4XGPH7RJ85EN1JmMrCzmW1I03b5qusJEkYGdoFXevtmRJKYLsOb9zN8LWJI/je
      ex/gW6dPIZ/PR9KyJSmkSAmpHsPv/WB+HsV0GsOZsJFeSjciXWHEZ7cjAAIeZWrEuNog8gAx
      iOwOrDeX2FOA0rCckVWAJa384neJXSRFCpN4bpDneajX62i4NiQa9uNlhUe9tFNlUBUVKSNK
      ShAEAUACfOHAGP7unXfxL08ex0g+j2w2yz1Nq+VSWCQvSTh38xYoKL7QCpCy1GvGGSQL7ZTa
      bIAnHQ9Cjfiwegu35dG0VvykXBxKaWTlFIVAjAmw16KNxnJn2HXE1Z/pwJ1cwQAAGetJREFU
      /Gnd5H79jUx8BkJIayLLfGWXZAkp3YCuavjzZ0/iJ9dvoOZ6eGbPbgylDRSyWdyzbXxwZ6bV
      UWYMB1v0/iwOUigUUKvVUKlXoerRXWBbCcCTTo3YzXhkKksul2vTcymlPPtR1K+TjF8xaUxU
      scReA4QQuH6o58e7U/baRDsJjOaEq1rC/5la9bWJo/BJgGtLK3h/ZhVuMINd+TxeGtuLYkIp
      ru/7If2KrsF01xLjmNq4rQRghxoxGewHFau3RIg0JklpBElCIRqs8UZ6sixDb0XMmcErCs6D
      IJ5anQRVVnBsaBDHhgb5calUqmONN0uHT6px2FYC8KRTI8Z99uKkZEG+OOr1OncRxwNn8feA
      tQkoRm1934fredDUtQYabEVmLlAAiS2VegWzT/i9Cm7OXs5NEvykmAd7jx2/rQTgSaZGZCkF
      wNoPzpoUplKpROFmag87X7yW+De7NnONMrJcBlXTwr4EsfEAYRG80mpk3SnVYT0wbiJmwNMN
      TH7xGkmCLEJkhOP3QVtnbDeKkK3Ao0yNuLi42PajWpYFTdM66tyUhhw9QRDwRtTsffFfTdN4
      tF+SQmqc+HeVy2XuFqVoLUb3SX/DVnvGJMdcskDoqRHtAObnV9cphk+lUihVy0jpJt/V3FYa
      dDxgJmKHGlHARqkRXxzf2tao4g/Gsi3jn3eb/J7nQdd1bvzGVQK/RU3IXKO6rvPEtTiy2Swc
      x4Hv+7C7VGX1gmqtCtt2oLQIqyIu2RaRg5j52mnyU0rDzpaahobT5H5+dp+GEH/olAS4/XWD
      TcRGqRFv/4evbuFo2sGMXTYxulVdsRU2btCy6wCIENO6rgtN0zqmg4v8oIwkdyNwHAe2bcMw
      DDiOC0VQR5KyXJNW6zhoK2eUBATZTIbvdkl2SKd8ociTWVxcxD/90z/h7NmzkCQJi4uLGBoa
      gu/7WFpaQhAEGB0dBSEETz/99EafwQPjSaZGBNqNvU4eF7Z6suis02HFTsoivV8XZtK1KaWw
      HQee54bCCAmVehVpI9VSpShPeovHMzpNWAa/VX7JngYTYM/zEncwdt3490QEYHBwEMPDw7h4
      8SKWlpYwNDSE1dVVEELQaDRQr9dx5coVqKr6UATgSaZGjHtuGFtCJzQaDb4LxCO4DPG/3VZD
      OjaB5hbmAQDFQhHGBt2b5XIZhIRU537gw9BC9conhHeolKjEg1Xxe42Pj70Os0AJZ5ZmU11R
      lNDgZ7GKFh36emhTgb7yla9s6EY/SUxMTGBiYqLn44MgwOXLl1EoFB7p++oFovtSkiRYltXR
      5Vit1eC4bmLxSLcySEpD3n/mCMhlslgurWJxZQlD/QO95/S0AmdASw+n4Lk6lm7C9V2YLWZo
      5oHiKdNB0MY6F38OhFCuvrGdptlswrIsXuyiyEpE8JkhzRYPdt5jbQM8DGrErUQ8rTkJlFI4
      blTlEXcOx/dgtiayKARMMJieLkkSrLSFhm2j0Wzg3uIC0uk0MmkLht65bNRxHJ41yoRWF8aq
      KApSrQnuB36EUMsP/FbxSnI3F8/3IUlhICzuz2fIZrPwfB+u48D1XPitDFGKMNeoLaOWikrR
      Ew6RjPZRQJwcl2V06rretZaCUopSqRSpBwbCCc8mHQUivnZxwhmGwb/X9VystFjBASBtppDN
      ZjvuPqxhdVKnRnEHo5SGbG9BMpdp27Fd7pWt7pIsQZEVeL6PVCoFEgSo202oshLZDUVnwmO9
      A2wU90uNuNW0h0DUAOxGPy8mrCVdg6kBWothQRQOz1+zFzRNC0mkNB0pw+QxAN/30Wg0Oi4U
      rJM7Y3pgdpYXhOkUIttzGweiADb5JUnief5tkV1KQxJd5v5EOLEVWYbbIukNgiA8rkM27WMp
      AA+DGnGrBSApRTkJtm1zOnBGXCuez1ZW1l9XZJ6QZZlPykajwY1sxvTAglSO40BV1Y4uU1Yc
      r2kad00SQsKilZibUhyX6OUS7RRJkhM5npOixaJAsyYvzC4QP2N/bysBeJKpEbuF+EUwN2A+
      n+cMCEntj4DQSRD65UObQdTH2e4QSS8QXJbVWg2QJBi6jqXmEmZqM/ACDwWjgLHcGHQlFJ5s
      NotSqRQarZRyL01cx6c0LJ80daPtHuV11CBR1TNNk9cW+77Po/tM6Nm9bstAWC6Xw/T0NKrV
      KqdGXF5e5hN9eHgYwBo14vz8PI4dO4aFhQVOjfgopTpsBOwHW89Pb1kW763LVmFCCGzb5qnL
      PO2gdVw8k5IZ2WxS2bbN8/S5x4ZSTC3exgerV7BQTmEotQe6ksEldxXvpm9gvL+IM7vOwPO8
      sPa2xRrRycUpyzJM3YgY+gzrmamyLMMPAuimAdtxILdiAqZpwnEcvgMwXlAAa0HCdZ/8I4Qn
      nRqRxTCSPCQMYtSX/fipVAqWZXHhqFarPIos2gHA2srMUmNs2w5XWETzaeYac/jZzas4nHkW
      X9ufQd4ykcvlQOgBXJgp4+b8HFYaP8PZvjO8VqEXtOv5JFLMngQ2VkII2Ld4ngff95FOp1Gt
      VkMbx/NgmqE9k0qlWJf6HS8Qw99/9PePlBEseoFWVlZgWRZs2+YR7fUQBAGq1SpXDcQiF7Yy
      s+J3LhCUwLIspFNpEEKwsrISDaTJMnzq4f++/M94YeglHB2yeCWXpoaMH6qq4s5CCW/dvIld
      hWU82/8s5+XshngzO4a4kDJIkoRMJoNarcZfJwXPTNOM2AHiMTvUiAIehBpxK56faKAy9YUZ
      wd12AQZFUZDL5VAul3mU1/M8FAoFfp/NZjPCsmBoBtKtWIjYCJtQGroSKcX7ix9iSDuGiV2Z
      iH3g+z4qlUq446gER4f24qPFmzjeF94HS0eO/y1JYU9fmYaGcqcIsAjGVMEmfyfbiFLKO9I4
      jtPeRZL98Sj5vx8WNkKNuBVUiHEkCZVhGqhUK9B1Haaxvj3DiuPFXsD1eh3pdJqvjixlgnV6
      B8DthrUuW2sT8PpSBa8OH2tzowYkgO/7fFIeHUzhnekh3K3fxYHsARBCoOs6PM9r4xll7tFO
      7ts4WPo2u0cx9SHu7alUKkin09wbJSJiA1y9epUXUDz11FPcYJiensbY2BiuXLkCAJF0hOnp
      aTSbTRw9erSNWhEA7t27h1KpBFmWt1QP/6SpER8GFaIsy2jUG3A8d938eBG6rvPVUpZlNO0w
      UMVKR1nXFJE6pVytwA8C7moUPUQrdYLhbHuvXkWI0AKALAF9ZhEVd56/F89gZWpLt+Z+8R1A
      VdXIdTpVhIloNpvIZDJtXrHIU6zVavjlL3+JSqWCffv2YXBwEL/+9a9x/PhxPP/887wo/e23
      38bi4iI3rFzXxZUrV/CVr3wlbGjwwx8il8thcnIyDE17Hnbv3o2f/exnePnll/Hss892HWwn
      POnUiCwBLgiCSJIb0L1gHlijB3FdFxJCg5DRWCYl1rGqrIjblLDWRUDQcluyPr5JFIXNZhMB
      AmjKWvCrU+JbUqeYTq8lKSTPbboOLDPFr8u+P5fLIQgC3rWefY+Yo8QQEYCJiQkYhsGDIIx1
      YWBgAAcPHsTVq1c518vZs2cxPT2NPXv2gBDCo38DAwMoFot86+3r64PjOEilUti/fz+Ghoa6
      /lDd8KRTIzJ/NvNolMvlsNNhDyWfzGBkWZrAWrF4fPKXSiUQf63EUHRNEkIwktcwvWrjyGAa
      XuBDkdo5igCg6QWYrU3hD46ehkzktsnPwDJQk9ImxOxUttITQmDqJjKWBZCQI5RFylj/A7ar
      ua7LicBc10U2m+V2DxATAMuycOLEiY4PMZ5YlkRxmEStuFl40qkRma9enBwbceIxdYd5hgDw
      mmKxIjCu2xNK4HgeDFWDqih4fvQgfnrlOo4MPoOABIAcJqjFde/371Yx0ufADEwYpsHtirig
      sNWZ1SUrihIROnH8DK7rIp1KodloQkYYY2MZsqqqwvM8ZDIZXknXbDZh2za/X8Zmt63iAFuN
      jVAjbjUVYhLEIFZSoKjTJBLBAkT/f3vXsuPGcUVP9ZPvoUZjSJBGjvWwYEu2Ya8cBNkESLTI
      D3iZj8s+P5AsvLHgADHgQEkwiDCSLEXW2JJG5JBskt1dXVk0b/F2dXVznJER0e4DDPiYfhTJ
      W1X3eS6pB7SbEKyTSgFKrVWMy93LuLj7CH+5f4TfvnvRep9/P49wOPs7fn/jQ6Qy1bswuXIp
      KMZX9yqmakKBPl0pZDIrpHdHUYRer6cf6fsijYbsW3KJAlsWCf6x8SZTI5rg6ctkZ52cnGgV
      odfrVbp0KUKq82GYCkWCaKo+oR8UcovuvPNL/Pmbv+KPXz/Hp5ev48owhOs4ODpZ4OD5CN+l
      /8Lvrt3G+db5VcZmrv7MZjOEYVgQSJ5ywXV2gi0rlGeLEnzf1y5PSn1I01SrePz6euI0gbA1
      PvvTZ6dOhrv3h3s/8mjK6dBBEOj0BdKnPc9Dv9/HbDYrcH56jJ/ThjiOMZ1OdStSQhRFOJlM
      ACCv291QWfWf2VP87dkDHJ2kSLMMu10HN84P8PH5D3U+UBVoN+BxCCGKBTJVEwJAIdGNEASB
      /s5I4JfLJVzXxXQ6Lblft2oH+LlTIwK5GkA6LnEDzedzrcboyqo01Ss5b1dEx/i+X+LwXC6X
      iKKokDu/qaxwv3sZ+zfstpRNpeGg3cBxnJIaZnKV0rjpM1BKg5mwR5mq5DCg10QPT6ofqYpb
      NQEaakToai0pJXZ2dnSGI23pvu9rD8disUCSJEiSpNS6lIxFglIKr8YjQKlSViiEsKYeL5O4
      nOPPUMfWxgU2CAIdn8nvt6aBKWSjriYFuYI5kRafHPP5XC8UVDlHrmP+ebvd7nZNgJ87NSKt
      5oPBQOu14/FYr2hEcDWfzwuZn2Qr0MJgQ5zEWCYxQi/Q/n2gOsVAZlmBd4fGZ7u+aU+YWjeN
      NQxDnezHG1sDqx4EULocku94NhfqdDqF53k6AZB2AYqfbKUX6OdMjQisDVRgbRgOBgPt16bV
      3nZeFV8OIZMZWn5uL6SZRIDiqp4bsWrdxT1Zor2iQwdW3iMouKKcpHea3B4hclaKxWKhhZXI
      fmmHC8IA3U63wP9TdS0+eeI4LqmJjuPkLlkygreJIuTHwptWL8Cr2MgIBvJVud/vlzJCqVkd
      N/Q8z0MQBFp1qsJ8Pi/EGbIVfYkQeYpDKiWWyTLvuM5ozOmacZrn1/s1KRr8eFO/t0Eppd2Z
      EMA0msF3PN2vjI7h1+d2By0QvDWq7/t2N2hDjZh/mWf9Hs5aWB9FkR5D1ViqyiKFELoSjLb9
      TSkSBFMYE5nbEe7KCPZcF0K0Cg0s6Dyb4CdpaiXU5e5L856lKjHk3ycZrAKAVFJ/R4vFQnvG
      iF+UjytdtWolZwDtAGEY6uN/GrrBa8LrWP3Peo1N6dgk2CbG47E2/Iix+bSgFT9XbWLNouAa
      bUXz9xwkMqdL74RrFYirQhCAtYgX9dSHmVJQjAjXYdc0dXxKrwFy9SxJ00LppBB5J/vlclkY
      o9nzuJkADE+fPsX9+/ext7eHLMvwySefbDxHKYXPP/8cw+EQcRxjPB7j4sWL2lCvw5dffom3
      3noLjx49wmAwwKsV/ciFCxcgpbSebwZ/iLWPflTSd/v9/qnpyiknSKmc9z/L1gEvnrevVF5o
      n6sZK35Sg8iKPDU2VaguwQ3IBT6WGVxnc60DRXiB1U6pVIFkwvQM8Qgyx+tp0/4TwYsXL9Dt
      dnF4eFjJp2kiTVM4joMHDx5oDw0l4G1Ct9vF999/rz0VT548Qb/fx+HhofV88t/zHWAymZTG
      qpQ6VYEOCRHX/efxEotkmXNveh52d3e1MGVKQSkg8HyEK4O5rlSR4zSktxRxllmxIV+yimnQ
      MeauQ+9V/Y/f15yAzQ7AcOvWLXz77be4detWLfMyh+d5uHTpEj744AMkSYLJZIKPPvqokpKc
      4+rVq3BdV9O4XL9+HaPRCLdv3y7ptOS355SI5nZOcQAeCzBBRiKNlQedHMeB57iaw4d2EIo8
      CwBZJiEcr0rD0eOoes0DXLYoL5BPqmTF7Q8AtLZzlyxXdepcr2bKhBACo3iEZ9EzRGnUpEJs
      C2zGtZRSpzeTcDiuA8/zIdMUOzvFirU0TXWq8Gw2y9MQpISzYlQD1u5Majg9HA6xWCz0jrJp
      UtvA/fR8JebGcFWqdJKmuVuUtYU17YFOp1PYMc3oMB3/ePoY30y+QSAGkMtdZFnY7ABnwXQ6
      xd27d/H+++9rLhrq2nJ8fIyDgwPcvHkTOzs78H2/JJBngVx5OOjH1slxyyWGYQvKIlC8oyPt
      EELkjGp0HVqhqXgkiqKCYf5Dhd/0FpnvEbitUYTSjTSqkuGklNYqsfUVFL56/hVc1YOc3obw
      Hdw430Yv9JoJcBb0ej0Mh0M8efIEUko8fvwYe3t7ePjwIa5evYput4svvvgCSZLgzp07r3UC
      TCaTQnXTcsW4TB1fbF6gNE114RIJSyHtgbUnIoGL47iQc/NDYZsA5spcd11bkTwXbh4ss7lW
      AeDrF1+jpS7g5UkXv75+Dq5Yj62ZAGfEe++9p6lFrly5gl6vh2vXriFJEuzv72N/f79ANvu6
      0Ol0MBqPkEiJlh9ounEAWs0xQXSGVQY63wn0Ob6Pfq+neZf+V5i5/ObrOpi7EwcFtvhk4m7T
      l8uXkJmDV6MufvPuudK1mwlwRgwGeWEMZ2ve29sr/f91g9J+yYND/J3D4RCz2cy6qnY6nUJV
      lmkoJmmi0xAypRAGAeSKXtB0vdpyhBKZAgqFAJiZg8/tgaoVuw5VhrN5DB13MDqAiG7h03cG
      hXsKkfcWbibAFqPb6cJ1XG2gUrKbjTpdKaUpS0xdmh49z8e54VBHXh3HgcwyHH13VEh8q0qQ
      81fM0xxcYLm3yWYM22AzeukcU+83P29uzDtIJNDxXfY51+kUzQTYcrRarUK7UVsAjKrFCFXG
      aMvoDzydTnEynSDwcn7RNJO680qV/98UZJlJKEAXzpeIby15/3VRbJoQxGRh2+3o9Wg5gpN1
      MWyvxZziKLRoNBPgJ4Ber6dpTkwBoybUwFo/thmhlI5MHqC8KYZaE1YhN5LjONFZo6eBpNJD
      Z83/w5PVNvnzq8B7JJifh95LsgRK+Qi8/H6tVkurgIQmErwlSNO0kltTiLxrzO7ubmn1jKKo
      nGTGVlx63m63tSt3PB7DEXlsQMcXhEDLD9EOQmvvMRqHeX+1alhBsAWz+Pk/ZBIQ2VUVQieE
      cBaYLfPvjdjvCu7XU9+twf8VURRpjs/TYrFYlDrE049PDbHJKKVEMVINzDQDgsn+xnHu3LnS
      BPA9v9Skw6ay2CK25pg5pJQ6FtJut63X3Al3kIk5ZnE+AVzXLX1/zQTYEtAPHEWRtejFhFIK
      L0fHiOIFMlVum+R5Xt70rtfT6ROz2cwqbI7jaCZp+qP+A1xQiSCtavzc68SNWVtbJ7PHmEnX
      Qv5/2hUr0yqEh26YYSpdXRHGJ0uTCrElODo6yhnOMonQzwtciOPehlkU4cWrlwDyNGZqV2qC
      B72AconhJm8NT2Mg2vbxeKyvze/DH23qjy2FwZY9SuOgIp/5fK6L5PkKL4RAlET4x/ifiMY3
      8atf9OE5xu7WTIDtwNOnTyFcZ6VSrH9EvxUgyxRc10EmMwR+AJlJnEwmcMQ6XTnw/NqcGxPk
      aQGKrkfbBOBqle/7hWL1umQ1fq+qSLPNwCVIKbVhSz3PKCrMx3aMYzw7eYHj40v4eH+AizuM
      T7SZANuBw0cPIZFhHi+QKYV+u4teq4M0y9MU3JWQDwc7OB69goOyXg2sha1Kt+YgFcc8dpOh
      Wie0tmN45HZToMv8P7WBIs9Ou93W3WGCINAu4YPnB3gWHcFdXsds4aAbuOi1mlygrUHoB2iF
      IY6nwCJewhECMsvQCkPMV22MWmGoW4cqpbBM10RZraCl36/LrTFRpY5sQlXeT92xtom6TGP4
      rlfg/ueTWvf7XXElSSnR6XQ0LxLxAL3dfRt7wR7uvboH100Qqw6Ok1azA2wLqFE2Icsy+GGA
      aZQbrjv9AZbxMg9UybygPU4TXdroOmXqEKB+R6BONPw4YqbbpLLQOVX/t51v0/+niwie4yL0
      g0oKdSGEVoWICIvGarM1MpVhGk8xz+bNDrBtIKGRWYYARYGbLxZrYREC7VXXRe5lMQ1eek3C
      Zerj5qps+vFtu0nd6m/ej97jJLf8Or1Wp1KF45jP57rrjRkv4Z+ZAnH9oI+BGDRu0G0CF1wI
      IGQtkqTMvUOtIHdDcgOWCxAXNJsw2oJm9GhOjNMIf91nsY2hKqprjsG2e/Djq2ycUipG7Sgb
      vFngeeyOiyiaIfSCPM9GZji3MyxOElgKz5kAcAHkq79JIMuvZz4vDE9sbndEsKVk8Ouf1ktE
      1yLqQ1IT+STnr81rNhNgi6DUWvgcxwFU7uMPVkUjVWnKttXUFECuAtkK2KtWfNtrW94+P0YI
      gUUSaw9W1eSyTQIauy1GkCSJJgwwdw1zYdCf1TrKBm8cVC796+crcOHlenDhPJRXRNv1+Wpv
      E0RzVynl/dQYwOY120EIz+Ad4mOsc4tS+aR5TN3EA1Da2ZodYItQJVBcsIgRjvf8MoXe1OVt
      17cZwPSa7uV5XqnYh2d52iYhRZhN4bV5fwg2OhSbLSKEKFS72dQm2/fQTIAtAm+MQTB/ZJ3n
      bmGP26TS0PubjFmyE3ivsbp7md4nUxDrbAZa7avOpfc1dYvh5arbERoVaMtA3hJ6ztUfvlIS
      536dj99Ua+i5KYzmykvghfU22FZe09gm2Pz7/NGWm2SOrdVqadaLqtXfNPibCbBlqNOx+ft8
      Ypjvmy5Q2ySxqVe2c+vGYd7XnIBVQS2b7WHq7rZJGcex5mWtU+/MXgL/BRJTMfzCuFoUAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Person' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Person Charts' width='192'>
      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
      NbIDyDzW/P8VrRxbd35AtAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Person Home Location' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
